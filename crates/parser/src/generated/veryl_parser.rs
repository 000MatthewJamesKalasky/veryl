// ---------------------------------------------------------
// This file was generated by parol.
// It is not intended for manual editing and changes will be
// lost after next build.
// ---------------------------------------------------------

use parol_runtime::id_tree::Tree;
use parol_runtime::lexer::{TokenStream, Tokenizer};
use parol_runtime::miette::Result;
use parol_runtime::once_cell::sync::Lazy;
#[allow(unused_imports)]
use parol_runtime::parser::{
    DFATransition, LLKParser, LookaheadDFA, ParseTreeType, ParseType, Production,
};
use std::cell::RefCell;
use std::path::Path;

use crate::veryl_grammar::VerylGrammar;
use crate::veryl_grammar_trait::VerylGrammarAuto;

use parol_runtime::lexer::tokenizer::{
    ERROR_TOKEN, NEW_LINE_TOKEN, UNMATCHABLE_TOKEN, WHITESPACE_TOKEN,
};

pub const TERMINALS: &[&str; 81] = &[
    /*  0 */ UNMATCHABLE_TOKEN,
    /*  1 */ UNMATCHABLE_TOKEN,
    /*  2 */ UNMATCHABLE_TOKEN,
    /*  3 */ UNMATCHABLE_TOKEN,
    /*  4 */ UNMATCHABLE_TOKEN,
    /*  5 */ r###"(?:(?:(?://.*(?:\r\n|\r|\n|$))|(?:(?ms)/\u{2a}.*?\u{2a}/))\s*)+"###,
    /*  6 */ r###"[0-9]+(?:_[0-9]+)*\.[0-9]+(?:_[0-9]+)*[eE][+-]?[0-9]+(?:_[0-9]+)*"###,
    /*  7 */ r###"[0-9]+(?:_[0-9]+)*\.[0-9]+(?:_[0-9]+)*"###,
    /*  8 */ r###"[0-9]+(?:_[0-9]+)*'[bodh][0-9a-fA-FxzXZ]+(?:_[0-9a-fA-FxzXZ]+)*"###,
    /*  9 */ r###"[0-9]+(?:_[0-9]+)*"###,
    /* 10 */ r###"'[01]"###,
    /* 11 */ r###"\-:"###,
    /* 12 */ r###"\->"###,
    /* 13 */ r###"\+:"###,
    /* 14 */ r###"\+=|-=|\*=|/=|%=|&=|\|=|\^=|<<=|>>=|<<<=|>>>="###,
    /* 15 */ r###"\*\*"###,
    /* 16 */ r###"\*|/|%"###,
    /* 17 */ r###"\+|-"###,
    /* 18 */ r###"<<<|>>>|<<|>>"###,
    /* 19 */ r###"<=|>=|<|>"###,
    /* 20 */ r###"===|==\?|!==|!=\?|==|!="###,
    /* 21 */ r###"&&"###,
    /* 22 */ r###"\|\|"###,
    /* 23 */ r###"&"###,
    /* 24 */ r###"\^~|\^|~\^"###,
    /* 25 */ r###"\|"###,
    /* 26 */ r###"~&|~\||!|~"###,
    /* 27 */ r###":"###,
    /* 28 */ r###","###,
    /* 29 */ r###"\$"###,
    /* 30 */ r###"\.\."###,
    /* 31 */ r###"\."###,
    /* 32 */ r###"="###,
    /* 33 */ r###"\#"###,
    /* 34 */ r###"\{"###,
    /* 35 */ r###"\["###,
    /* 36 */ r###"\("###,
    /* 37 */ r###"\}"###,
    /* 38 */ r###"\]"###,
    /* 39 */ r###"\)"###,
    /* 40 */ r###";"###,
    /* 41 */ r###"\balways_comb\b"###,
    /* 42 */ r###"\balways_ff\b"###,
    /* 43 */ r###"\bassign\b"###,
    /* 44 */ r###"\basync_high\b"###,
    /* 45 */ r###"\basync_low\b"###,
    /* 46 */ r###"\bbit\b"###,
    /* 47 */ r###"\belse\b"###,
    /* 48 */ r###"\benum\b"###,
    /* 49 */ r###"\bf32\b"###,
    /* 50 */ r###"\bf64\b"###,
    /* 51 */ r###"\bfor\b"###,
    /* 52 */ r###"\bfunction\b"###,
    /* 53 */ r###"\bi32\b"###,
    /* 54 */ r###"\bi64\b"###,
    /* 55 */ r###"\bif_reset\b"###,
    /* 56 */ r###"\bif\b"###,
    /* 57 */ r###"\binout\b"###,
    /* 58 */ r###"\binput\b"###,
    /* 59 */ r###"\binst\b"###,
    /* 60 */ r###"\binterface\b"###,
    /* 61 */ r###"\bin\b"###,
    /* 62 */ r###"\blet\b"###,
    /* 63 */ r###"\blocalparam\b"###,
    /* 64 */ r###"\blogic\b"###,
    /* 65 */ r###"\bmodport\b"###,
    /* 66 */ r###"\bmodule\b"###,
    /* 67 */ r###"\bnegedge\b"###,
    /* 68 */ r###"\boutput\b"###,
    /* 69 */ r###"\bparameter\b"###,
    /* 70 */ r###"\bposedge\b"###,
    /* 71 */ r###"\bref\b"###,
    /* 72 */ r###"\breturn\b"###,
    /* 73 */ r###"\bstep\b"###,
    /* 74 */ r###"\bstruct\b"###,
    /* 75 */ r###"\bsync_high\b"###,
    /* 76 */ r###"\bsync_low\b"###,
    /* 77 */ r###"\bu32\b"###,
    /* 78 */ r###"\bu64\b"###,
    /* 79 */ r###"[a-zA-Z_][0-9a-zA-Z_]*"###,
    /* 80 */ ERROR_TOKEN,
];

pub const TERMINAL_NAMES: &[&str; 81] = &[
    /*  0 */ "EndOfInput",
    /*  1 */ "Newline",
    /*  2 */ "Whitespace",
    /*  3 */ "LineComment",
    /*  4 */ "BlockComment",
    /*  5 */ "CommentsTerm",
    /*  6 */ "ExponentTerm",
    /*  7 */ "FixedPointTerm",
    /*  8 */ "BasedTerm",
    /*  9 */ "BaseLessTerm",
    /* 10 */ "AllBitTerm",
    /* 11 */ "MinusColon",
    /* 12 */ "MinusGT",
    /* 13 */ "PlusColon",
    /* 14 */ "AssignmentOperatorTerm",
    /* 15 */ "Operator11Term",
    /* 16 */ "Operator10Term",
    /* 17 */ "Operator09Term",
    /* 18 */ "Operator08Term",
    /* 19 */ "Operator07Term",
    /* 20 */ "Operator06Term",
    /* 21 */ "Operator02Term",
    /* 22 */ "Operator01Term",
    /* 23 */ "Operator05Term",
    /* 24 */ "Operator04Term",
    /* 25 */ "Operator03Term",
    /* 26 */ "UnaryOperatorTerm",
    /* 27 */ "ColonTerm",
    /* 28 */ "CommaTerm",
    /* 29 */ "Dollar",
    /* 30 */ "DotDot",
    /* 31 */ "Dot",
    /* 32 */ "EquTerm",
    /* 33 */ "Hash",
    /* 34 */ "LBrace",
    /* 35 */ "LBracket",
    /* 36 */ "LParen",
    /* 37 */ "RBrace",
    /* 38 */ "RBracket",
    /* 39 */ "RParen",
    /* 40 */ "SemicolonTerm",
    /* 41 */ "AlwaysCombTerm",
    /* 42 */ "AlwaysFfTerm",
    /* 43 */ "AssignTerm",
    /* 44 */ "AsyncHighTerm",
    /* 45 */ "AsyncLowTerm",
    /* 46 */ "BitTerm",
    /* 47 */ "ElseTerm",
    /* 48 */ "EnumTerm",
    /* 49 */ "F32Term",
    /* 50 */ "F64Term",
    /* 51 */ "ForTerm",
    /* 52 */ "FunctionTerm",
    /* 53 */ "I32Term",
    /* 54 */ "I64Term",
    /* 55 */ "IfResetTerm",
    /* 56 */ "IfTerm",
    /* 57 */ "InoutTerm",
    /* 58 */ "InputTerm",
    /* 59 */ "InstTerm",
    /* 60 */ "InterfaceTerm",
    /* 61 */ "InTerm",
    /* 62 */ "LetTerm",
    /* 63 */ "LocalparamTerm",
    /* 64 */ "LogicTerm",
    /* 65 */ "ModportTerm",
    /* 66 */ "ModuleTerm",
    /* 67 */ "NegedgeTerm",
    /* 68 */ "OutputTerm",
    /* 69 */ "ParameterTerm",
    /* 70 */ "PosedgeTerm",
    /* 71 */ "RefTerm",
    /* 72 */ "ReturnTerm",
    /* 73 */ "StepTerm",
    /* 74 */ "StructTerm",
    /* 75 */ "SyncHighTerm",
    /* 76 */ "SyncLowTerm",
    /* 77 */ "U32Term",
    /* 78 */ "U64Term",
    /* 79 */ "IdentifierTerm",
    /* 80 */ "Error",
];

/* SCANNER_0: "INITIAL" */
const SCANNER_0: (&[&str; 5], &[usize; 75]) = (
    &[
        /*  0 */ UNMATCHABLE_TOKEN,
        /*  1 */ NEW_LINE_TOKEN,
        /*  2 */ WHITESPACE_TOKEN,
        /*  3 */ UNMATCHABLE_TOKEN,
        /*  4 */ UNMATCHABLE_TOKEN,
    ],
    &[
        5,  /* CommentsTerm */
        6,  /* ExponentTerm */
        7,  /* FixedPointTerm */
        8,  /* BasedTerm */
        9,  /* BaseLessTerm */
        10, /* AllBitTerm */
        11, /* MinusColon */
        12, /* MinusGT */
        13, /* PlusColon */
        14, /* AssignmentOperatorTerm */
        15, /* Operator11Term */
        16, /* Operator10Term */
        17, /* Operator09Term */
        18, /* Operator08Term */
        19, /* Operator07Term */
        20, /* Operator06Term */
        21, /* Operator02Term */
        22, /* Operator01Term */
        23, /* Operator05Term */
        24, /* Operator04Term */
        25, /* Operator03Term */
        26, /* UnaryOperatorTerm */
        27, /* ColonTerm */
        28, /* CommaTerm */
        29, /* Dollar */
        30, /* DotDot */
        31, /* Dot */
        32, /* EquTerm */
        33, /* Hash */
        34, /* LBrace */
        35, /* LBracket */
        36, /* LParen */
        37, /* RBrace */
        38, /* RBracket */
        39, /* RParen */
        40, /* SemicolonTerm */
        41, /* AlwaysCombTerm */
        42, /* AlwaysFfTerm */
        43, /* AssignTerm */
        44, /* AsyncHighTerm */
        45, /* AsyncLowTerm */
        46, /* BitTerm */
        47, /* ElseTerm */
        48, /* EnumTerm */
        49, /* F32Term */
        50, /* F64Term */
        51, /* ForTerm */
        52, /* FunctionTerm */
        53, /* I32Term */
        54, /* I64Term */
        55, /* IfResetTerm */
        56, /* IfTerm */
        57, /* InoutTerm */
        58, /* InputTerm */
        59, /* InstTerm */
        60, /* InterfaceTerm */
        61, /* InTerm */
        62, /* LetTerm */
        63, /* LocalparamTerm */
        64, /* LogicTerm */
        65, /* ModportTerm */
        66, /* ModuleTerm */
        67, /* NegedgeTerm */
        68, /* OutputTerm */
        69, /* ParameterTerm */
        70, /* PosedgeTerm */
        71, /* RefTerm */
        72, /* ReturnTerm */
        73, /* StepTerm */
        74, /* StructTerm */
        75, /* SyncHighTerm */
        76, /* SyncLowTerm */
        77, /* U32Term */
        78, /* U64Term */
        79, /* IdentifierTerm */
    ],
);

const MAX_K: usize = 3;

pub const NON_TERMINALS: &[&str; 395] = &[
    /*   0 */ "AllBit",
    /*   1 */ "AllBitTerm",
    /*   2 */ "AllBitToken",
    /*   3 */ "AlwaysComb",
    /*   4 */ "AlwaysCombDeclaration",
    /*   5 */ "AlwaysCombDeclarationList",
    /*   6 */ "AlwaysCombTerm",
    /*   7 */ "AlwaysCombToken",
    /*   8 */ "AlwaysFf",
    /*   9 */ "AlwaysFfClock",
    /*  10 */ "AlwaysFfClockOpt",
    /*  11 */ "AlwaysFfClockOptGroup",
    /*  12 */ "AlwaysFfDeclaration",
    /*  13 */ "AlwaysFfDeclarationList",
    /*  14 */ "AlwaysFfDeclarationOpt",
    /*  15 */ "AlwaysFfReset",
    /*  16 */ "AlwaysFfResetOpt",
    /*  17 */ "AlwaysFfResetOptGroup",
    /*  18 */ "AlwaysFfTerm",
    /*  19 */ "AlwaysFfToken",
    /*  20 */ "Assign",
    /*  21 */ "AssignDeclaration",
    /*  22 */ "AssignTerm",
    /*  23 */ "AssignToken",
    /*  24 */ "AssignmentOperator",
    /*  25 */ "AssignmentOperatorTerm",
    /*  26 */ "AssignmentOperatorToken",
    /*  27 */ "AssignmentStatement",
    /*  28 */ "AssignmentStatementGroup",
    /*  29 */ "AsyncHigh",
    /*  30 */ "AsyncHighTerm",
    /*  31 */ "AsyncHighToken",
    /*  32 */ "AsyncLow",
    /*  33 */ "AsyncLowTerm",
    /*  34 */ "AsyncLowToken",
    /*  35 */ "BaseLess",
    /*  36 */ "BaseLessTerm",
    /*  37 */ "BaseLessToken",
    /*  38 */ "Based",
    /*  39 */ "BasedTerm",
    /*  40 */ "BasedToken",
    /*  41 */ "Bit",
    /*  42 */ "BitTerm",
    /*  43 */ "BitToken",
    /*  44 */ "BuiltinType",
    /*  45 */ "Colon",
    /*  46 */ "ColonTerm",
    /*  47 */ "ColonToken",
    /*  48 */ "Comma",
    /*  49 */ "CommaTerm",
    /*  50 */ "CommaToken",
    /*  51 */ "Comments",
    /*  52 */ "CommentsOpt",
    /*  53 */ "CommentsTerm",
    /*  54 */ "Description",
    /*  55 */ "Direction",
    /*  56 */ "Dollar",
    /*  57 */ "DollarTerm",
    /*  58 */ "DollarToken",
    /*  59 */ "Dot",
    /*  60 */ "DotDot",
    /*  61 */ "DotDotTerm",
    /*  62 */ "DotDotToken",
    /*  63 */ "DotTerm",
    /*  64 */ "DotToken",
    /*  65 */ "Else",
    /*  66 */ "ElseTerm",
    /*  67 */ "ElseToken",
    /*  68 */ "Enum",
    /*  69 */ "EnumDeclaration",
    /*  70 */ "EnumItem",
    /*  71 */ "EnumItemOpt",
    /*  72 */ "EnumList",
    /*  73 */ "EnumListList",
    /*  74 */ "EnumListOpt",
    /*  75 */ "EnumTerm",
    /*  76 */ "EnumToken",
    /*  77 */ "Equ",
    /*  78 */ "EquTerm",
    /*  79 */ "EquToken",
    /*  80 */ "Exponent",
    /*  81 */ "ExponentTerm",
    /*  82 */ "ExponentToken",
    /*  83 */ "Expression",
    /*  84 */ "Expression01",
    /*  85 */ "Expression01List",
    /*  86 */ "Expression02",
    /*  87 */ "Expression02List",
    /*  88 */ "Expression03",
    /*  89 */ "Expression03List",
    /*  90 */ "Expression04",
    /*  91 */ "Expression04List",
    /*  92 */ "Expression05",
    /*  93 */ "Expression05List",
    /*  94 */ "Expression06",
    /*  95 */ "Expression06List",
    /*  96 */ "Expression07",
    /*  97 */ "Expression07List",
    /*  98 */ "Expression08",
    /*  99 */ "Expression08List",
    /* 100 */ "Expression09",
    /* 101 */ "Expression09List",
    /* 102 */ "Expression10",
    /* 103 */ "Expression10List",
    /* 104 */ "Expression11",
    /* 105 */ "Expression11Opt",
    /* 106 */ "Expression11OptGroup",
    /* 107 */ "ExpressionList",
    /* 108 */ "F32",
    /* 109 */ "F32Term",
    /* 110 */ "F32Token",
    /* 111 */ "F64",
    /* 112 */ "F64Term",
    /* 113 */ "F64Token",
    /* 114 */ "Factor",
    /* 115 */ "FactorOpt",
    /* 116 */ "FactorOpt0",
    /* 117 */ "FactorOpt1",
    /* 118 */ "FixedPoint",
    /* 119 */ "FixedPointTerm",
    /* 120 */ "FixedPointToken",
    /* 121 */ "For",
    /* 122 */ "ForStatement",
    /* 123 */ "ForStatementList",
    /* 124 */ "ForStatementOpt",
    /* 125 */ "ForTerm",
    /* 126 */ "ForToken",
    /* 127 */ "Function",
    /* 128 */ "FunctionCallArg",
    /* 129 */ "FunctionCallArgList",
    /* 130 */ "FunctionCallArgOpt",
    /* 131 */ "FunctionDeclaration",
    /* 132 */ "FunctionDeclarationList",
    /* 133 */ "FunctionDeclarationOpt",
    /* 134 */ "FunctionDeclarationOpt0",
    /* 135 */ "FunctionItem",
    /* 136 */ "FunctionTerm",
    /* 137 */ "FunctionToken",
    /* 138 */ "Hash",
    /* 139 */ "HashTerm",
    /* 140 */ "HashToken",
    /* 141 */ "HierarchicalIdentifier",
    /* 142 */ "HierarchicalIdentifierList",
    /* 143 */ "HierarchicalIdentifierList0",
    /* 144 */ "HierarchicalIdentifierList0List",
    /* 145 */ "I32",
    /* 146 */ "I32Term",
    /* 147 */ "I32Token",
    /* 148 */ "I64",
    /* 149 */ "I64Term",
    /* 150 */ "I64Token",
    /* 151 */ "Identifier",
    /* 152 */ "IdentifierTerm",
    /* 153 */ "IdentifierToken",
    /* 154 */ "If",
    /* 155 */ "IfReset",
    /* 156 */ "IfResetStatement",
    /* 157 */ "IfResetStatementList",
    /* 158 */ "IfResetStatementList0",
    /* 159 */ "IfResetStatementList0List",
    /* 160 */ "IfResetStatementOpt",
    /* 161 */ "IfResetStatementOptList",
    /* 162 */ "IfResetTerm",
    /* 163 */ "IfResetToken",
    /* 164 */ "IfStatement",
    /* 165 */ "IfStatementList",
    /* 166 */ "IfStatementList0",
    /* 167 */ "IfStatementList0List",
    /* 168 */ "IfStatementOpt",
    /* 169 */ "IfStatementOptList",
    /* 170 */ "IfTerm",
    /* 171 */ "IfToken",
    /* 172 */ "In",
    /* 173 */ "InTerm",
    /* 174 */ "InToken",
    /* 175 */ "Inout",
    /* 176 */ "InoutTerm",
    /* 177 */ "InoutToken",
    /* 178 */ "Input",
    /* 179 */ "InputTerm",
    /* 180 */ "InputToken",
    /* 181 */ "Inst",
    /* 182 */ "InstDeclaration",
    /* 183 */ "InstDeclarationOpt",
    /* 184 */ "InstDeclarationOpt0",
    /* 185 */ "InstDeclarationOpt1",
    /* 186 */ "InstDeclarationOpt2",
    /* 187 */ "InstParameter",
    /* 188 */ "InstParameterItem",
    /* 189 */ "InstParameterItemOpt",
    /* 190 */ "InstParameterList",
    /* 191 */ "InstParameterListList",
    /* 192 */ "InstParameterListOpt",
    /* 193 */ "InstParameterOpt",
    /* 194 */ "InstPortItem",
    /* 195 */ "InstPortItemOpt",
    /* 196 */ "InstPortList",
    /* 197 */ "InstPortListList",
    /* 198 */ "InstPortListOpt",
    /* 199 */ "InstTerm",
    /* 200 */ "InstToken",
    /* 201 */ "IntegralNumber",
    /* 202 */ "Interface",
    /* 203 */ "InterfaceDeclaration",
    /* 204 */ "InterfaceDeclarationList",
    /* 205 */ "InterfaceDeclarationOpt",
    /* 206 */ "InterfaceForDeclaration",
    /* 207 */ "InterfaceForDeclarationList",
    /* 208 */ "InterfaceForDeclarationOpt",
    /* 209 */ "InterfaceIfDeclaration",
    /* 210 */ "InterfaceIfDeclarationList",
    /* 211 */ "InterfaceIfDeclarationList0",
    /* 212 */ "InterfaceIfDeclarationList0List",
    /* 213 */ "InterfaceIfDeclarationOpt",
    /* 214 */ "InterfaceIfDeclarationOpt0",
    /* 215 */ "InterfaceIfDeclarationOpt0List",
    /* 216 */ "InterfaceIfDeclarationOpt1",
    /* 217 */ "InterfaceItem",
    /* 218 */ "InterfaceTerm",
    /* 219 */ "InterfaceToken",
    /* 220 */ "LBrace",
    /* 221 */ "LBraceTerm",
    /* 222 */ "LBraceToken",
    /* 223 */ "LBracket",
    /* 224 */ "LBracketTerm",
    /* 225 */ "LBracketToken",
    /* 226 */ "LParen",
    /* 227 */ "LParenTerm",
    /* 228 */ "LParenToken",
    /* 229 */ "Let",
    /* 230 */ "LetDeclaration",
    /* 231 */ "LetDeclarationOpt",
    /* 232 */ "LetTerm",
    /* 233 */ "LetToken",
    /* 234 */ "Localparam",
    /* 235 */ "LocalparamDeclaration",
    /* 236 */ "LocalparamTerm",
    /* 237 */ "LocalparamToken",
    /* 238 */ "Logic",
    /* 239 */ "LogicTerm",
    /* 240 */ "LogicToken",
    /* 241 */ "MinusColon",
    /* 242 */ "MinusColonTerm",
    /* 243 */ "MinusColonToken",
    /* 244 */ "MinusGT",
    /* 245 */ "MinusGTTerm",
    /* 246 */ "MinusGTToken",
    /* 247 */ "Modport",
    /* 248 */ "ModportDeclaration",
    /* 249 */ "ModportItem",
    /* 250 */ "ModportList",
    /* 251 */ "ModportListList",
    /* 252 */ "ModportListOpt",
    /* 253 */ "ModportTerm",
    /* 254 */ "ModportToken",
    /* 255 */ "Module",
    /* 256 */ "ModuleDeclaration",
    /* 257 */ "ModuleDeclarationList",
    /* 258 */ "ModuleDeclarationOpt",
    /* 259 */ "ModuleDeclarationOpt0",
    /* 260 */ "ModuleForDeclaration",
    /* 261 */ "ModuleForDeclarationList",
    /* 262 */ "ModuleForDeclarationOpt",
    /* 263 */ "ModuleIfDeclaration",
    /* 264 */ "ModuleIfDeclarationList",
    /* 265 */ "ModuleIfDeclarationList0",
    /* 266 */ "ModuleIfDeclarationList0List",
    /* 267 */ "ModuleIfDeclarationOpt",
    /* 268 */ "ModuleIfDeclarationOpt0",
    /* 269 */ "ModuleIfDeclarationOpt0List",
    /* 270 */ "ModuleIfDeclarationOpt1",
    /* 271 */ "ModuleItem",
    /* 272 */ "ModuleTerm",
    /* 273 */ "ModuleToken",
    /* 274 */ "Negedge",
    /* 275 */ "NegedgeTerm",
    /* 276 */ "NegedgeToken",
    /* 277 */ "Number",
    /* 278 */ "Operator01",
    /* 279 */ "Operator01Term",
    /* 280 */ "Operator01Token",
    /* 281 */ "Operator02",
    /* 282 */ "Operator02Term",
    /* 283 */ "Operator02Token",
    /* 284 */ "Operator03",
    /* 285 */ "Operator03Term",
    /* 286 */ "Operator03Token",
    /* 287 */ "Operator04",
    /* 288 */ "Operator04Term",
    /* 289 */ "Operator04Token",
    /* 290 */ "Operator05",
    /* 291 */ "Operator05Term",
    /* 292 */ "Operator05Token",
    /* 293 */ "Operator06",
    /* 294 */ "Operator06Term",
    /* 295 */ "Operator06Token",
    /* 296 */ "Operator07",
    /* 297 */ "Operator07Term",
    /* 298 */ "Operator07Token",
    /* 299 */ "Operator08",
    /* 300 */ "Operator08Term",
    /* 301 */ "Operator08Token",
    /* 302 */ "Operator09",
    /* 303 */ "Operator09Term",
    /* 304 */ "Operator09Token",
    /* 305 */ "Operator10",
    /* 306 */ "Operator10Term",
    /* 307 */ "Operator10Token",
    /* 308 */ "Operator11",
    /* 309 */ "Operator11Term",
    /* 310 */ "Operator11Token",
    /* 311 */ "Output",
    /* 312 */ "OutputTerm",
    /* 313 */ "OutputToken",
    /* 314 */ "Parameter",
    /* 315 */ "ParameterDeclaration",
    /* 316 */ "ParameterTerm",
    /* 317 */ "ParameterToken",
    /* 318 */ "PlusColon",
    /* 319 */ "PlusColonTerm",
    /* 320 */ "PlusColonToken",
    /* 321 */ "PortDeclaration",
    /* 322 */ "PortDeclarationItem",
    /* 323 */ "PortDeclarationList",
    /* 324 */ "PortDeclarationListList",
    /* 325 */ "PortDeclarationListOpt",
    /* 326 */ "PortDeclarationOpt",
    /* 327 */ "Posedge",
    /* 328 */ "PosedgeTerm",
    /* 329 */ "PosedgeToken",
    /* 330 */ "RBrace",
    /* 331 */ "RBraceTerm",
    /* 332 */ "RBraceToken",
    /* 333 */ "RBracket",
    /* 334 */ "RBracketTerm",
    /* 335 */ "RBracketToken",
    /* 336 */ "RParen",
    /* 337 */ "RParenTerm",
    /* 338 */ "RParenToken",
    /* 339 */ "Range",
    /* 340 */ "RangeOperator",
    /* 341 */ "RangeOpt",
    /* 342 */ "RealNumber",
    /* 343 */ "Ref",
    /* 344 */ "RefTerm",
    /* 345 */ "RefToken",
    /* 346 */ "Return",
    /* 347 */ "ReturnStatement",
    /* 348 */ "ReturnTerm",
    /* 349 */ "ReturnToken",
    /* 350 */ "Semicolon",
    /* 351 */ "SemicolonTerm",
    /* 352 */ "SemicolonToken",
    /* 353 */ "Start",
    /* 354 */ "StartToken",
    /* 355 */ "Statement",
    /* 356 */ "Step",
    /* 357 */ "StepTerm",
    /* 358 */ "StepToken",
    /* 359 */ "Struct",
    /* 360 */ "StructDeclaration",
    /* 361 */ "StructItem",
    /* 362 */ "StructList",
    /* 363 */ "StructListList",
    /* 364 */ "StructListOpt",
    /* 365 */ "StructTerm",
    /* 366 */ "StructToken",
    /* 367 */ "SyncHigh",
    /* 368 */ "SyncHighTerm",
    /* 369 */ "SyncHighToken",
    /* 370 */ "SyncLow",
    /* 371 */ "SyncLowTerm",
    /* 372 */ "SyncLowToken",
    /* 373 */ "Type",
    /* 374 */ "TypeGroup",
    /* 375 */ "TypeList",
    /* 376 */ "U32",
    /* 377 */ "U32Term",
    /* 378 */ "U32Token",
    /* 379 */ "U64",
    /* 380 */ "U64Term",
    /* 381 */ "U64Token",
    /* 382 */ "UnaryOperator",
    /* 383 */ "UnaryOperatorTerm",
    /* 384 */ "UnaryOperatorToken",
    /* 385 */ "Veryl",
    /* 386 */ "VerylList",
    /* 387 */ "Width",
    /* 388 */ "WithParameter",
    /* 389 */ "WithParameterItem",
    /* 390 */ "WithParameterItemGroup",
    /* 391 */ "WithParameterList",
    /* 392 */ "WithParameterListList",
    /* 393 */ "WithParameterListOpt",
    /* 394 */ "WithParameterOpt",
];

pub const LOOKAHEAD_AUTOMATA: &[LookaheadDFA; 395] = &[
    /* 0 - "AllBit" */
    LookaheadDFA {
        states: &[Some(158)],
        transitions: &[],
        k: 0,
    },
    /* 1 - "AllBitTerm" */
    LookaheadDFA {
        states: &[Some(5)],
        transitions: &[],
        k: 0,
    },
    /* 2 - "AllBitToken" */
    LookaheadDFA {
        states: &[Some(83)],
        transitions: &[],
        k: 0,
    },
    /* 3 - "AlwaysComb" */
    LookaheadDFA {
        states: &[Some(189)],
        transitions: &[],
        k: 0,
    },
    /* 4 - "AlwaysCombDeclaration" */
    LookaheadDFA {
        states: &[Some(376)],
        transitions: &[],
        k: 0,
    },
    /* 5 - "AlwaysCombDeclarationList" */
    LookaheadDFA {
        states: &[None, Some(377), Some(378)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 51, 1),
            DFATransition(0, 55, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 72, 1),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 6 - "AlwaysCombTerm" */
    LookaheadDFA {
        states: &[Some(36)],
        transitions: &[],
        k: 0,
    },
    /* 7 - "AlwaysCombToken" */
    LookaheadDFA {
        states: &[Some(114)],
        transitions: &[],
        k: 0,
    },
    /* 8 - "AlwaysFf" */
    LookaheadDFA {
        states: &[Some(190)],
        transitions: &[],
        k: 0,
    },
    /* 9 - "AlwaysFfClock" */
    LookaheadDFA {
        states: &[Some(364)],
        transitions: &[],
        k: 0,
    },
    /* 10 - "AlwaysFfClockOpt" */
    LookaheadDFA {
        states: &[None, Some(365), Some(368)],
        transitions: &[
            DFATransition(0, 67, 1),
            DFATransition(0, 70, 1),
            DFATransition(0, 79, 2),
        ],
        k: 1,
    },
    /* 11 - "AlwaysFfClockOptGroup" */
    LookaheadDFA {
        states: &[None, Some(366), Some(367)],
        transitions: &[DFATransition(0, 67, 2), DFATransition(0, 70, 1)],
        k: 1,
    },
    /* 12 - "AlwaysFfDeclaration" */
    LookaheadDFA {
        states: &[Some(359)],
        transitions: &[],
        k: 0,
    },
    /* 13 - "AlwaysFfDeclarationList" */
    LookaheadDFA {
        states: &[None, Some(360), Some(361)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 51, 1),
            DFATransition(0, 55, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 72, 1),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 14 - "AlwaysFfDeclarationOpt" */
    LookaheadDFA {
        states: &[None, Some(362), Some(363)],
        transitions: &[DFATransition(0, 28, 1), DFATransition(0, 39, 2)],
        k: 1,
    },
    /* 15 - "AlwaysFfReset" */
    LookaheadDFA {
        states: &[Some(369)],
        transitions: &[],
        k: 0,
    },
    /* 16 - "AlwaysFfResetOpt" */
    LookaheadDFA {
        states: &[None, Some(370), Some(375)],
        transitions: &[
            DFATransition(0, 44, 1),
            DFATransition(0, 45, 1),
            DFATransition(0, 75, 1),
            DFATransition(0, 76, 1),
            DFATransition(0, 79, 2),
        ],
        k: 1,
    },
    /* 17 - "AlwaysFfResetOptGroup" */
    LookaheadDFA {
        states: &[None, Some(371), Some(372), Some(373), Some(374)],
        transitions: &[
            DFATransition(0, 44, 2),
            DFATransition(0, 45, 1),
            DFATransition(0, 75, 4),
            DFATransition(0, 76, 3),
        ],
        k: 1,
    },
    /* 18 - "AlwaysFfTerm" */
    LookaheadDFA {
        states: &[Some(37)],
        transitions: &[],
        k: 0,
    },
    /* 19 - "AlwaysFfToken" */
    LookaheadDFA {
        states: &[Some(115)],
        transitions: &[],
        k: 0,
    },
    /* 20 - "Assign" */
    LookaheadDFA {
        states: &[Some(191)],
        transitions: &[],
        k: 0,
    },
    /* 21 - "AssignDeclaration" */
    LookaheadDFA {
        states: &[Some(379)],
        transitions: &[],
        k: 0,
    },
    /* 22 - "AssignTerm" */
    LookaheadDFA {
        states: &[Some(38)],
        transitions: &[],
        k: 0,
    },
    /* 23 - "AssignToken" */
    LookaheadDFA {
        states: &[Some(116)],
        transitions: &[],
        k: 0,
    },
    /* 24 - "AssignmentOperator" */
    LookaheadDFA {
        states: &[Some(159)],
        transitions: &[],
        k: 0,
    },
    /* 25 - "AssignmentOperatorTerm" */
    LookaheadDFA {
        states: &[Some(9)],
        transitions: &[],
        k: 0,
    },
    /* 26 - "AssignmentOperatorToken" */
    LookaheadDFA {
        states: &[Some(84)],
        transitions: &[],
        k: 0,
    },
    /* 27 - "AssignmentStatement" */
    LookaheadDFA {
        states: &[Some(323)],
        transitions: &[],
        k: 0,
    },
    /* 28 - "AssignmentStatementGroup" */
    LookaheadDFA {
        states: &[None, Some(324), Some(325)],
        transitions: &[DFATransition(0, 14, 2), DFATransition(0, 32, 1)],
        k: 1,
    },
    /* 29 - "AsyncHigh" */
    LookaheadDFA {
        states: &[Some(192)],
        transitions: &[],
        k: 0,
    },
    /* 30 - "AsyncHighTerm" */
    LookaheadDFA {
        states: &[Some(39)],
        transitions: &[],
        k: 0,
    },
    /* 31 - "AsyncHighToken" */
    LookaheadDFA {
        states: &[Some(117)],
        transitions: &[],
        k: 0,
    },
    /* 32 - "AsyncLow" */
    LookaheadDFA {
        states: &[Some(193)],
        transitions: &[],
        k: 0,
    },
    /* 33 - "AsyncLowTerm" */
    LookaheadDFA {
        states: &[Some(40)],
        transitions: &[],
        k: 0,
    },
    /* 34 - "AsyncLowToken" */
    LookaheadDFA {
        states: &[Some(118)],
        transitions: &[],
        k: 0,
    },
    /* 35 - "BaseLess" */
    LookaheadDFA {
        states: &[Some(157)],
        transitions: &[],
        k: 0,
    },
    /* 36 - "BaseLessTerm" */
    LookaheadDFA {
        states: &[Some(4)],
        transitions: &[],
        k: 0,
    },
    /* 37 - "BaseLessToken" */
    LookaheadDFA {
        states: &[Some(82)],
        transitions: &[],
        k: 0,
    },
    /* 38 - "Based" */
    LookaheadDFA {
        states: &[Some(156)],
        transitions: &[],
        k: 0,
    },
    /* 39 - "BasedTerm" */
    LookaheadDFA {
        states: &[Some(3)],
        transitions: &[],
        k: 0,
    },
    /* 40 - "BasedToken" */
    LookaheadDFA {
        states: &[Some(81)],
        transitions: &[],
        k: 0,
    },
    /* 41 - "Bit" */
    LookaheadDFA {
        states: &[Some(194)],
        transitions: &[],
        k: 0,
    },
    /* 42 - "BitTerm" */
    LookaheadDFA {
        states: &[Some(41)],
        transitions: &[],
        k: 0,
    },
    /* 43 - "BitToken" */
    LookaheadDFA {
        states: &[Some(119)],
        transitions: &[],
        k: 0,
    },
    /* 44 - "BuiltinType" */
    LookaheadDFA {
        states: &[
            None,
            Some(305),
            Some(306),
            Some(307),
            Some(308),
            Some(309),
            Some(310),
            Some(311),
            Some(312),
        ],
        transitions: &[
            DFATransition(0, 46, 2),
            DFATransition(0, 49, 7),
            DFATransition(0, 50, 8),
            DFATransition(0, 53, 5),
            DFATransition(0, 54, 6),
            DFATransition(0, 64, 1),
            DFATransition(0, 77, 3),
            DFATransition(0, 78, 4),
        ],
        k: 1,
    },
    /* 45 - "Colon" */
    LookaheadDFA {
        states: &[Some(172)],
        transitions: &[],
        k: 0,
    },
    /* 46 - "ColonTerm" */
    LookaheadDFA {
        states: &[Some(22)],
        transitions: &[],
        k: 0,
    },
    /* 47 - "ColonToken" */
    LookaheadDFA {
        states: &[Some(97)],
        transitions: &[],
        k: 0,
    },
    /* 48 - "Comma" */
    LookaheadDFA {
        states: &[Some(173)],
        transitions: &[],
        k: 0,
    },
    /* 49 - "CommaTerm" */
    LookaheadDFA {
        states: &[Some(23)],
        transitions: &[],
        k: 0,
    },
    /* 50 - "CommaToken" */
    LookaheadDFA {
        states: &[Some(98)],
        transitions: &[],
        k: 0,
    },
    /* 51 - "Comments" */
    LookaheadDFA {
        states: &[Some(75)],
        transitions: &[],
        k: 0,
    },
    /* 52 - "CommentsOpt" */
    LookaheadDFA {
        states: &[None, Some(76), Some(77)],
        transitions: &[
            DFATransition(0, 0, 2),
            DFATransition(0, 5, 1),
            DFATransition(0, 6, 2),
            DFATransition(0, 7, 2),
            DFATransition(0, 8, 2),
            DFATransition(0, 9, 2),
            DFATransition(0, 10, 2),
            DFATransition(0, 11, 2),
            DFATransition(0, 12, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 14, 2),
            DFATransition(0, 15, 2),
            DFATransition(0, 16, 2),
            DFATransition(0, 17, 2),
            DFATransition(0, 18, 2),
            DFATransition(0, 19, 2),
            DFATransition(0, 20, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 2),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 26, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 29, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 31, 2),
            DFATransition(0, 32, 2),
            DFATransition(0, 33, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 35, 2),
            DFATransition(0, 36, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 41, 2),
            DFATransition(0, 42, 2),
            DFATransition(0, 43, 2),
            DFATransition(0, 44, 2),
            DFATransition(0, 45, 2),
            DFATransition(0, 46, 2),
            DFATransition(0, 47, 2),
            DFATransition(0, 48, 2),
            DFATransition(0, 49, 2),
            DFATransition(0, 50, 2),
            DFATransition(0, 51, 2),
            DFATransition(0, 52, 2),
            DFATransition(0, 53, 2),
            DFATransition(0, 54, 2),
            DFATransition(0, 55, 2),
            DFATransition(0, 56, 2),
            DFATransition(0, 57, 2),
            DFATransition(0, 58, 2),
            DFATransition(0, 59, 2),
            DFATransition(0, 60, 2),
            DFATransition(0, 61, 2),
            DFATransition(0, 62, 2),
            DFATransition(0, 63, 2),
            DFATransition(0, 64, 2),
            DFATransition(0, 65, 2),
            DFATransition(0, 66, 2),
            DFATransition(0, 67, 2),
            DFATransition(0, 68, 2),
            DFATransition(0, 69, 2),
            DFATransition(0, 70, 2),
            DFATransition(0, 71, 2),
            DFATransition(0, 72, 2),
            DFATransition(0, 73, 2),
            DFATransition(0, 74, 2),
            DFATransition(0, 75, 2),
            DFATransition(0, 76, 2),
            DFATransition(0, 77, 2),
            DFATransition(0, 78, 2),
            DFATransition(0, 79, 2),
        ],
        k: 1,
    },
    /* 53 - "CommentsTerm" */
    LookaheadDFA {
        states: &[Some(0)],
        transitions: &[],
        k: 0,
    },
    /* 54 - "Description" */
    LookaheadDFA {
        states: &[None, Some(536), Some(537)],
        transitions: &[DFATransition(0, 60, 2), DFATransition(0, 66, 1)],
        k: 1,
    },
    /* 55 - "Direction" */
    LookaheadDFA {
        states: &[None, Some(451), Some(452), Some(453), Some(454)],
        transitions: &[
            DFATransition(0, 57, 3),
            DFATransition(0, 58, 1),
            DFATransition(0, 68, 2),
            DFATransition(0, 71, 4),
        ],
        k: 1,
    },
    /* 56 - "Dollar" */
    LookaheadDFA {
        states: &[Some(174)],
        transitions: &[],
        k: 0,
    },
    /* 57 - "DollarTerm" */
    LookaheadDFA {
        states: &[Some(24)],
        transitions: &[],
        k: 0,
    },
    /* 58 - "DollarToken" */
    LookaheadDFA {
        states: &[Some(99)],
        transitions: &[],
        k: 0,
    },
    /* 59 - "Dot" */
    LookaheadDFA {
        states: &[Some(176)],
        transitions: &[],
        k: 0,
    },
    /* 60 - "DotDot" */
    LookaheadDFA {
        states: &[Some(175)],
        transitions: &[],
        k: 0,
    },
    /* 61 - "DotDotTerm" */
    LookaheadDFA {
        states: &[Some(25)],
        transitions: &[],
        k: 0,
    },
    /* 62 - "DotDotToken" */
    LookaheadDFA {
        states: &[Some(100)],
        transitions: &[],
        k: 0,
    },
    /* 63 - "DotTerm" */
    LookaheadDFA {
        states: &[Some(26)],
        transitions: &[],
        k: 0,
    },
    /* 64 - "DotToken" */
    LookaheadDFA {
        states: &[Some(101)],
        transitions: &[],
        k: 0,
    },
    /* 65 - "Else" */
    LookaheadDFA {
        states: &[Some(195)],
        transitions: &[],
        k: 0,
    },
    /* 66 - "ElseTerm" */
    LookaheadDFA {
        states: &[Some(42)],
        transitions: &[],
        k: 0,
    },
    /* 67 - "ElseToken" */
    LookaheadDFA {
        states: &[Some(120)],
        transitions: &[],
        k: 0,
    },
    /* 68 - "Enum" */
    LookaheadDFA {
        states: &[Some(196)],
        transitions: &[],
        k: 0,
    },
    /* 69 - "EnumDeclaration" */
    LookaheadDFA {
        states: &[Some(387)],
        transitions: &[],
        k: 0,
    },
    /* 70 - "EnumItem" */
    LookaheadDFA {
        states: &[Some(393)],
        transitions: &[],
        k: 0,
    },
    /* 71 - "EnumItemOpt" */
    LookaheadDFA {
        states: &[None, Some(394), Some(395)],
        transitions: &[
            DFATransition(0, 28, 2),
            DFATransition(0, 32, 1),
            DFATransition(0, 37, 2),
        ],
        k: 1,
    },
    /* 72 - "EnumList" */
    LookaheadDFA {
        states: &[Some(388)],
        transitions: &[],
        k: 0,
    },
    /* 73 - "EnumListList" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(389),
            None,
            None,
            None,
            Some(390),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 28, 1),
            DFATransition(0, 37, 5),
            DFATransition(1, 5, 2),
            DFATransition(1, 37, 6),
            DFATransition(1, 79, 4),
            DFATransition(2, 37, 7),
            DFATransition(2, 79, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 28, 3),
            DFATransition(4, 32, 3),
            DFATransition(4, 37, 3),
            DFATransition(5, 5, 8),
            DFATransition(5, 37, 9),
            DFATransition(5, 41, 10),
            DFATransition(5, 42, 11),
            DFATransition(5, 43, 12),
            DFATransition(5, 48, 13),
            DFATransition(5, 51, 14),
            DFATransition(5, 52, 15),
            DFATransition(5, 56, 16),
            DFATransition(5, 59, 17),
            DFATransition(5, 62, 18),
            DFATransition(5, 63, 19),
            DFATransition(5, 65, 20),
            DFATransition(5, 69, 21),
            DFATransition(5, 74, 22),
            DFATransition(6, 5, 7),
            DFATransition(6, 37, 7),
            DFATransition(6, 41, 7),
            DFATransition(6, 42, 7),
            DFATransition(6, 43, 7),
            DFATransition(6, 48, 7),
            DFATransition(6, 51, 7),
            DFATransition(6, 52, 7),
            DFATransition(6, 56, 7),
            DFATransition(6, 59, 7),
            DFATransition(6, 62, 7),
            DFATransition(6, 63, 7),
            DFATransition(6, 65, 7),
            DFATransition(6, 69, 7),
            DFATransition(6, 74, 7),
            DFATransition(8, 37, 7),
            DFATransition(8, 41, 7),
            DFATransition(8, 42, 7),
            DFATransition(8, 43, 7),
            DFATransition(8, 48, 7),
            DFATransition(8, 51, 7),
            DFATransition(8, 52, 7),
            DFATransition(8, 56, 7),
            DFATransition(8, 59, 7),
            DFATransition(8, 62, 7),
            DFATransition(8, 63, 7),
            DFATransition(8, 65, 7),
            DFATransition(8, 69, 7),
            DFATransition(8, 74, 7),
            DFATransition(9, 0, 7),
            DFATransition(9, 5, 7),
            DFATransition(9, 37, 7),
            DFATransition(9, 41, 7),
            DFATransition(9, 42, 7),
            DFATransition(9, 43, 7),
            DFATransition(9, 47, 7),
            DFATransition(9, 48, 7),
            DFATransition(9, 51, 7),
            DFATransition(9, 52, 7),
            DFATransition(9, 56, 7),
            DFATransition(9, 59, 7),
            DFATransition(9, 60, 7),
            DFATransition(9, 62, 7),
            DFATransition(9, 63, 7),
            DFATransition(9, 65, 7),
            DFATransition(9, 66, 7),
            DFATransition(9, 69, 7),
            DFATransition(9, 74, 7),
            DFATransition(10, 5, 7),
            DFATransition(10, 34, 7),
            DFATransition(11, 5, 7),
            DFATransition(11, 36, 7),
            DFATransition(12, 5, 7),
            DFATransition(12, 79, 7),
            DFATransition(13, 5, 7),
            DFATransition(13, 79, 7),
            DFATransition(14, 5, 7),
            DFATransition(14, 79, 7),
            DFATransition(15, 5, 7),
            DFATransition(15, 79, 7),
            DFATransition(16, 5, 7),
            DFATransition(16, 6, 7),
            DFATransition(16, 7, 7),
            DFATransition(16, 8, 7),
            DFATransition(16, 9, 7),
            DFATransition(16, 10, 7),
            DFATransition(16, 17, 7),
            DFATransition(16, 23, 7),
            DFATransition(16, 24, 7),
            DFATransition(16, 25, 7),
            DFATransition(16, 26, 7),
            DFATransition(16, 29, 7),
            DFATransition(16, 36, 7),
            DFATransition(16, 79, 7),
            DFATransition(17, 5, 7),
            DFATransition(17, 79, 7),
            DFATransition(18, 5, 7),
            DFATransition(18, 79, 7),
            DFATransition(19, 5, 7),
            DFATransition(19, 79, 7),
            DFATransition(20, 5, 7),
            DFATransition(20, 79, 7),
            DFATransition(21, 5, 7),
            DFATransition(21, 79, 7),
            DFATransition(22, 5, 7),
            DFATransition(22, 79, 7),
        ],
        k: 3,
    },
    /* 74 - "EnumListOpt" */
    LookaheadDFA {
        states: &[None, Some(391), Some(392)],
        transitions: &[DFATransition(0, 28, 1), DFATransition(0, 37, 2)],
        k: 1,
    },
    /* 75 - "EnumTerm" */
    LookaheadDFA {
        states: &[Some(43)],
        transitions: &[],
        k: 0,
    },
    /* 76 - "EnumToken" */
    LookaheadDFA {
        states: &[Some(121)],
        transitions: &[],
        k: 0,
    },
    /* 77 - "Equ" */
    LookaheadDFA {
        states: &[Some(177)],
        transitions: &[],
        k: 0,
    },
    /* 78 - "EquTerm" */
    LookaheadDFA {
        states: &[Some(27)],
        transitions: &[],
        k: 0,
    },
    /* 79 - "EquToken" */
    LookaheadDFA {
        states: &[Some(102)],
        transitions: &[],
        k: 0,
    },
    /* 80 - "Exponent" */
    LookaheadDFA {
        states: &[Some(154)],
        transitions: &[],
        k: 0,
    },
    /* 81 - "ExponentTerm" */
    LookaheadDFA {
        states: &[Some(1)],
        transitions: &[],
        k: 0,
    },
    /* 82 - "ExponentToken" */
    LookaheadDFA {
        states: &[Some(79)],
        transitions: &[],
        k: 0,
    },
    /* 83 - "Expression" */
    LookaheadDFA {
        states: &[Some(242)],
        transitions: &[],
        k: 0,
    },
    /* 84 - "Expression01" */
    LookaheadDFA {
        states: &[Some(245)],
        transitions: &[],
        k: 0,
    },
    /* 85 - "Expression01List" */
    LookaheadDFA {
        states: &[None, Some(246), Some(247)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 21, 1),
            DFATransition(0, 22, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 86 - "Expression02" */
    LookaheadDFA {
        states: &[Some(248)],
        transitions: &[],
        k: 0,
    },
    /* 87 - "Expression02List" */
    LookaheadDFA {
        states: &[None, Some(249), Some(250)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 25, 1),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 88 - "Expression03" */
    LookaheadDFA {
        states: &[Some(251)],
        transitions: &[],
        k: 0,
    },
    /* 89 - "Expression03List" */
    LookaheadDFA {
        states: &[None, Some(252), Some(253)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 24, 1),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 90 - "Expression04" */
    LookaheadDFA {
        states: &[Some(254)],
        transitions: &[],
        k: 0,
    },
    /* 91 - "Expression04List" */
    LookaheadDFA {
        states: &[None, Some(255), Some(256)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 1),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 92 - "Expression05" */
    LookaheadDFA {
        states: &[Some(257)],
        transitions: &[],
        k: 0,
    },
    /* 93 - "Expression05List" */
    LookaheadDFA {
        states: &[None, Some(258), Some(259)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 20, 1),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 2),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 94 - "Expression06" */
    LookaheadDFA {
        states: &[Some(260)],
        transitions: &[],
        k: 0,
    },
    /* 95 - "Expression06List" */
    LookaheadDFA {
        states: &[None, Some(261), Some(262)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 19, 1),
            DFATransition(0, 20, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 2),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 96 - "Expression07" */
    LookaheadDFA {
        states: &[Some(263)],
        transitions: &[],
        k: 0,
    },
    /* 97 - "Expression07List" */
    LookaheadDFA {
        states: &[None, Some(264), Some(265)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 18, 1),
            DFATransition(0, 19, 2),
            DFATransition(0, 20, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 2),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 98 - "Expression08" */
    LookaheadDFA {
        states: &[Some(266)],
        transitions: &[],
        k: 0,
    },
    /* 99 - "Expression08List" */
    LookaheadDFA {
        states: &[None, Some(267), Some(268)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 17, 1),
            DFATransition(0, 18, 2),
            DFATransition(0, 19, 2),
            DFATransition(0, 20, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 2),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 100 - "Expression09" */
    LookaheadDFA {
        states: &[Some(269)],
        transitions: &[],
        k: 0,
    },
    /* 101 - "Expression09List" */
    LookaheadDFA {
        states: &[None, Some(270), Some(271)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 16, 1),
            DFATransition(0, 17, 2),
            DFATransition(0, 18, 2),
            DFATransition(0, 19, 2),
            DFATransition(0, 20, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 2),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 102 - "Expression10" */
    LookaheadDFA {
        states: &[Some(272)],
        transitions: &[],
        k: 0,
    },
    /* 103 - "Expression10List" */
    LookaheadDFA {
        states: &[None, Some(273), Some(274)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 15, 1),
            DFATransition(0, 16, 2),
            DFATransition(0, 17, 2),
            DFATransition(0, 18, 2),
            DFATransition(0, 19, 2),
            DFATransition(0, 20, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 2),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 104 - "Expression11" */
    LookaheadDFA {
        states: &[Some(275)],
        transitions: &[],
        k: 0,
    },
    /* 105 - "Expression11Opt" */
    LookaheadDFA {
        states: &[None, Some(276), Some(282)],
        transitions: &[
            DFATransition(0, 6, 2),
            DFATransition(0, 7, 2),
            DFATransition(0, 8, 2),
            DFATransition(0, 9, 2),
            DFATransition(0, 10, 2),
            DFATransition(0, 17, 1),
            DFATransition(0, 23, 1),
            DFATransition(0, 24, 1),
            DFATransition(0, 25, 1),
            DFATransition(0, 26, 1),
            DFATransition(0, 29, 2),
            DFATransition(0, 36, 2),
            DFATransition(0, 79, 2),
        ],
        k: 1,
    },
    /* 106 - "Expression11OptGroup" */
    LookaheadDFA {
        states: &[None, Some(277), Some(278), Some(279), Some(280), Some(281)],
        transitions: &[
            DFATransition(0, 17, 2),
            DFATransition(0, 23, 3),
            DFATransition(0, 24, 5),
            DFATransition(0, 25, 4),
            DFATransition(0, 26, 1),
        ],
        k: 1,
    },
    /* 107 - "ExpressionList" */
    LookaheadDFA {
        states: &[None, Some(243), Some(244)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 22, 1),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 108 - "F32" */
    LookaheadDFA {
        states: &[Some(197)],
        transitions: &[],
        k: 0,
    },
    /* 109 - "F32Term" */
    LookaheadDFA {
        states: &[Some(44)],
        transitions: &[],
        k: 0,
    },
    /* 110 - "F32Token" */
    LookaheadDFA {
        states: &[Some(122)],
        transitions: &[],
        k: 0,
    },
    /* 111 - "F64" */
    LookaheadDFA {
        states: &[Some(198)],
        transitions: &[],
        k: 0,
    },
    /* 112 - "F64Term" */
    LookaheadDFA {
        states: &[Some(45)],
        transitions: &[],
        k: 0,
    },
    /* 113 - "F64Token" */
    LookaheadDFA {
        states: &[Some(123)],
        transitions: &[],
        k: 0,
    },
    /* 114 - "Factor" */
    LookaheadDFA {
        states: &[None, Some(283), Some(284), Some(285)],
        transitions: &[
            DFATransition(0, 6, 1),
            DFATransition(0, 7, 1),
            DFATransition(0, 8, 1),
            DFATransition(0, 9, 1),
            DFATransition(0, 10, 1),
            DFATransition(0, 29, 2),
            DFATransition(0, 36, 3),
            DFATransition(0, 79, 2),
        ],
        k: 1,
    },
    /* 115 - "FactorOpt" */
    LookaheadDFA {
        states: &[None, Some(290), Some(291)],
        transitions: &[DFATransition(0, 29, 1), DFATransition(0, 79, 2)],
        k: 1,
    },
    /* 116 - "FactorOpt0" */
    LookaheadDFA {
        states: &[None, Some(286), Some(289)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 15, 2),
            DFATransition(0, 16, 2),
            DFATransition(0, 17, 2),
            DFATransition(0, 18, 2),
            DFATransition(0, 19, 2),
            DFATransition(0, 20, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 2),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 36, 1),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 117 - "FactorOpt1" */
    LookaheadDFA {
        states: &[None, Some(287), Some(288)],
        transitions: &[
            DFATransition(0, 6, 1),
            DFATransition(0, 7, 1),
            DFATransition(0, 8, 1),
            DFATransition(0, 9, 1),
            DFATransition(0, 10, 1),
            DFATransition(0, 17, 1),
            DFATransition(0, 23, 1),
            DFATransition(0, 24, 1),
            DFATransition(0, 25, 1),
            DFATransition(0, 26, 1),
            DFATransition(0, 29, 1),
            DFATransition(0, 36, 1),
            DFATransition(0, 39, 2),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 118 - "FixedPoint" */
    LookaheadDFA {
        states: &[Some(155)],
        transitions: &[],
        k: 0,
    },
    /* 119 - "FixedPointTerm" */
    LookaheadDFA {
        states: &[Some(2)],
        transitions: &[],
        k: 0,
    },
    /* 120 - "FixedPointToken" */
    LookaheadDFA {
        states: &[Some(80)],
        transitions: &[],
        k: 0,
    },
    /* 121 - "For" */
    LookaheadDFA {
        states: &[Some(199)],
        transitions: &[],
        k: 0,
    },
    /* 122 - "ForStatement" */
    LookaheadDFA {
        states: &[Some(349)],
        transitions: &[],
        k: 0,
    },
    /* 123 - "ForStatementList" */
    LookaheadDFA {
        states: &[None, Some(350), Some(351)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 51, 1),
            DFATransition(0, 55, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 72, 1),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 124 - "ForStatementOpt" */
    LookaheadDFA {
        states: &[None, Some(352), Some(353)],
        transitions: &[DFATransition(0, 34, 2), DFATransition(0, 73, 1)],
        k: 1,
    },
    /* 125 - "ForTerm" */
    LookaheadDFA {
        states: &[Some(46)],
        transitions: &[],
        k: 0,
    },
    /* 126 - "ForToken" */
    LookaheadDFA {
        states: &[Some(124)],
        transitions: &[],
        k: 0,
    },
    /* 127 - "Function" */
    LookaheadDFA {
        states: &[Some(200)],
        transitions: &[],
        k: 0,
    },
    /* 128 - "FunctionCallArg" */
    LookaheadDFA {
        states: &[Some(292)],
        transitions: &[],
        k: 0,
    },
    /* 129 - "FunctionCallArgList" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(293),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            Some(294),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 28, 1),
            DFATransition(0, 39, 17),
            DFATransition(1, 5, 2),
            DFATransition(1, 6, 4),
            DFATransition(1, 7, 5),
            DFATransition(1, 8, 6),
            DFATransition(1, 9, 7),
            DFATransition(1, 10, 8),
            DFATransition(1, 17, 9),
            DFATransition(1, 23, 10),
            DFATransition(1, 24, 11),
            DFATransition(1, 25, 12),
            DFATransition(1, 26, 13),
            DFATransition(1, 29, 14),
            DFATransition(1, 36, 15),
            DFATransition(1, 39, 18),
            DFATransition(1, 79, 16),
            DFATransition(2, 6, 3),
            DFATransition(2, 7, 3),
            DFATransition(2, 8, 3),
            DFATransition(2, 9, 3),
            DFATransition(2, 10, 3),
            DFATransition(2, 17, 3),
            DFATransition(2, 23, 3),
            DFATransition(2, 24, 3),
            DFATransition(2, 25, 3),
            DFATransition(2, 26, 3),
            DFATransition(2, 29, 3),
            DFATransition(2, 36, 3),
            DFATransition(2, 39, 19),
            DFATransition(2, 79, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 15, 3),
            DFATransition(4, 16, 3),
            DFATransition(4, 17, 3),
            DFATransition(4, 18, 3),
            DFATransition(4, 19, 3),
            DFATransition(4, 20, 3),
            DFATransition(4, 21, 3),
            DFATransition(4, 22, 3),
            DFATransition(4, 23, 3),
            DFATransition(4, 24, 3),
            DFATransition(4, 25, 3),
            DFATransition(4, 28, 3),
            DFATransition(4, 39, 3),
            DFATransition(5, 5, 3),
            DFATransition(5, 15, 3),
            DFATransition(5, 16, 3),
            DFATransition(5, 17, 3),
            DFATransition(5, 18, 3),
            DFATransition(5, 19, 3),
            DFATransition(5, 20, 3),
            DFATransition(5, 21, 3),
            DFATransition(5, 22, 3),
            DFATransition(5, 23, 3),
            DFATransition(5, 24, 3),
            DFATransition(5, 25, 3),
            DFATransition(5, 28, 3),
            DFATransition(5, 39, 3),
            DFATransition(6, 5, 3),
            DFATransition(6, 15, 3),
            DFATransition(6, 16, 3),
            DFATransition(6, 17, 3),
            DFATransition(6, 18, 3),
            DFATransition(6, 19, 3),
            DFATransition(6, 20, 3),
            DFATransition(6, 21, 3),
            DFATransition(6, 22, 3),
            DFATransition(6, 23, 3),
            DFATransition(6, 24, 3),
            DFATransition(6, 25, 3),
            DFATransition(6, 28, 3),
            DFATransition(6, 39, 3),
            DFATransition(7, 5, 3),
            DFATransition(7, 15, 3),
            DFATransition(7, 16, 3),
            DFATransition(7, 17, 3),
            DFATransition(7, 18, 3),
            DFATransition(7, 19, 3),
            DFATransition(7, 20, 3),
            DFATransition(7, 21, 3),
            DFATransition(7, 22, 3),
            DFATransition(7, 23, 3),
            DFATransition(7, 24, 3),
            DFATransition(7, 25, 3),
            DFATransition(7, 28, 3),
            DFATransition(7, 39, 3),
            DFATransition(8, 5, 3),
            DFATransition(8, 15, 3),
            DFATransition(8, 16, 3),
            DFATransition(8, 17, 3),
            DFATransition(8, 18, 3),
            DFATransition(8, 19, 3),
            DFATransition(8, 20, 3),
            DFATransition(8, 21, 3),
            DFATransition(8, 22, 3),
            DFATransition(8, 23, 3),
            DFATransition(8, 24, 3),
            DFATransition(8, 25, 3),
            DFATransition(8, 28, 3),
            DFATransition(8, 39, 3),
            DFATransition(9, 5, 3),
            DFATransition(9, 6, 3),
            DFATransition(9, 7, 3),
            DFATransition(9, 8, 3),
            DFATransition(9, 9, 3),
            DFATransition(9, 10, 3),
            DFATransition(9, 29, 3),
            DFATransition(9, 36, 3),
            DFATransition(9, 79, 3),
            DFATransition(10, 5, 3),
            DFATransition(10, 6, 3),
            DFATransition(10, 7, 3),
            DFATransition(10, 8, 3),
            DFATransition(10, 9, 3),
            DFATransition(10, 10, 3),
            DFATransition(10, 29, 3),
            DFATransition(10, 36, 3),
            DFATransition(10, 79, 3),
            DFATransition(11, 5, 3),
            DFATransition(11, 6, 3),
            DFATransition(11, 7, 3),
            DFATransition(11, 8, 3),
            DFATransition(11, 9, 3),
            DFATransition(11, 10, 3),
            DFATransition(11, 29, 3),
            DFATransition(11, 36, 3),
            DFATransition(11, 79, 3),
            DFATransition(12, 5, 3),
            DFATransition(12, 6, 3),
            DFATransition(12, 7, 3),
            DFATransition(12, 8, 3),
            DFATransition(12, 9, 3),
            DFATransition(12, 10, 3),
            DFATransition(12, 29, 3),
            DFATransition(12, 36, 3),
            DFATransition(12, 79, 3),
            DFATransition(13, 5, 3),
            DFATransition(13, 6, 3),
            DFATransition(13, 7, 3),
            DFATransition(13, 8, 3),
            DFATransition(13, 9, 3),
            DFATransition(13, 10, 3),
            DFATransition(13, 29, 3),
            DFATransition(13, 36, 3),
            DFATransition(13, 79, 3),
            DFATransition(14, 5, 3),
            DFATransition(14, 79, 3),
            DFATransition(15, 5, 3),
            DFATransition(15, 6, 3),
            DFATransition(15, 7, 3),
            DFATransition(15, 8, 3),
            DFATransition(15, 9, 3),
            DFATransition(15, 10, 3),
            DFATransition(15, 17, 3),
            DFATransition(15, 23, 3),
            DFATransition(15, 24, 3),
            DFATransition(15, 25, 3),
            DFATransition(15, 26, 3),
            DFATransition(15, 29, 3),
            DFATransition(15, 36, 3),
            DFATransition(15, 79, 3),
            DFATransition(16, 5, 3),
            DFATransition(16, 15, 3),
            DFATransition(16, 16, 3),
            DFATransition(16, 17, 3),
            DFATransition(16, 18, 3),
            DFATransition(16, 19, 3),
            DFATransition(16, 20, 3),
            DFATransition(16, 21, 3),
            DFATransition(16, 22, 3),
            DFATransition(16, 23, 3),
            DFATransition(16, 24, 3),
            DFATransition(16, 25, 3),
            DFATransition(16, 28, 3),
            DFATransition(16, 31, 3),
            DFATransition(16, 35, 3),
            DFATransition(16, 36, 3),
            DFATransition(16, 39, 3),
            DFATransition(17, 5, 20),
            DFATransition(17, 11, 21),
            DFATransition(17, 13, 22),
            DFATransition(17, 15, 23),
            DFATransition(17, 16, 24),
            DFATransition(17, 17, 25),
            DFATransition(17, 18, 26),
            DFATransition(17, 19, 27),
            DFATransition(17, 20, 28),
            DFATransition(17, 21, 29),
            DFATransition(17, 22, 30),
            DFATransition(17, 23, 31),
            DFATransition(17, 24, 32),
            DFATransition(17, 25, 33),
            DFATransition(17, 27, 34),
            DFATransition(17, 28, 35),
            DFATransition(17, 30, 36),
            DFATransition(17, 34, 37),
            DFATransition(17, 37, 38),
            DFATransition(17, 38, 39),
            DFATransition(17, 39, 40),
            DFATransition(17, 40, 41),
            DFATransition(17, 73, 42),
            DFATransition(18, 5, 19),
            DFATransition(18, 11, 19),
            DFATransition(18, 13, 19),
            DFATransition(18, 15, 19),
            DFATransition(18, 16, 19),
            DFATransition(18, 17, 19),
            DFATransition(18, 18, 19),
            DFATransition(18, 19, 19),
            DFATransition(18, 20, 19),
            DFATransition(18, 21, 19),
            DFATransition(18, 22, 19),
            DFATransition(18, 23, 19),
            DFATransition(18, 24, 19),
            DFATransition(18, 25, 19),
            DFATransition(18, 27, 19),
            DFATransition(18, 28, 19),
            DFATransition(18, 30, 19),
            DFATransition(18, 34, 19),
            DFATransition(18, 37, 19),
            DFATransition(18, 38, 19),
            DFATransition(18, 39, 19),
            DFATransition(18, 40, 19),
            DFATransition(18, 73, 19),
            DFATransition(20, 11, 19),
            DFATransition(20, 13, 19),
            DFATransition(20, 15, 19),
            DFATransition(20, 16, 19),
            DFATransition(20, 17, 19),
            DFATransition(20, 18, 19),
            DFATransition(20, 19, 19),
            DFATransition(20, 20, 19),
            DFATransition(20, 21, 19),
            DFATransition(20, 22, 19),
            DFATransition(20, 23, 19),
            DFATransition(20, 24, 19),
            DFATransition(20, 25, 19),
            DFATransition(20, 27, 19),
            DFATransition(20, 28, 19),
            DFATransition(20, 30, 19),
            DFATransition(20, 34, 19),
            DFATransition(20, 37, 19),
            DFATransition(20, 38, 19),
            DFATransition(20, 39, 19),
            DFATransition(20, 40, 19),
            DFATransition(20, 73, 19),
            DFATransition(21, 5, 19),
            DFATransition(21, 6, 19),
            DFATransition(21, 7, 19),
            DFATransition(21, 8, 19),
            DFATransition(21, 9, 19),
            DFATransition(21, 10, 19),
            DFATransition(21, 17, 19),
            DFATransition(21, 23, 19),
            DFATransition(21, 24, 19),
            DFATransition(21, 25, 19),
            DFATransition(21, 26, 19),
            DFATransition(21, 29, 19),
            DFATransition(21, 36, 19),
            DFATransition(21, 79, 19),
            DFATransition(22, 5, 19),
            DFATransition(22, 6, 19),
            DFATransition(22, 7, 19),
            DFATransition(22, 8, 19),
            DFATransition(22, 9, 19),
            DFATransition(22, 10, 19),
            DFATransition(22, 17, 19),
            DFATransition(22, 23, 19),
            DFATransition(22, 24, 19),
            DFATransition(22, 25, 19),
            DFATransition(22, 26, 19),
            DFATransition(22, 29, 19),
            DFATransition(22, 36, 19),
            DFATransition(22, 79, 19),
            DFATransition(23, 5, 19),
            DFATransition(23, 6, 19),
            DFATransition(23, 7, 19),
            DFATransition(23, 8, 19),
            DFATransition(23, 9, 19),
            DFATransition(23, 10, 19),
            DFATransition(23, 17, 19),
            DFATransition(23, 23, 19),
            DFATransition(23, 24, 19),
            DFATransition(23, 25, 19),
            DFATransition(23, 26, 19),
            DFATransition(23, 29, 19),
            DFATransition(23, 36, 19),
            DFATransition(23, 79, 19),
            DFATransition(24, 5, 19),
            DFATransition(24, 6, 19),
            DFATransition(24, 7, 19),
            DFATransition(24, 8, 19),
            DFATransition(24, 9, 19),
            DFATransition(24, 10, 19),
            DFATransition(24, 17, 19),
            DFATransition(24, 23, 19),
            DFATransition(24, 24, 19),
            DFATransition(24, 25, 19),
            DFATransition(24, 26, 19),
            DFATransition(24, 29, 19),
            DFATransition(24, 36, 19),
            DFATransition(24, 79, 19),
            DFATransition(25, 5, 19),
            DFATransition(25, 6, 19),
            DFATransition(25, 7, 19),
            DFATransition(25, 8, 19),
            DFATransition(25, 9, 19),
            DFATransition(25, 10, 19),
            DFATransition(25, 17, 19),
            DFATransition(25, 23, 19),
            DFATransition(25, 24, 19),
            DFATransition(25, 25, 19),
            DFATransition(25, 26, 19),
            DFATransition(25, 29, 19),
            DFATransition(25, 36, 19),
            DFATransition(25, 79, 19),
            DFATransition(26, 5, 19),
            DFATransition(26, 6, 19),
            DFATransition(26, 7, 19),
            DFATransition(26, 8, 19),
            DFATransition(26, 9, 19),
            DFATransition(26, 10, 19),
            DFATransition(26, 17, 19),
            DFATransition(26, 23, 19),
            DFATransition(26, 24, 19),
            DFATransition(26, 25, 19),
            DFATransition(26, 26, 19),
            DFATransition(26, 29, 19),
            DFATransition(26, 36, 19),
            DFATransition(26, 79, 19),
            DFATransition(27, 5, 19),
            DFATransition(27, 6, 19),
            DFATransition(27, 7, 19),
            DFATransition(27, 8, 19),
            DFATransition(27, 9, 19),
            DFATransition(27, 10, 19),
            DFATransition(27, 17, 19),
            DFATransition(27, 23, 19),
            DFATransition(27, 24, 19),
            DFATransition(27, 25, 19),
            DFATransition(27, 26, 19),
            DFATransition(27, 29, 19),
            DFATransition(27, 36, 19),
            DFATransition(27, 79, 19),
            DFATransition(28, 5, 19),
            DFATransition(28, 6, 19),
            DFATransition(28, 7, 19),
            DFATransition(28, 8, 19),
            DFATransition(28, 9, 19),
            DFATransition(28, 10, 19),
            DFATransition(28, 17, 19),
            DFATransition(28, 23, 19),
            DFATransition(28, 24, 19),
            DFATransition(28, 25, 19),
            DFATransition(28, 26, 19),
            DFATransition(28, 29, 19),
            DFATransition(28, 36, 19),
            DFATransition(28, 79, 19),
            DFATransition(29, 5, 19),
            DFATransition(29, 6, 19),
            DFATransition(29, 7, 19),
            DFATransition(29, 8, 19),
            DFATransition(29, 9, 19),
            DFATransition(29, 10, 19),
            DFATransition(29, 17, 19),
            DFATransition(29, 23, 19),
            DFATransition(29, 24, 19),
            DFATransition(29, 25, 19),
            DFATransition(29, 26, 19),
            DFATransition(29, 29, 19),
            DFATransition(29, 36, 19),
            DFATransition(29, 79, 19),
            DFATransition(30, 5, 19),
            DFATransition(30, 6, 19),
            DFATransition(30, 7, 19),
            DFATransition(30, 8, 19),
            DFATransition(30, 9, 19),
            DFATransition(30, 10, 19),
            DFATransition(30, 17, 19),
            DFATransition(30, 23, 19),
            DFATransition(30, 24, 19),
            DFATransition(30, 25, 19),
            DFATransition(30, 26, 19),
            DFATransition(30, 29, 19),
            DFATransition(30, 36, 19),
            DFATransition(30, 79, 19),
            DFATransition(31, 5, 19),
            DFATransition(31, 6, 19),
            DFATransition(31, 7, 19),
            DFATransition(31, 8, 19),
            DFATransition(31, 9, 19),
            DFATransition(31, 10, 19),
            DFATransition(31, 17, 19),
            DFATransition(31, 23, 19),
            DFATransition(31, 24, 19),
            DFATransition(31, 25, 19),
            DFATransition(31, 26, 19),
            DFATransition(31, 29, 19),
            DFATransition(31, 36, 19),
            DFATransition(31, 79, 19),
            DFATransition(32, 5, 19),
            DFATransition(32, 6, 19),
            DFATransition(32, 7, 19),
            DFATransition(32, 8, 19),
            DFATransition(32, 9, 19),
            DFATransition(32, 10, 19),
            DFATransition(32, 17, 19),
            DFATransition(32, 23, 19),
            DFATransition(32, 24, 19),
            DFATransition(32, 25, 19),
            DFATransition(32, 26, 19),
            DFATransition(32, 29, 19),
            DFATransition(32, 36, 19),
            DFATransition(32, 79, 19),
            DFATransition(33, 5, 19),
            DFATransition(33, 6, 19),
            DFATransition(33, 7, 19),
            DFATransition(33, 8, 19),
            DFATransition(33, 9, 19),
            DFATransition(33, 10, 19),
            DFATransition(33, 17, 19),
            DFATransition(33, 23, 19),
            DFATransition(33, 24, 19),
            DFATransition(33, 25, 19),
            DFATransition(33, 26, 19),
            DFATransition(33, 29, 19),
            DFATransition(33, 36, 19),
            DFATransition(33, 79, 19),
            DFATransition(34, 5, 19),
            DFATransition(34, 6, 19),
            DFATransition(34, 7, 19),
            DFATransition(34, 8, 19),
            DFATransition(34, 9, 19),
            DFATransition(34, 10, 19),
            DFATransition(34, 17, 19),
            DFATransition(34, 23, 19),
            DFATransition(34, 24, 19),
            DFATransition(34, 25, 19),
            DFATransition(34, 26, 19),
            DFATransition(34, 29, 19),
            DFATransition(34, 36, 19),
            DFATransition(34, 79, 19),
            DFATransition(35, 5, 19),
            DFATransition(35, 6, 19),
            DFATransition(35, 7, 19),
            DFATransition(35, 8, 19),
            DFATransition(35, 9, 19),
            DFATransition(35, 10, 19),
            DFATransition(35, 17, 19),
            DFATransition(35, 23, 19),
            DFATransition(35, 24, 19),
            DFATransition(35, 25, 19),
            DFATransition(35, 26, 19),
            DFATransition(35, 29, 19),
            DFATransition(35, 36, 19),
            DFATransition(35, 37, 19),
            DFATransition(35, 39, 19),
            DFATransition(35, 63, 19),
            DFATransition(35, 69, 19),
            DFATransition(35, 79, 19),
            DFATransition(36, 5, 19),
            DFATransition(36, 6, 19),
            DFATransition(36, 7, 19),
            DFATransition(36, 8, 19),
            DFATransition(36, 9, 19),
            DFATransition(36, 10, 19),
            DFATransition(36, 17, 19),
            DFATransition(36, 23, 19),
            DFATransition(36, 24, 19),
            DFATransition(36, 25, 19),
            DFATransition(36, 26, 19),
            DFATransition(36, 29, 19),
            DFATransition(36, 36, 19),
            DFATransition(36, 79, 19),
            DFATransition(37, 5, 19),
            DFATransition(37, 37, 19),
            DFATransition(37, 41, 19),
            DFATransition(37, 42, 19),
            DFATransition(37, 43, 19),
            DFATransition(37, 48, 19),
            DFATransition(37, 51, 19),
            DFATransition(37, 52, 19),
            DFATransition(37, 55, 19),
            DFATransition(37, 56, 19),
            DFATransition(37, 59, 19),
            DFATransition(37, 62, 19),
            DFATransition(37, 63, 19),
            DFATransition(37, 65, 19),
            DFATransition(37, 69, 19),
            DFATransition(37, 72, 19),
            DFATransition(37, 74, 19),
            DFATransition(37, 79, 19),
            DFATransition(38, 5, 19),
            DFATransition(38, 37, 19),
            DFATransition(38, 40, 19),
            DFATransition(38, 41, 19),
            DFATransition(38, 42, 19),
            DFATransition(38, 43, 19),
            DFATransition(38, 48, 19),
            DFATransition(38, 51, 19),
            DFATransition(38, 52, 19),
            DFATransition(38, 56, 19),
            DFATransition(38, 59, 19),
            DFATransition(38, 62, 19),
            DFATransition(38, 63, 19),
            DFATransition(38, 65, 19),
            DFATransition(38, 69, 19),
            DFATransition(38, 74, 19),
            DFATransition(39, 5, 19),
            DFATransition(39, 11, 19),
            DFATransition(39, 13, 19),
            DFATransition(39, 14, 19),
            DFATransition(39, 15, 19),
            DFATransition(39, 16, 19),
            DFATransition(39, 17, 19),
            DFATransition(39, 18, 19),
            DFATransition(39, 19, 19),
            DFATransition(39, 20, 19),
            DFATransition(39, 21, 19),
            DFATransition(39, 22, 19),
            DFATransition(39, 23, 19),
            DFATransition(39, 24, 19),
            DFATransition(39, 25, 19),
            DFATransition(39, 27, 19),
            DFATransition(39, 28, 19),
            DFATransition(39, 30, 19),
            DFATransition(39, 31, 19),
            DFATransition(39, 32, 19),
            DFATransition(39, 33, 19),
            DFATransition(39, 34, 19),
            DFATransition(39, 35, 19),
            DFATransition(39, 36, 19),
            DFATransition(39, 37, 19),
            DFATransition(39, 38, 19),
            DFATransition(39, 39, 19),
            DFATransition(39, 40, 19),
            DFATransition(39, 61, 19),
            DFATransition(39, 73, 19),
            DFATransition(40, 5, 19),
            DFATransition(40, 11, 19),
            DFATransition(40, 12, 19),
            DFATransition(40, 13, 19),
            DFATransition(40, 15, 19),
            DFATransition(40, 16, 19),
            DFATransition(40, 17, 19),
            DFATransition(40, 18, 19),
            DFATransition(40, 19, 19),
            DFATransition(40, 20, 19),
            DFATransition(40, 21, 19),
            DFATransition(40, 22, 19),
            DFATransition(40, 23, 19),
            DFATransition(40, 24, 19),
            DFATransition(40, 25, 19),
            DFATransition(40, 27, 19),
            DFATransition(40, 28, 19),
            DFATransition(40, 30, 19),
            DFATransition(40, 34, 19),
            DFATransition(40, 36, 19),
            DFATransition(40, 37, 19),
            DFATransition(40, 38, 19),
            DFATransition(40, 39, 19),
            DFATransition(40, 40, 19),
            DFATransition(40, 73, 19),
            DFATransition(41, 5, 19),
            DFATransition(41, 37, 19),
            DFATransition(41, 41, 19),
            DFATransition(41, 42, 19),
            DFATransition(41, 43, 19),
            DFATransition(41, 48, 19),
            DFATransition(41, 51, 19),
            DFATransition(41, 52, 19),
            DFATransition(41, 55, 19),
            DFATransition(41, 56, 19),
            DFATransition(41, 59, 19),
            DFATransition(41, 62, 19),
            DFATransition(41, 63, 19),
            DFATransition(41, 65, 19),
            DFATransition(41, 69, 19),
            DFATransition(41, 72, 19),
            DFATransition(41, 74, 19),
            DFATransition(41, 79, 19),
            DFATransition(42, 5, 19),
            DFATransition(42, 6, 19),
            DFATransition(42, 7, 19),
            DFATransition(42, 8, 19),
            DFATransition(42, 9, 19),
            DFATransition(42, 10, 19),
            DFATransition(42, 14, 19),
            DFATransition(42, 17, 19),
            DFATransition(42, 23, 19),
            DFATransition(42, 24, 19),
            DFATransition(42, 25, 19),
            DFATransition(42, 26, 19),
            DFATransition(42, 29, 19),
            DFATransition(42, 36, 19),
            DFATransition(42, 79, 19),
        ],
        k: 3,
    },
    /* 130 - "FunctionCallArgOpt" */
    LookaheadDFA {
        states: &[None, Some(295), Some(296)],
        transitions: &[DFATransition(0, 28, 1), DFATransition(0, 39, 2)],
        k: 1,
    },
    /* 131 - "FunctionDeclaration" */
    LookaheadDFA {
        states: &[Some(455)],
        transitions: &[],
        k: 0,
    },
    /* 132 - "FunctionDeclarationList" */
    LookaheadDFA {
        states: &[None, Some(456), Some(457)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 51, 1),
            DFATransition(0, 55, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 62, 1),
            DFATransition(0, 72, 1),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 133 - "FunctionDeclarationOpt" */
    LookaheadDFA {
        states: &[None, Some(460), Some(461)],
        transitions: &[
            DFATransition(0, 12, 2),
            DFATransition(0, 33, 1),
            DFATransition(0, 36, 2),
        ],
        k: 1,
    },
    /* 134 - "FunctionDeclarationOpt0" */
    LookaheadDFA {
        states: &[None, Some(458), Some(459)],
        transitions: &[DFATransition(0, 12, 2), DFATransition(0, 36, 1)],
        k: 1,
    },
    /* 135 - "FunctionItem" */
    LookaheadDFA {
        states: &[None, Some(462), Some(463)],
        transitions: &[
            DFATransition(0, 51, 2),
            DFATransition(0, 55, 2),
            DFATransition(0, 56, 2),
            DFATransition(0, 62, 1),
            DFATransition(0, 72, 2),
            DFATransition(0, 79, 2),
        ],
        k: 1,
    },
    /* 136 - "FunctionTerm" */
    LookaheadDFA {
        states: &[Some(47)],
        transitions: &[],
        k: 0,
    },
    /* 137 - "FunctionToken" */
    LookaheadDFA {
        states: &[Some(125)],
        transitions: &[],
        k: 0,
    },
    /* 138 - "Hash" */
    LookaheadDFA {
        states: &[Some(178)],
        transitions: &[],
        k: 0,
    },
    /* 139 - "HashTerm" */
    LookaheadDFA {
        states: &[Some(28)],
        transitions: &[],
        k: 0,
    },
    /* 140 - "HashToken" */
    LookaheadDFA {
        states: &[Some(103)],
        transitions: &[],
        k: 0,
    },
    /* 141 - "HierarchicalIdentifier" */
    LookaheadDFA {
        states: &[Some(235)],
        transitions: &[],
        k: 0,
    },
    /* 142 - "HierarchicalIdentifierList" */
    LookaheadDFA {
        states: &[None, Some(240), Some(241)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 14, 2),
            DFATransition(0, 15, 2),
            DFATransition(0, 16, 2),
            DFATransition(0, 17, 2),
            DFATransition(0, 18, 2),
            DFATransition(0, 19, 2),
            DFATransition(0, 20, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 2),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 31, 2),
            DFATransition(0, 32, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 35, 1),
            DFATransition(0, 36, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 143 - "HierarchicalIdentifierList0" */
    LookaheadDFA {
        states: &[None, Some(236), Some(239)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 14, 2),
            DFATransition(0, 15, 2),
            DFATransition(0, 16, 2),
            DFATransition(0, 17, 2),
            DFATransition(0, 18, 2),
            DFATransition(0, 19, 2),
            DFATransition(0, 20, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 2),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 31, 1),
            DFATransition(0, 32, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 36, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 144 - "HierarchicalIdentifierList0List" */
    LookaheadDFA {
        states: &[None, Some(237), Some(238)],
        transitions: &[
            DFATransition(0, 11, 2),
            DFATransition(0, 13, 2),
            DFATransition(0, 14, 2),
            DFATransition(0, 15, 2),
            DFATransition(0, 16, 2),
            DFATransition(0, 17, 2),
            DFATransition(0, 18, 2),
            DFATransition(0, 19, 2),
            DFATransition(0, 20, 2),
            DFATransition(0, 21, 2),
            DFATransition(0, 22, 2),
            DFATransition(0, 23, 2),
            DFATransition(0, 24, 2),
            DFATransition(0, 25, 2),
            DFATransition(0, 27, 2),
            DFATransition(0, 28, 2),
            DFATransition(0, 30, 2),
            DFATransition(0, 31, 2),
            DFATransition(0, 32, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 35, 1),
            DFATransition(0, 36, 2),
            DFATransition(0, 37, 2),
            DFATransition(0, 38, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 73, 2),
        ],
        k: 1,
    },
    /* 145 - "I32" */
    LookaheadDFA {
        states: &[Some(201)],
        transitions: &[],
        k: 0,
    },
    /* 146 - "I32Term" */
    LookaheadDFA {
        states: &[Some(48)],
        transitions: &[],
        k: 0,
    },
    /* 147 - "I32Token" */
    LookaheadDFA {
        states: &[Some(126)],
        transitions: &[],
        k: 0,
    },
    /* 148 - "I64" */
    LookaheadDFA {
        states: &[Some(202)],
        transitions: &[],
        k: 0,
    },
    /* 149 - "I64Term" */
    LookaheadDFA {
        states: &[Some(49)],
        transitions: &[],
        k: 0,
    },
    /* 150 - "I64Token" */
    LookaheadDFA {
        states: &[Some(127)],
        transitions: &[],
        k: 0,
    },
    /* 151 - "Identifier" */
    LookaheadDFA {
        states: &[Some(227)],
        transitions: &[],
        k: 0,
    },
    /* 152 - "IdentifierTerm" */
    LookaheadDFA {
        states: &[Some(74)],
        transitions: &[],
        k: 0,
    },
    /* 153 - "IdentifierToken" */
    LookaheadDFA {
        states: &[Some(152)],
        transitions: &[],
        k: 0,
    },
    /* 154 - "If" */
    LookaheadDFA {
        states: &[Some(203)],
        transitions: &[],
        k: 0,
    },
    /* 155 - "IfReset" */
    LookaheadDFA {
        states: &[Some(204)],
        transitions: &[],
        k: 0,
    },
    /* 156 - "IfResetStatement" */
    LookaheadDFA {
        states: &[Some(337)],
        transitions: &[],
        k: 0,
    },
    /* 157 - "IfResetStatementList" */
    LookaheadDFA {
        states: &[None, Some(342), Some(343)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 51, 1),
            DFATransition(0, 55, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 72, 1),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 158 - "IfResetStatementList0" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(338),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            Some(341),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 37, 5),
            DFATransition(0, 47, 1),
            DFATransition(0, 51, 6),
            DFATransition(0, 55, 7),
            DFATransition(0, 56, 8),
            DFATransition(0, 62, 9),
            DFATransition(0, 72, 10),
            DFATransition(0, 79, 11),
            DFATransition(1, 5, 2),
            DFATransition(1, 34, 31),
            DFATransition(1, 56, 4),
            DFATransition(2, 34, 30),
            DFATransition(2, 56, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 6, 3),
            DFATransition(4, 7, 3),
            DFATransition(4, 8, 3),
            DFATransition(4, 9, 3),
            DFATransition(4, 10, 3),
            DFATransition(4, 17, 3),
            DFATransition(4, 23, 3),
            DFATransition(4, 24, 3),
            DFATransition(4, 25, 3),
            DFATransition(4, 26, 3),
            DFATransition(4, 29, 3),
            DFATransition(4, 36, 3),
            DFATransition(4, 79, 3),
            DFATransition(5, 5, 12),
            DFATransition(5, 37, 13),
            DFATransition(5, 41, 14),
            DFATransition(5, 42, 15),
            DFATransition(5, 43, 16),
            DFATransition(5, 47, 17),
            DFATransition(5, 48, 18),
            DFATransition(5, 51, 19),
            DFATransition(5, 52, 20),
            DFATransition(5, 55, 21),
            DFATransition(5, 56, 22),
            DFATransition(5, 59, 23),
            DFATransition(5, 62, 24),
            DFATransition(5, 63, 25),
            DFATransition(5, 69, 26),
            DFATransition(5, 72, 27),
            DFATransition(5, 74, 28),
            DFATransition(5, 79, 29),
            DFATransition(6, 5, 32),
            DFATransition(6, 79, 33),
            DFATransition(7, 5, 34),
            DFATransition(7, 34, 35),
            DFATransition(8, 5, 36),
            DFATransition(8, 6, 37),
            DFATransition(8, 7, 38),
            DFATransition(8, 8, 39),
            DFATransition(8, 9, 40),
            DFATransition(8, 10, 41),
            DFATransition(8, 17, 42),
            DFATransition(8, 23, 43),
            DFATransition(8, 24, 44),
            DFATransition(8, 25, 45),
            DFATransition(8, 26, 46),
            DFATransition(8, 29, 47),
            DFATransition(8, 36, 48),
            DFATransition(8, 79, 49),
            DFATransition(9, 5, 50),
            DFATransition(9, 79, 51),
            DFATransition(10, 5, 52),
            DFATransition(10, 6, 53),
            DFATransition(10, 7, 54),
            DFATransition(10, 8, 55),
            DFATransition(10, 9, 56),
            DFATransition(10, 10, 57),
            DFATransition(10, 17, 58),
            DFATransition(10, 23, 59),
            DFATransition(10, 24, 60),
            DFATransition(10, 25, 61),
            DFATransition(10, 26, 62),
            DFATransition(10, 29, 63),
            DFATransition(10, 36, 64),
            DFATransition(10, 79, 65),
            DFATransition(11, 5, 66),
            DFATransition(11, 14, 67),
            DFATransition(11, 31, 68),
            DFATransition(11, 32, 69),
            DFATransition(11, 35, 70),
            DFATransition(12, 37, 30),
            DFATransition(12, 41, 30),
            DFATransition(12, 42, 30),
            DFATransition(12, 43, 30),
            DFATransition(12, 47, 30),
            DFATransition(12, 48, 30),
            DFATransition(12, 51, 30),
            DFATransition(12, 52, 30),
            DFATransition(12, 55, 30),
            DFATransition(12, 56, 30),
            DFATransition(12, 59, 30),
            DFATransition(12, 62, 30),
            DFATransition(12, 63, 30),
            DFATransition(12, 69, 30),
            DFATransition(12, 72, 30),
            DFATransition(12, 74, 30),
            DFATransition(12, 79, 30),
            DFATransition(13, 0, 30),
            DFATransition(13, 5, 30),
            DFATransition(13, 37, 30),
            DFATransition(13, 41, 30),
            DFATransition(13, 42, 30),
            DFATransition(13, 43, 30),
            DFATransition(13, 47, 30),
            DFATransition(13, 48, 30),
            DFATransition(13, 51, 30),
            DFATransition(13, 52, 30),
            DFATransition(13, 55, 30),
            DFATransition(13, 56, 30),
            DFATransition(13, 59, 30),
            DFATransition(13, 60, 30),
            DFATransition(13, 62, 30),
            DFATransition(13, 63, 30),
            DFATransition(13, 66, 30),
            DFATransition(13, 69, 30),
            DFATransition(13, 72, 30),
            DFATransition(13, 74, 30),
            DFATransition(13, 79, 30),
            DFATransition(14, 5, 30),
            DFATransition(14, 34, 30),
            DFATransition(15, 5, 30),
            DFATransition(15, 36, 30),
            DFATransition(16, 5, 30),
            DFATransition(16, 79, 30),
            DFATransition(17, 5, 30),
            DFATransition(17, 34, 30),
            DFATransition(17, 56, 30),
            DFATransition(18, 5, 30),
            DFATransition(18, 79, 30),
            DFATransition(19, 5, 30),
            DFATransition(19, 79, 30),
            DFATransition(20, 5, 30),
            DFATransition(20, 79, 30),
            DFATransition(21, 5, 30),
            DFATransition(21, 34, 30),
            DFATransition(22, 5, 30),
            DFATransition(22, 6, 30),
            DFATransition(22, 7, 30),
            DFATransition(22, 8, 30),
            DFATransition(22, 9, 30),
            DFATransition(22, 10, 30),
            DFATransition(22, 17, 30),
            DFATransition(22, 23, 30),
            DFATransition(22, 24, 30),
            DFATransition(22, 25, 30),
            DFATransition(22, 26, 30),
            DFATransition(22, 29, 30),
            DFATransition(22, 36, 30),
            DFATransition(22, 79, 30),
            DFATransition(23, 5, 30),
            DFATransition(23, 79, 30),
            DFATransition(24, 5, 30),
            DFATransition(24, 79, 30),
            DFATransition(25, 5, 30),
            DFATransition(25, 79, 30),
            DFATransition(26, 5, 30),
            DFATransition(26, 79, 30),
            DFATransition(27, 5, 30),
            DFATransition(27, 6, 30),
            DFATransition(27, 7, 30),
            DFATransition(27, 8, 30),
            DFATransition(27, 9, 30),
            DFATransition(27, 10, 30),
            DFATransition(27, 17, 30),
            DFATransition(27, 23, 30),
            DFATransition(27, 24, 30),
            DFATransition(27, 25, 30),
            DFATransition(27, 26, 30),
            DFATransition(27, 29, 30),
            DFATransition(27, 36, 30),
            DFATransition(27, 79, 30),
            DFATransition(28, 5, 30),
            DFATransition(28, 79, 30),
            DFATransition(29, 5, 30),
            DFATransition(29, 14, 30),
            DFATransition(29, 31, 30),
            DFATransition(29, 32, 30),
            DFATransition(29, 35, 30),
            DFATransition(31, 5, 30),
            DFATransition(31, 37, 30),
            DFATransition(31, 51, 30),
            DFATransition(31, 55, 30),
            DFATransition(31, 56, 30),
            DFATransition(31, 72, 30),
            DFATransition(31, 79, 30),
            DFATransition(32, 79, 30),
            DFATransition(33, 5, 30),
            DFATransition(33, 27, 30),
            DFATransition(34, 34, 30),
            DFATransition(35, 5, 30),
            DFATransition(35, 37, 30),
            DFATransition(35, 51, 30),
            DFATransition(35, 55, 30),
            DFATransition(35, 56, 30),
            DFATransition(35, 72, 30),
            DFATransition(35, 79, 30),
            DFATransition(36, 6, 30),
            DFATransition(36, 7, 30),
            DFATransition(36, 8, 30),
            DFATransition(36, 9, 30),
            DFATransition(36, 10, 30),
            DFATransition(36, 17, 30),
            DFATransition(36, 23, 30),
            DFATransition(36, 24, 30),
            DFATransition(36, 25, 30),
            DFATransition(36, 26, 30),
            DFATransition(36, 29, 30),
            DFATransition(36, 36, 30),
            DFATransition(36, 79, 30),
            DFATransition(37, 5, 30),
            DFATransition(37, 15, 30),
            DFATransition(37, 16, 30),
            DFATransition(37, 17, 30),
            DFATransition(37, 18, 30),
            DFATransition(37, 19, 30),
            DFATransition(37, 20, 30),
            DFATransition(37, 21, 30),
            DFATransition(37, 22, 30),
            DFATransition(37, 23, 30),
            DFATransition(37, 24, 30),
            DFATransition(37, 25, 30),
            DFATransition(37, 34, 30),
            DFATransition(38, 5, 30),
            DFATransition(38, 15, 30),
            DFATransition(38, 16, 30),
            DFATransition(38, 17, 30),
            DFATransition(38, 18, 30),
            DFATransition(38, 19, 30),
            DFATransition(38, 20, 30),
            DFATransition(38, 21, 30),
            DFATransition(38, 22, 30),
            DFATransition(38, 23, 30),
            DFATransition(38, 24, 30),
            DFATransition(38, 25, 30),
            DFATransition(38, 34, 30),
            DFATransition(39, 5, 30),
            DFATransition(39, 15, 30),
            DFATransition(39, 16, 30),
            DFATransition(39, 17, 30),
            DFATransition(39, 18, 30),
            DFATransition(39, 19, 30),
            DFATransition(39, 20, 30),
            DFATransition(39, 21, 30),
            DFATransition(39, 22, 30),
            DFATransition(39, 23, 30),
            DFATransition(39, 24, 30),
            DFATransition(39, 25, 30),
            DFATransition(39, 34, 30),
            DFATransition(40, 5, 30),
            DFATransition(40, 15, 30),
            DFATransition(40, 16, 30),
            DFATransition(40, 17, 30),
            DFATransition(40, 18, 30),
            DFATransition(40, 19, 30),
            DFATransition(40, 20, 30),
            DFATransition(40, 21, 30),
            DFATransition(40, 22, 30),
            DFATransition(40, 23, 30),
            DFATransition(40, 24, 30),
            DFATransition(40, 25, 30),
            DFATransition(40, 34, 30),
            DFATransition(41, 5, 30),
            DFATransition(41, 15, 30),
            DFATransition(41, 16, 30),
            DFATransition(41, 17, 30),
            DFATransition(41, 18, 30),
            DFATransition(41, 19, 30),
            DFATransition(41, 20, 30),
            DFATransition(41, 21, 30),
            DFATransition(41, 22, 30),
            DFATransition(41, 23, 30),
            DFATransition(41, 24, 30),
            DFATransition(41, 25, 30),
            DFATransition(41, 34, 30),
            DFATransition(42, 5, 30),
            DFATransition(42, 6, 30),
            DFATransition(42, 7, 30),
            DFATransition(42, 8, 30),
            DFATransition(42, 9, 30),
            DFATransition(42, 10, 30),
            DFATransition(42, 29, 30),
            DFATransition(42, 36, 30),
            DFATransition(42, 79, 30),
            DFATransition(43, 5, 30),
            DFATransition(43, 6, 30),
            DFATransition(43, 7, 30),
            DFATransition(43, 8, 30),
            DFATransition(43, 9, 30),
            DFATransition(43, 10, 30),
            DFATransition(43, 29, 30),
            DFATransition(43, 36, 30),
            DFATransition(43, 79, 30),
            DFATransition(44, 5, 30),
            DFATransition(44, 6, 30),
            DFATransition(44, 7, 30),
            DFATransition(44, 8, 30),
            DFATransition(44, 9, 30),
            DFATransition(44, 10, 30),
            DFATransition(44, 29, 30),
            DFATransition(44, 36, 30),
            DFATransition(44, 79, 30),
            DFATransition(45, 5, 30),
            DFATransition(45, 6, 30),
            DFATransition(45, 7, 30),
            DFATransition(45, 8, 30),
            DFATransition(45, 9, 30),
            DFATransition(45, 10, 30),
            DFATransition(45, 29, 30),
            DFATransition(45, 36, 30),
            DFATransition(45, 79, 30),
            DFATransition(46, 5, 30),
            DFATransition(46, 6, 30),
            DFATransition(46, 7, 30),
            DFATransition(46, 8, 30),
            DFATransition(46, 9, 30),
            DFATransition(46, 10, 30),
            DFATransition(46, 29, 30),
            DFATransition(46, 36, 30),
            DFATransition(46, 79, 30),
            DFATransition(47, 5, 30),
            DFATransition(47, 79, 30),
            DFATransition(48, 5, 30),
            DFATransition(48, 6, 30),
            DFATransition(48, 7, 30),
            DFATransition(48, 8, 30),
            DFATransition(48, 9, 30),
            DFATransition(48, 10, 30),
            DFATransition(48, 17, 30),
            DFATransition(48, 23, 30),
            DFATransition(48, 24, 30),
            DFATransition(48, 25, 30),
            DFATransition(48, 26, 30),
            DFATransition(48, 29, 30),
            DFATransition(48, 36, 30),
            DFATransition(48, 79, 30),
            DFATransition(49, 5, 30),
            DFATransition(49, 15, 30),
            DFATransition(49, 16, 30),
            DFATransition(49, 17, 30),
            DFATransition(49, 18, 30),
            DFATransition(49, 19, 30),
            DFATransition(49, 20, 30),
            DFATransition(49, 21, 30),
            DFATransition(49, 22, 30),
            DFATransition(49, 23, 30),
            DFATransition(49, 24, 30),
            DFATransition(49, 25, 30),
            DFATransition(49, 31, 30),
            DFATransition(49, 34, 30),
            DFATransition(49, 35, 30),
            DFATransition(49, 36, 30),
            DFATransition(50, 79, 30),
            DFATransition(51, 5, 30),
            DFATransition(51, 27, 30),
            DFATransition(52, 6, 30),
            DFATransition(52, 7, 30),
            DFATransition(52, 8, 30),
            DFATransition(52, 9, 30),
            DFATransition(52, 10, 30),
            DFATransition(52, 17, 30),
            DFATransition(52, 23, 30),
            DFATransition(52, 24, 30),
            DFATransition(52, 25, 30),
            DFATransition(52, 26, 30),
            DFATransition(52, 29, 30),
            DFATransition(52, 36, 30),
            DFATransition(52, 79, 30),
            DFATransition(53, 5, 30),
            DFATransition(53, 15, 30),
            DFATransition(53, 16, 30),
            DFATransition(53, 17, 30),
            DFATransition(53, 18, 30),
            DFATransition(53, 19, 30),
            DFATransition(53, 20, 30),
            DFATransition(53, 21, 30),
            DFATransition(53, 22, 30),
            DFATransition(53, 23, 30),
            DFATransition(53, 24, 30),
            DFATransition(53, 25, 30),
            DFATransition(53, 40, 30),
            DFATransition(54, 5, 30),
            DFATransition(54, 15, 30),
            DFATransition(54, 16, 30),
            DFATransition(54, 17, 30),
            DFATransition(54, 18, 30),
            DFATransition(54, 19, 30),
            DFATransition(54, 20, 30),
            DFATransition(54, 21, 30),
            DFATransition(54, 22, 30),
            DFATransition(54, 23, 30),
            DFATransition(54, 24, 30),
            DFATransition(54, 25, 30),
            DFATransition(54, 40, 30),
            DFATransition(55, 5, 30),
            DFATransition(55, 15, 30),
            DFATransition(55, 16, 30),
            DFATransition(55, 17, 30),
            DFATransition(55, 18, 30),
            DFATransition(55, 19, 30),
            DFATransition(55, 20, 30),
            DFATransition(55, 21, 30),
            DFATransition(55, 22, 30),
            DFATransition(55, 23, 30),
            DFATransition(55, 24, 30),
            DFATransition(55, 25, 30),
            DFATransition(55, 40, 30),
            DFATransition(56, 5, 30),
            DFATransition(56, 15, 30),
            DFATransition(56, 16, 30),
            DFATransition(56, 17, 30),
            DFATransition(56, 18, 30),
            DFATransition(56, 19, 30),
            DFATransition(56, 20, 30),
            DFATransition(56, 21, 30),
            DFATransition(56, 22, 30),
            DFATransition(56, 23, 30),
            DFATransition(56, 24, 30),
            DFATransition(56, 25, 30),
            DFATransition(56, 40, 30),
            DFATransition(57, 5, 30),
            DFATransition(57, 15, 30),
            DFATransition(57, 16, 30),
            DFATransition(57, 17, 30),
            DFATransition(57, 18, 30),
            DFATransition(57, 19, 30),
            DFATransition(57, 20, 30),
            DFATransition(57, 21, 30),
            DFATransition(57, 22, 30),
            DFATransition(57, 23, 30),
            DFATransition(57, 24, 30),
            DFATransition(57, 25, 30),
            DFATransition(57, 40, 30),
            DFATransition(58, 5, 30),
            DFATransition(58, 6, 30),
            DFATransition(58, 7, 30),
            DFATransition(58, 8, 30),
            DFATransition(58, 9, 30),
            DFATransition(58, 10, 30),
            DFATransition(58, 29, 30),
            DFATransition(58, 36, 30),
            DFATransition(58, 79, 30),
            DFATransition(59, 5, 30),
            DFATransition(59, 6, 30),
            DFATransition(59, 7, 30),
            DFATransition(59, 8, 30),
            DFATransition(59, 9, 30),
            DFATransition(59, 10, 30),
            DFATransition(59, 29, 30),
            DFATransition(59, 36, 30),
            DFATransition(59, 79, 30),
            DFATransition(60, 5, 30),
            DFATransition(60, 6, 30),
            DFATransition(60, 7, 30),
            DFATransition(60, 8, 30),
            DFATransition(60, 9, 30),
            DFATransition(60, 10, 30),
            DFATransition(60, 29, 30),
            DFATransition(60, 36, 30),
            DFATransition(60, 79, 30),
            DFATransition(61, 5, 30),
            DFATransition(61, 6, 30),
            DFATransition(61, 7, 30),
            DFATransition(61, 8, 30),
            DFATransition(61, 9, 30),
            DFATransition(61, 10, 30),
            DFATransition(61, 29, 30),
            DFATransition(61, 36, 30),
            DFATransition(61, 79, 30),
            DFATransition(62, 5, 30),
            DFATransition(62, 6, 30),
            DFATransition(62, 7, 30),
            DFATransition(62, 8, 30),
            DFATransition(62, 9, 30),
            DFATransition(62, 10, 30),
            DFATransition(62, 29, 30),
            DFATransition(62, 36, 30),
            DFATransition(62, 79, 30),
            DFATransition(63, 5, 30),
            DFATransition(63, 79, 30),
            DFATransition(64, 5, 30),
            DFATransition(64, 6, 30),
            DFATransition(64, 7, 30),
            DFATransition(64, 8, 30),
            DFATransition(64, 9, 30),
            DFATransition(64, 10, 30),
            DFATransition(64, 17, 30),
            DFATransition(64, 23, 30),
            DFATransition(64, 24, 30),
            DFATransition(64, 25, 30),
            DFATransition(64, 26, 30),
            DFATransition(64, 29, 30),
            DFATransition(64, 36, 30),
            DFATransition(64, 79, 30),
            DFATransition(65, 5, 30),
            DFATransition(65, 15, 30),
            DFATransition(65, 16, 30),
            DFATransition(65, 17, 30),
            DFATransition(65, 18, 30),
            DFATransition(65, 19, 30),
            DFATransition(65, 20, 30),
            DFATransition(65, 21, 30),
            DFATransition(65, 22, 30),
            DFATransition(65, 23, 30),
            DFATransition(65, 24, 30),
            DFATransition(65, 25, 30),
            DFATransition(65, 31, 30),
            DFATransition(65, 35, 30),
            DFATransition(65, 36, 30),
            DFATransition(65, 40, 30),
            DFATransition(66, 14, 30),
            DFATransition(66, 31, 30),
            DFATransition(66, 32, 30),
            DFATransition(66, 35, 30),
            DFATransition(67, 5, 30),
            DFATransition(67, 6, 30),
            DFATransition(67, 7, 30),
            DFATransition(67, 8, 30),
            DFATransition(67, 9, 30),
            DFATransition(67, 10, 30),
            DFATransition(67, 17, 30),
            DFATransition(67, 23, 30),
            DFATransition(67, 24, 30),
            DFATransition(67, 25, 30),
            DFATransition(67, 26, 30),
            DFATransition(67, 29, 30),
            DFATransition(67, 36, 30),
            DFATransition(67, 79, 30),
            DFATransition(68, 5, 30),
            DFATransition(68, 79, 30),
            DFATransition(69, 5, 30),
            DFATransition(69, 6, 30),
            DFATransition(69, 7, 30),
            DFATransition(69, 8, 30),
            DFATransition(69, 9, 30),
            DFATransition(69, 10, 30),
            DFATransition(69, 17, 30),
            DFATransition(69, 23, 30),
            DFATransition(69, 24, 30),
            DFATransition(69, 25, 30),
            DFATransition(69, 26, 30),
            DFATransition(69, 29, 30),
            DFATransition(69, 36, 30),
            DFATransition(69, 79, 30),
            DFATransition(70, 5, 30),
            DFATransition(70, 6, 30),
            DFATransition(70, 7, 30),
            DFATransition(70, 8, 30),
            DFATransition(70, 9, 30),
            DFATransition(70, 10, 30),
            DFATransition(70, 17, 30),
            DFATransition(70, 23, 30),
            DFATransition(70, 24, 30),
            DFATransition(70, 25, 30),
            DFATransition(70, 26, 30),
            DFATransition(70, 29, 30),
            DFATransition(70, 36, 30),
            DFATransition(70, 79, 30),
        ],
        k: 3,
    },
    /* 159 - "IfResetStatementList0List" */
    LookaheadDFA {
        states: &[None, Some(339), Some(340)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 51, 1),
            DFATransition(0, 55, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 72, 1),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 160 - "IfResetStatementOpt" */
    LookaheadDFA {
        states: &[None, Some(344), Some(347)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 47, 1),
            DFATransition(0, 51, 2),
            DFATransition(0, 55, 2),
            DFATransition(0, 56, 2),
            DFATransition(0, 62, 2),
            DFATransition(0, 72, 2),
            DFATransition(0, 79, 2),
        ],
        k: 1,
    },
    /* 161 - "IfResetStatementOptList" */
    LookaheadDFA {
        states: &[None, Some(345), Some(346)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 51, 1),
            DFATransition(0, 55, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 72, 1),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 162 - "IfResetTerm" */
    LookaheadDFA {
        states: &[Some(50)],
        transitions: &[],
        k: 0,
    },
    /* 163 - "IfResetToken" */
    LookaheadDFA {
        states: &[Some(128)],
        transitions: &[],
        k: 0,
    },
    /* 164 - "IfStatement" */
    LookaheadDFA {
        states: &[Some(326)],
        transitions: &[],
        k: 0,
    },
    /* 165 - "IfStatementList" */
    LookaheadDFA {
        states: &[None, Some(331), Some(332)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 51, 1),
            DFATransition(0, 55, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 72, 1),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 166 - "IfStatementList0" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(327),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            Some(330),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 37, 5),
            DFATransition(0, 47, 1),
            DFATransition(0, 51, 6),
            DFATransition(0, 55, 7),
            DFATransition(0, 56, 8),
            DFATransition(0, 62, 9),
            DFATransition(0, 72, 10),
            DFATransition(0, 79, 11),
            DFATransition(1, 5, 2),
            DFATransition(1, 34, 31),
            DFATransition(1, 56, 4),
            DFATransition(2, 34, 30),
            DFATransition(2, 56, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 6, 3),
            DFATransition(4, 7, 3),
            DFATransition(4, 8, 3),
            DFATransition(4, 9, 3),
            DFATransition(4, 10, 3),
            DFATransition(4, 17, 3),
            DFATransition(4, 23, 3),
            DFATransition(4, 24, 3),
            DFATransition(4, 25, 3),
            DFATransition(4, 26, 3),
            DFATransition(4, 29, 3),
            DFATransition(4, 36, 3),
            DFATransition(4, 79, 3),
            DFATransition(5, 5, 12),
            DFATransition(5, 37, 13),
            DFATransition(5, 41, 14),
            DFATransition(5, 42, 15),
            DFATransition(5, 43, 16),
            DFATransition(5, 47, 17),
            DFATransition(5, 48, 18),
            DFATransition(5, 51, 19),
            DFATransition(5, 52, 20),
            DFATransition(5, 55, 21),
            DFATransition(5, 56, 22),
            DFATransition(5, 59, 23),
            DFATransition(5, 62, 24),
            DFATransition(5, 63, 25),
            DFATransition(5, 69, 26),
            DFATransition(5, 72, 27),
            DFATransition(5, 74, 28),
            DFATransition(5, 79, 29),
            DFATransition(6, 5, 32),
            DFATransition(6, 79, 33),
            DFATransition(7, 5, 34),
            DFATransition(7, 34, 35),
            DFATransition(8, 5, 36),
            DFATransition(8, 6, 37),
            DFATransition(8, 7, 38),
            DFATransition(8, 8, 39),
            DFATransition(8, 9, 40),
            DFATransition(8, 10, 41),
            DFATransition(8, 17, 42),
            DFATransition(8, 23, 43),
            DFATransition(8, 24, 44),
            DFATransition(8, 25, 45),
            DFATransition(8, 26, 46),
            DFATransition(8, 29, 47),
            DFATransition(8, 36, 48),
            DFATransition(8, 79, 49),
            DFATransition(9, 5, 50),
            DFATransition(9, 79, 51),
            DFATransition(10, 5, 52),
            DFATransition(10, 6, 53),
            DFATransition(10, 7, 54),
            DFATransition(10, 8, 55),
            DFATransition(10, 9, 56),
            DFATransition(10, 10, 57),
            DFATransition(10, 17, 58),
            DFATransition(10, 23, 59),
            DFATransition(10, 24, 60),
            DFATransition(10, 25, 61),
            DFATransition(10, 26, 62),
            DFATransition(10, 29, 63),
            DFATransition(10, 36, 64),
            DFATransition(10, 79, 65),
            DFATransition(11, 5, 66),
            DFATransition(11, 14, 67),
            DFATransition(11, 31, 68),
            DFATransition(11, 32, 69),
            DFATransition(11, 35, 70),
            DFATransition(12, 37, 30),
            DFATransition(12, 41, 30),
            DFATransition(12, 42, 30),
            DFATransition(12, 43, 30),
            DFATransition(12, 47, 30),
            DFATransition(12, 48, 30),
            DFATransition(12, 51, 30),
            DFATransition(12, 52, 30),
            DFATransition(12, 55, 30),
            DFATransition(12, 56, 30),
            DFATransition(12, 59, 30),
            DFATransition(12, 62, 30),
            DFATransition(12, 63, 30),
            DFATransition(12, 69, 30),
            DFATransition(12, 72, 30),
            DFATransition(12, 74, 30),
            DFATransition(12, 79, 30),
            DFATransition(13, 0, 30),
            DFATransition(13, 5, 30),
            DFATransition(13, 37, 30),
            DFATransition(13, 41, 30),
            DFATransition(13, 42, 30),
            DFATransition(13, 43, 30),
            DFATransition(13, 47, 30),
            DFATransition(13, 48, 30),
            DFATransition(13, 51, 30),
            DFATransition(13, 52, 30),
            DFATransition(13, 55, 30),
            DFATransition(13, 56, 30),
            DFATransition(13, 59, 30),
            DFATransition(13, 60, 30),
            DFATransition(13, 62, 30),
            DFATransition(13, 63, 30),
            DFATransition(13, 66, 30),
            DFATransition(13, 69, 30),
            DFATransition(13, 72, 30),
            DFATransition(13, 74, 30),
            DFATransition(13, 79, 30),
            DFATransition(14, 5, 30),
            DFATransition(14, 34, 30),
            DFATransition(15, 5, 30),
            DFATransition(15, 36, 30),
            DFATransition(16, 5, 30),
            DFATransition(16, 79, 30),
            DFATransition(17, 5, 30),
            DFATransition(17, 34, 30),
            DFATransition(17, 56, 30),
            DFATransition(18, 5, 30),
            DFATransition(18, 79, 30),
            DFATransition(19, 5, 30),
            DFATransition(19, 79, 30),
            DFATransition(20, 5, 30),
            DFATransition(20, 79, 30),
            DFATransition(21, 5, 30),
            DFATransition(21, 34, 30),
            DFATransition(22, 5, 30),
            DFATransition(22, 6, 30),
            DFATransition(22, 7, 30),
            DFATransition(22, 8, 30),
            DFATransition(22, 9, 30),
            DFATransition(22, 10, 30),
            DFATransition(22, 17, 30),
            DFATransition(22, 23, 30),
            DFATransition(22, 24, 30),
            DFATransition(22, 25, 30),
            DFATransition(22, 26, 30),
            DFATransition(22, 29, 30),
            DFATransition(22, 36, 30),
            DFATransition(22, 79, 30),
            DFATransition(23, 5, 30),
            DFATransition(23, 79, 30),
            DFATransition(24, 5, 30),
            DFATransition(24, 79, 30),
            DFATransition(25, 5, 30),
            DFATransition(25, 79, 30),
            DFATransition(26, 5, 30),
            DFATransition(26, 79, 30),
            DFATransition(27, 5, 30),
            DFATransition(27, 6, 30),
            DFATransition(27, 7, 30),
            DFATransition(27, 8, 30),
            DFATransition(27, 9, 30),
            DFATransition(27, 10, 30),
            DFATransition(27, 17, 30),
            DFATransition(27, 23, 30),
            DFATransition(27, 24, 30),
            DFATransition(27, 25, 30),
            DFATransition(27, 26, 30),
            DFATransition(27, 29, 30),
            DFATransition(27, 36, 30),
            DFATransition(27, 79, 30),
            DFATransition(28, 5, 30),
            DFATransition(28, 79, 30),
            DFATransition(29, 5, 30),
            DFATransition(29, 14, 30),
            DFATransition(29, 31, 30),
            DFATransition(29, 32, 30),
            DFATransition(29, 35, 30),
            DFATransition(31, 5, 30),
            DFATransition(31, 37, 30),
            DFATransition(31, 51, 30),
            DFATransition(31, 55, 30),
            DFATransition(31, 56, 30),
            DFATransition(31, 72, 30),
            DFATransition(31, 79, 30),
            DFATransition(32, 79, 30),
            DFATransition(33, 5, 30),
            DFATransition(33, 27, 30),
            DFATransition(34, 34, 30),
            DFATransition(35, 5, 30),
            DFATransition(35, 37, 30),
            DFATransition(35, 51, 30),
            DFATransition(35, 55, 30),
            DFATransition(35, 56, 30),
            DFATransition(35, 72, 30),
            DFATransition(35, 79, 30),
            DFATransition(36, 6, 30),
            DFATransition(36, 7, 30),
            DFATransition(36, 8, 30),
            DFATransition(36, 9, 30),
            DFATransition(36, 10, 30),
            DFATransition(36, 17, 30),
            DFATransition(36, 23, 30),
            DFATransition(36, 24, 30),
            DFATransition(36, 25, 30),
            DFATransition(36, 26, 30),
            DFATransition(36, 29, 30),
            DFATransition(36, 36, 30),
            DFATransition(36, 79, 30),
            DFATransition(37, 5, 30),
            DFATransition(37, 15, 30),
            DFATransition(37, 16, 30),
            DFATransition(37, 17, 30),
            DFATransition(37, 18, 30),
            DFATransition(37, 19, 30),
            DFATransition(37, 20, 30),
            DFATransition(37, 21, 30),
            DFATransition(37, 22, 30),
            DFATransition(37, 23, 30),
            DFATransition(37, 24, 30),
            DFATransition(37, 25, 30),
            DFATransition(37, 34, 30),
            DFATransition(38, 5, 30),
            DFATransition(38, 15, 30),
            DFATransition(38, 16, 30),
            DFATransition(38, 17, 30),
            DFATransition(38, 18, 30),
            DFATransition(38, 19, 30),
            DFATransition(38, 20, 30),
            DFATransition(38, 21, 30),
            DFATransition(38, 22, 30),
            DFATransition(38, 23, 30),
            DFATransition(38, 24, 30),
            DFATransition(38, 25, 30),
            DFATransition(38, 34, 30),
            DFATransition(39, 5, 30),
            DFATransition(39, 15, 30),
            DFATransition(39, 16, 30),
            DFATransition(39, 17, 30),
            DFATransition(39, 18, 30),
            DFATransition(39, 19, 30),
            DFATransition(39, 20, 30),
            DFATransition(39, 21, 30),
            DFATransition(39, 22, 30),
            DFATransition(39, 23, 30),
            DFATransition(39, 24, 30),
            DFATransition(39, 25, 30),
            DFATransition(39, 34, 30),
            DFATransition(40, 5, 30),
            DFATransition(40, 15, 30),
            DFATransition(40, 16, 30),
            DFATransition(40, 17, 30),
            DFATransition(40, 18, 30),
            DFATransition(40, 19, 30),
            DFATransition(40, 20, 30),
            DFATransition(40, 21, 30),
            DFATransition(40, 22, 30),
            DFATransition(40, 23, 30),
            DFATransition(40, 24, 30),
            DFATransition(40, 25, 30),
            DFATransition(40, 34, 30),
            DFATransition(41, 5, 30),
            DFATransition(41, 15, 30),
            DFATransition(41, 16, 30),
            DFATransition(41, 17, 30),
            DFATransition(41, 18, 30),
            DFATransition(41, 19, 30),
            DFATransition(41, 20, 30),
            DFATransition(41, 21, 30),
            DFATransition(41, 22, 30),
            DFATransition(41, 23, 30),
            DFATransition(41, 24, 30),
            DFATransition(41, 25, 30),
            DFATransition(41, 34, 30),
            DFATransition(42, 5, 30),
            DFATransition(42, 6, 30),
            DFATransition(42, 7, 30),
            DFATransition(42, 8, 30),
            DFATransition(42, 9, 30),
            DFATransition(42, 10, 30),
            DFATransition(42, 29, 30),
            DFATransition(42, 36, 30),
            DFATransition(42, 79, 30),
            DFATransition(43, 5, 30),
            DFATransition(43, 6, 30),
            DFATransition(43, 7, 30),
            DFATransition(43, 8, 30),
            DFATransition(43, 9, 30),
            DFATransition(43, 10, 30),
            DFATransition(43, 29, 30),
            DFATransition(43, 36, 30),
            DFATransition(43, 79, 30),
            DFATransition(44, 5, 30),
            DFATransition(44, 6, 30),
            DFATransition(44, 7, 30),
            DFATransition(44, 8, 30),
            DFATransition(44, 9, 30),
            DFATransition(44, 10, 30),
            DFATransition(44, 29, 30),
            DFATransition(44, 36, 30),
            DFATransition(44, 79, 30),
            DFATransition(45, 5, 30),
            DFATransition(45, 6, 30),
            DFATransition(45, 7, 30),
            DFATransition(45, 8, 30),
            DFATransition(45, 9, 30),
            DFATransition(45, 10, 30),
            DFATransition(45, 29, 30),
            DFATransition(45, 36, 30),
            DFATransition(45, 79, 30),
            DFATransition(46, 5, 30),
            DFATransition(46, 6, 30),
            DFATransition(46, 7, 30),
            DFATransition(46, 8, 30),
            DFATransition(46, 9, 30),
            DFATransition(46, 10, 30),
            DFATransition(46, 29, 30),
            DFATransition(46, 36, 30),
            DFATransition(46, 79, 30),
            DFATransition(47, 5, 30),
            DFATransition(47, 79, 30),
            DFATransition(48, 5, 30),
            DFATransition(48, 6, 30),
            DFATransition(48, 7, 30),
            DFATransition(48, 8, 30),
            DFATransition(48, 9, 30),
            DFATransition(48, 10, 30),
            DFATransition(48, 17, 30),
            DFATransition(48, 23, 30),
            DFATransition(48, 24, 30),
            DFATransition(48, 25, 30),
            DFATransition(48, 26, 30),
            DFATransition(48, 29, 30),
            DFATransition(48, 36, 30),
            DFATransition(48, 79, 30),
            DFATransition(49, 5, 30),
            DFATransition(49, 15, 30),
            DFATransition(49, 16, 30),
            DFATransition(49, 17, 30),
            DFATransition(49, 18, 30),
            DFATransition(49, 19, 30),
            DFATransition(49, 20, 30),
            DFATransition(49, 21, 30),
            DFATransition(49, 22, 30),
            DFATransition(49, 23, 30),
            DFATransition(49, 24, 30),
            DFATransition(49, 25, 30),
            DFATransition(49, 31, 30),
            DFATransition(49, 34, 30),
            DFATransition(49, 35, 30),
            DFATransition(49, 36, 30),
            DFATransition(50, 79, 30),
            DFATransition(51, 5, 30),
            DFATransition(51, 27, 30),
            DFATransition(52, 6, 30),
            DFATransition(52, 7, 30),
            DFATransition(52, 8, 30),
            DFATransition(52, 9, 30),
            DFATransition(52, 10, 30),
            DFATransition(52, 17, 30),
            DFATransition(52, 23, 30),
            DFATransition(52, 24, 30),
            DFATransition(52, 25, 30),
            DFATransition(52, 26, 30),
            DFATransition(52, 29, 30),
            DFATransition(52, 36, 30),
            DFATransition(52, 79, 30),
            DFATransition(53, 5, 30),
            DFATransition(53, 15, 30),
            DFATransition(53, 16, 30),
            DFATransition(53, 17, 30),
            DFATransition(53, 18, 30),
            DFATransition(53, 19, 30),
            DFATransition(53, 20, 30),
            DFATransition(53, 21, 30),
            DFATransition(53, 22, 30),
            DFATransition(53, 23, 30),
            DFATransition(53, 24, 30),
            DFATransition(53, 25, 30),
            DFATransition(53, 40, 30),
            DFATransition(54, 5, 30),
            DFATransition(54, 15, 30),
            DFATransition(54, 16, 30),
            DFATransition(54, 17, 30),
            DFATransition(54, 18, 30),
            DFATransition(54, 19, 30),
            DFATransition(54, 20, 30),
            DFATransition(54, 21, 30),
            DFATransition(54, 22, 30),
            DFATransition(54, 23, 30),
            DFATransition(54, 24, 30),
            DFATransition(54, 25, 30),
            DFATransition(54, 40, 30),
            DFATransition(55, 5, 30),
            DFATransition(55, 15, 30),
            DFATransition(55, 16, 30),
            DFATransition(55, 17, 30),
            DFATransition(55, 18, 30),
            DFATransition(55, 19, 30),
            DFATransition(55, 20, 30),
            DFATransition(55, 21, 30),
            DFATransition(55, 22, 30),
            DFATransition(55, 23, 30),
            DFATransition(55, 24, 30),
            DFATransition(55, 25, 30),
            DFATransition(55, 40, 30),
            DFATransition(56, 5, 30),
            DFATransition(56, 15, 30),
            DFATransition(56, 16, 30),
            DFATransition(56, 17, 30),
            DFATransition(56, 18, 30),
            DFATransition(56, 19, 30),
            DFATransition(56, 20, 30),
            DFATransition(56, 21, 30),
            DFATransition(56, 22, 30),
            DFATransition(56, 23, 30),
            DFATransition(56, 24, 30),
            DFATransition(56, 25, 30),
            DFATransition(56, 40, 30),
            DFATransition(57, 5, 30),
            DFATransition(57, 15, 30),
            DFATransition(57, 16, 30),
            DFATransition(57, 17, 30),
            DFATransition(57, 18, 30),
            DFATransition(57, 19, 30),
            DFATransition(57, 20, 30),
            DFATransition(57, 21, 30),
            DFATransition(57, 22, 30),
            DFATransition(57, 23, 30),
            DFATransition(57, 24, 30),
            DFATransition(57, 25, 30),
            DFATransition(57, 40, 30),
            DFATransition(58, 5, 30),
            DFATransition(58, 6, 30),
            DFATransition(58, 7, 30),
            DFATransition(58, 8, 30),
            DFATransition(58, 9, 30),
            DFATransition(58, 10, 30),
            DFATransition(58, 29, 30),
            DFATransition(58, 36, 30),
            DFATransition(58, 79, 30),
            DFATransition(59, 5, 30),
            DFATransition(59, 6, 30),
            DFATransition(59, 7, 30),
            DFATransition(59, 8, 30),
            DFATransition(59, 9, 30),
            DFATransition(59, 10, 30),
            DFATransition(59, 29, 30),
            DFATransition(59, 36, 30),
            DFATransition(59, 79, 30),
            DFATransition(60, 5, 30),
            DFATransition(60, 6, 30),
            DFATransition(60, 7, 30),
            DFATransition(60, 8, 30),
            DFATransition(60, 9, 30),
            DFATransition(60, 10, 30),
            DFATransition(60, 29, 30),
            DFATransition(60, 36, 30),
            DFATransition(60, 79, 30),
            DFATransition(61, 5, 30),
            DFATransition(61, 6, 30),
            DFATransition(61, 7, 30),
            DFATransition(61, 8, 30),
            DFATransition(61, 9, 30),
            DFATransition(61, 10, 30),
            DFATransition(61, 29, 30),
            DFATransition(61, 36, 30),
            DFATransition(61, 79, 30),
            DFATransition(62, 5, 30),
            DFATransition(62, 6, 30),
            DFATransition(62, 7, 30),
            DFATransition(62, 8, 30),
            DFATransition(62, 9, 30),
            DFATransition(62, 10, 30),
            DFATransition(62, 29, 30),
            DFATransition(62, 36, 30),
            DFATransition(62, 79, 30),
            DFATransition(63, 5, 30),
            DFATransition(63, 79, 30),
            DFATransition(64, 5, 30),
            DFATransition(64, 6, 30),
            DFATransition(64, 7, 30),
            DFATransition(64, 8, 30),
            DFATransition(64, 9, 30),
            DFATransition(64, 10, 30),
            DFATransition(64, 17, 30),
            DFATransition(64, 23, 30),
            DFATransition(64, 24, 30),
            DFATransition(64, 25, 30),
            DFATransition(64, 26, 30),
            DFATransition(64, 29, 30),
            DFATransition(64, 36, 30),
            DFATransition(64, 79, 30),
            DFATransition(65, 5, 30),
            DFATransition(65, 15, 30),
            DFATransition(65, 16, 30),
            DFATransition(65, 17, 30),
            DFATransition(65, 18, 30),
            DFATransition(65, 19, 30),
            DFATransition(65, 20, 30),
            DFATransition(65, 21, 30),
            DFATransition(65, 22, 30),
            DFATransition(65, 23, 30),
            DFATransition(65, 24, 30),
            DFATransition(65, 25, 30),
            DFATransition(65, 31, 30),
            DFATransition(65, 35, 30),
            DFATransition(65, 36, 30),
            DFATransition(65, 40, 30),
            DFATransition(66, 14, 30),
            DFATransition(66, 31, 30),
            DFATransition(66, 32, 30),
            DFATransition(66, 35, 30),
            DFATransition(67, 5, 30),
            DFATransition(67, 6, 30),
            DFATransition(67, 7, 30),
            DFATransition(67, 8, 30),
            DFATransition(67, 9, 30),
            DFATransition(67, 10, 30),
            DFATransition(67, 17, 30),
            DFATransition(67, 23, 30),
            DFATransition(67, 24, 30),
            DFATransition(67, 25, 30),
            DFATransition(67, 26, 30),
            DFATransition(67, 29, 30),
            DFATransition(67, 36, 30),
            DFATransition(67, 79, 30),
            DFATransition(68, 5, 30),
            DFATransition(68, 79, 30),
            DFATransition(69, 5, 30),
            DFATransition(69, 6, 30),
            DFATransition(69, 7, 30),
            DFATransition(69, 8, 30),
            DFATransition(69, 9, 30),
            DFATransition(69, 10, 30),
            DFATransition(69, 17, 30),
            DFATransition(69, 23, 30),
            DFATransition(69, 24, 30),
            DFATransition(69, 25, 30),
            DFATransition(69, 26, 30),
            DFATransition(69, 29, 30),
            DFATransition(69, 36, 30),
            DFATransition(69, 79, 30),
            DFATransition(70, 5, 30),
            DFATransition(70, 6, 30),
            DFATransition(70, 7, 30),
            DFATransition(70, 8, 30),
            DFATransition(70, 9, 30),
            DFATransition(70, 10, 30),
            DFATransition(70, 17, 30),
            DFATransition(70, 23, 30),
            DFATransition(70, 24, 30),
            DFATransition(70, 25, 30),
            DFATransition(70, 26, 30),
            DFATransition(70, 29, 30),
            DFATransition(70, 36, 30),
            DFATransition(70, 79, 30),
        ],
        k: 3,
    },
    /* 167 - "IfStatementList0List" */
    LookaheadDFA {
        states: &[None, Some(328), Some(329)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 51, 1),
            DFATransition(0, 55, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 72, 1),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 168 - "IfStatementOpt" */
    LookaheadDFA {
        states: &[None, Some(333), Some(336)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 47, 1),
            DFATransition(0, 51, 2),
            DFATransition(0, 55, 2),
            DFATransition(0, 56, 2),
            DFATransition(0, 62, 2),
            DFATransition(0, 72, 2),
            DFATransition(0, 79, 2),
        ],
        k: 1,
    },
    /* 169 - "IfStatementOptList" */
    LookaheadDFA {
        states: &[None, Some(334), Some(335)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 51, 1),
            DFATransition(0, 55, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 72, 1),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 170 - "IfTerm" */
    LookaheadDFA {
        states: &[Some(51)],
        transitions: &[],
        k: 0,
    },
    /* 171 - "IfToken" */
    LookaheadDFA {
        states: &[Some(129)],
        transitions: &[],
        k: 0,
    },
    /* 172 - "In" */
    LookaheadDFA {
        states: &[Some(205)],
        transitions: &[],
        k: 0,
    },
    /* 173 - "InTerm" */
    LookaheadDFA {
        states: &[Some(56)],
        transitions: &[],
        k: 0,
    },
    /* 174 - "InToken" */
    LookaheadDFA {
        states: &[Some(134)],
        transitions: &[],
        k: 0,
    },
    /* 175 - "Inout" */
    LookaheadDFA {
        states: &[Some(206)],
        transitions: &[],
        k: 0,
    },
    /* 176 - "InoutTerm" */
    LookaheadDFA {
        states: &[Some(52)],
        transitions: &[],
        k: 0,
    },
    /* 177 - "InoutToken" */
    LookaheadDFA {
        states: &[Some(130)],
        transitions: &[],
        k: 0,
    },
    /* 178 - "Input" */
    LookaheadDFA {
        states: &[Some(207)],
        transitions: &[],
        k: 0,
    },
    /* 179 - "InputTerm" */
    LookaheadDFA {
        states: &[Some(53)],
        transitions: &[],
        k: 0,
    },
    /* 180 - "InputToken" */
    LookaheadDFA {
        states: &[Some(131)],
        transitions: &[],
        k: 0,
    },
    /* 181 - "Inst" */
    LookaheadDFA {
        states: &[Some(208)],
        transitions: &[],
        k: 0,
    },
    /* 182 - "InstDeclaration" */
    LookaheadDFA {
        states: &[Some(403)],
        transitions: &[],
        k: 0,
    },
    /* 183 - "InstDeclarationOpt" */
    LookaheadDFA {
        states: &[None, Some(410), Some(411)],
        transitions: &[
            DFATransition(0, 33, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 35, 1),
            DFATransition(0, 40, 2),
        ],
        k: 1,
    },
    /* 184 - "InstDeclarationOpt0" */
    LookaheadDFA {
        states: &[None, Some(408), Some(409)],
        transitions: &[
            DFATransition(0, 33, 1),
            DFATransition(0, 34, 2),
            DFATransition(0, 40, 2),
        ],
        k: 1,
    },
    /* 185 - "InstDeclarationOpt1" */
    LookaheadDFA {
        states: &[None, Some(404), Some(407)],
        transitions: &[DFATransition(0, 34, 1), DFATransition(0, 40, 2)],
        k: 1,
    },
    /* 186 - "InstDeclarationOpt2" */
    LookaheadDFA {
        states: &[None, Some(405), Some(406)],
        transitions: &[DFATransition(0, 37, 2), DFATransition(0, 79, 1)],
        k: 1,
    },
    /* 187 - "InstParameter" */
    LookaheadDFA {
        states: &[Some(412)],
        transitions: &[],
        k: 0,
    },
    /* 188 - "InstParameterItem" */
    LookaheadDFA {
        states: &[Some(420)],
        transitions: &[],
        k: 0,
    },
    /* 189 - "InstParameterItemOpt" */
    LookaheadDFA {
        states: &[None, Some(421), Some(422)],
        transitions: &[
            DFATransition(0, 27, 1),
            DFATransition(0, 28, 2),
            DFATransition(0, 39, 2),
        ],
        k: 1,
    },
    /* 190 - "InstParameterList" */
    LookaheadDFA {
        states: &[Some(415)],
        transitions: &[],
        k: 0,
    },
    /* 191 - "InstParameterListList" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(416),
            None,
            None,
            None,
            Some(417),
            None,
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 28, 1),
            DFATransition(0, 39, 5),
            DFATransition(1, 5, 2),
            DFATransition(1, 39, 6),
            DFATransition(1, 79, 4),
            DFATransition(2, 39, 7),
            DFATransition(2, 79, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 27, 3),
            DFATransition(4, 28, 3),
            DFATransition(4, 39, 3),
            DFATransition(5, 5, 8),
            DFATransition(5, 34, 9),
            DFATransition(5, 40, 10),
            DFATransition(6, 5, 7),
            DFATransition(6, 34, 7),
            DFATransition(6, 40, 7),
            DFATransition(8, 34, 7),
            DFATransition(8, 40, 7),
            DFATransition(9, 5, 7),
            DFATransition(9, 37, 7),
            DFATransition(9, 79, 7),
            DFATransition(10, 5, 7),
            DFATransition(10, 37, 7),
            DFATransition(10, 41, 7),
            DFATransition(10, 42, 7),
            DFATransition(10, 43, 7),
            DFATransition(10, 48, 7),
            DFATransition(10, 51, 7),
            DFATransition(10, 52, 7),
            DFATransition(10, 56, 7),
            DFATransition(10, 59, 7),
            DFATransition(10, 62, 7),
            DFATransition(10, 63, 7),
            DFATransition(10, 69, 7),
            DFATransition(10, 74, 7),
        ],
        k: 3,
    },
    /* 192 - "InstParameterListOpt" */
    LookaheadDFA {
        states: &[None, Some(418), Some(419)],
        transitions: &[DFATransition(0, 28, 1), DFATransition(0, 39, 2)],
        k: 1,
    },
    /* 193 - "InstParameterOpt" */
    LookaheadDFA {
        states: &[None, Some(413), Some(414)],
        transitions: &[DFATransition(0, 39, 2), DFATransition(0, 79, 1)],
        k: 1,
    },
    /* 194 - "InstPortItem" */
    LookaheadDFA {
        states: &[Some(428)],
        transitions: &[],
        k: 0,
    },
    /* 195 - "InstPortItemOpt" */
    LookaheadDFA {
        states: &[None, Some(429), Some(430)],
        transitions: &[
            DFATransition(0, 27, 1),
            DFATransition(0, 28, 2),
            DFATransition(0, 37, 2),
        ],
        k: 1,
    },
    /* 196 - "InstPortList" */
    LookaheadDFA {
        states: &[Some(423)],
        transitions: &[],
        k: 0,
    },
    /* 197 - "InstPortListList" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(424),
            None,
            None,
            None,
            Some(425),
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 28, 1),
            DFATransition(0, 37, 5),
            DFATransition(1, 5, 2),
            DFATransition(1, 37, 6),
            DFATransition(1, 79, 4),
            DFATransition(2, 37, 7),
            DFATransition(2, 79, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 27, 3),
            DFATransition(4, 28, 3),
            DFATransition(4, 37, 3),
            DFATransition(5, 5, 8),
            DFATransition(5, 40, 9),
            DFATransition(6, 5, 7),
            DFATransition(6, 40, 7),
            DFATransition(8, 40, 7),
            DFATransition(9, 5, 7),
            DFATransition(9, 37, 7),
            DFATransition(9, 41, 7),
            DFATransition(9, 42, 7),
            DFATransition(9, 43, 7),
            DFATransition(9, 48, 7),
            DFATransition(9, 51, 7),
            DFATransition(9, 52, 7),
            DFATransition(9, 56, 7),
            DFATransition(9, 59, 7),
            DFATransition(9, 62, 7),
            DFATransition(9, 63, 7),
            DFATransition(9, 69, 7),
            DFATransition(9, 74, 7),
        ],
        k: 3,
    },
    /* 198 - "InstPortListOpt" */
    LookaheadDFA {
        states: &[None, Some(426), Some(427)],
        transitions: &[DFATransition(0, 28, 1), DFATransition(0, 37, 2)],
        k: 1,
    },
    /* 199 - "InstTerm" */
    LookaheadDFA {
        states: &[Some(54)],
        transitions: &[],
        k: 0,
    },
    /* 200 - "InstToken" */
    LookaheadDFA {
        states: &[Some(132)],
        transitions: &[],
        k: 0,
    },
    /* 201 - "IntegralNumber" */
    LookaheadDFA {
        states: &[None, Some(230), Some(231), Some(232)],
        transitions: &[
            DFATransition(0, 8, 1),
            DFATransition(0, 9, 2),
            DFATransition(0, 10, 3),
        ],
        k: 1,
    },
    /* 202 - "Interface" */
    LookaheadDFA {
        states: &[Some(209)],
        transitions: &[],
        k: 0,
    },
    /* 203 - "InterfaceDeclaration" */
    LookaheadDFA {
        states: &[Some(503)],
        transitions: &[],
        k: 0,
    },
    /* 204 - "InterfaceDeclarationList" */
    LookaheadDFA {
        states: &[None, Some(504), Some(505)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 48, 1),
            DFATransition(0, 51, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 1),
            DFATransition(0, 65, 1),
            DFATransition(0, 69, 1),
            DFATransition(0, 74, 1),
        ],
        k: 1,
    },
    /* 205 - "InterfaceDeclarationOpt" */
    LookaheadDFA {
        states: &[None, Some(506), Some(507)],
        transitions: &[DFATransition(0, 33, 1), DFATransition(0, 34, 2)],
        k: 1,
    },
    /* 206 - "InterfaceForDeclaration" */
    LookaheadDFA {
        states: &[Some(523)],
        transitions: &[],
        k: 0,
    },
    /* 207 - "InterfaceForDeclarationList" */
    LookaheadDFA {
        states: &[None, Some(524), Some(525)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 48, 1),
            DFATransition(0, 51, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 1),
            DFATransition(0, 65, 1),
            DFATransition(0, 69, 1),
            DFATransition(0, 74, 1),
        ],
        k: 1,
    },
    /* 208 - "InterfaceForDeclarationOpt" */
    LookaheadDFA {
        states: &[None, Some(526), Some(527)],
        transitions: &[DFATransition(0, 27, 2), DFATransition(0, 73, 1)],
        k: 1,
    },
    /* 209 - "InterfaceIfDeclaration" */
    LookaheadDFA {
        states: &[Some(508)],
        transitions: &[],
        k: 0,
    },
    /* 210 - "InterfaceIfDeclarationList" */
    LookaheadDFA {
        states: &[None, Some(513), Some(514)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 48, 1),
            DFATransition(0, 51, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 1),
            DFATransition(0, 65, 1),
            DFATransition(0, 69, 1),
            DFATransition(0, 74, 1),
        ],
        k: 1,
    },
    /* 211 - "InterfaceIfDeclarationList0" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(509),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            Some(512),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 37, 5),
            DFATransition(0, 47, 1),
            DFATransition(0, 48, 6),
            DFATransition(0, 51, 7),
            DFATransition(0, 56, 8),
            DFATransition(0, 62, 9),
            DFATransition(0, 63, 10),
            DFATransition(0, 65, 11),
            DFATransition(0, 69, 12),
            DFATransition(0, 74, 13),
            DFATransition(1, 5, 2),
            DFATransition(1, 27, 28),
            DFATransition(1, 34, 29),
            DFATransition(1, 56, 4),
            DFATransition(2, 27, 14),
            DFATransition(2, 34, 14),
            DFATransition(2, 56, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 6, 3),
            DFATransition(4, 7, 3),
            DFATransition(4, 8, 3),
            DFATransition(4, 9, 3),
            DFATransition(4, 10, 3),
            DFATransition(4, 17, 3),
            DFATransition(4, 23, 3),
            DFATransition(4, 24, 3),
            DFATransition(4, 25, 3),
            DFATransition(4, 26, 3),
            DFATransition(4, 29, 3),
            DFATransition(4, 36, 3),
            DFATransition(4, 79, 3),
            DFATransition(5, 0, 14),
            DFATransition(5, 5, 15),
            DFATransition(5, 37, 16),
            DFATransition(5, 47, 17),
            DFATransition(5, 48, 18),
            DFATransition(5, 51, 19),
            DFATransition(5, 56, 20),
            DFATransition(5, 60, 21),
            DFATransition(5, 62, 22),
            DFATransition(5, 63, 23),
            DFATransition(5, 65, 24),
            DFATransition(5, 66, 25),
            DFATransition(5, 69, 26),
            DFATransition(5, 74, 27),
            DFATransition(6, 5, 30),
            DFATransition(6, 79, 31),
            DFATransition(7, 5, 32),
            DFATransition(7, 79, 33),
            DFATransition(8, 5, 34),
            DFATransition(8, 6, 35),
            DFATransition(8, 7, 36),
            DFATransition(8, 8, 37),
            DFATransition(8, 9, 38),
            DFATransition(8, 10, 39),
            DFATransition(8, 17, 40),
            DFATransition(8, 23, 41),
            DFATransition(8, 24, 42),
            DFATransition(8, 25, 43),
            DFATransition(8, 26, 44),
            DFATransition(8, 29, 45),
            DFATransition(8, 36, 46),
            DFATransition(8, 79, 47),
            DFATransition(9, 5, 48),
            DFATransition(9, 79, 49),
            DFATransition(10, 5, 50),
            DFATransition(10, 79, 51),
            DFATransition(11, 5, 52),
            DFATransition(11, 79, 53),
            DFATransition(12, 5, 54),
            DFATransition(12, 79, 55),
            DFATransition(13, 5, 56),
            DFATransition(13, 79, 57),
            DFATransition(15, 0, 14),
            DFATransition(15, 37, 14),
            DFATransition(15, 47, 14),
            DFATransition(15, 48, 14),
            DFATransition(15, 51, 14),
            DFATransition(15, 56, 14),
            DFATransition(15, 60, 14),
            DFATransition(15, 62, 14),
            DFATransition(15, 63, 14),
            DFATransition(15, 65, 14),
            DFATransition(15, 66, 14),
            DFATransition(15, 69, 14),
            DFATransition(15, 74, 14),
            DFATransition(16, 0, 14),
            DFATransition(16, 5, 14),
            DFATransition(16, 37, 14),
            DFATransition(16, 47, 14),
            DFATransition(16, 48, 14),
            DFATransition(16, 51, 14),
            DFATransition(16, 56, 14),
            DFATransition(16, 60, 14),
            DFATransition(16, 62, 14),
            DFATransition(16, 63, 14),
            DFATransition(16, 65, 14),
            DFATransition(16, 66, 14),
            DFATransition(16, 69, 14),
            DFATransition(16, 74, 14),
            DFATransition(17, 5, 14),
            DFATransition(17, 27, 14),
            DFATransition(17, 34, 14),
            DFATransition(17, 56, 14),
            DFATransition(18, 5, 14),
            DFATransition(18, 79, 14),
            DFATransition(19, 5, 14),
            DFATransition(19, 79, 14),
            DFATransition(20, 5, 14),
            DFATransition(20, 6, 14),
            DFATransition(20, 7, 14),
            DFATransition(20, 8, 14),
            DFATransition(20, 9, 14),
            DFATransition(20, 10, 14),
            DFATransition(20, 17, 14),
            DFATransition(20, 23, 14),
            DFATransition(20, 24, 14),
            DFATransition(20, 25, 14),
            DFATransition(20, 26, 14),
            DFATransition(20, 29, 14),
            DFATransition(20, 36, 14),
            DFATransition(20, 79, 14),
            DFATransition(21, 5, 14),
            DFATransition(21, 79, 14),
            DFATransition(22, 5, 14),
            DFATransition(22, 79, 14),
            DFATransition(23, 5, 14),
            DFATransition(23, 79, 14),
            DFATransition(24, 5, 14),
            DFATransition(24, 79, 14),
            DFATransition(25, 5, 14),
            DFATransition(25, 79, 14),
            DFATransition(26, 5, 14),
            DFATransition(26, 79, 14),
            DFATransition(27, 5, 14),
            DFATransition(27, 79, 14),
            DFATransition(28, 5, 14),
            DFATransition(28, 79, 14),
            DFATransition(29, 5, 14),
            DFATransition(29, 37, 14),
            DFATransition(29, 48, 14),
            DFATransition(29, 51, 14),
            DFATransition(29, 56, 14),
            DFATransition(29, 62, 14),
            DFATransition(29, 63, 14),
            DFATransition(29, 65, 14),
            DFATransition(29, 69, 14),
            DFATransition(29, 74, 14),
            DFATransition(30, 79, 14),
            DFATransition(31, 5, 14),
            DFATransition(31, 27, 14),
            DFATransition(32, 79, 14),
            DFATransition(33, 5, 14),
            DFATransition(33, 61, 14),
            DFATransition(34, 6, 14),
            DFATransition(34, 7, 14),
            DFATransition(34, 8, 14),
            DFATransition(34, 9, 14),
            DFATransition(34, 10, 14),
            DFATransition(34, 17, 14),
            DFATransition(34, 23, 14),
            DFATransition(34, 24, 14),
            DFATransition(34, 25, 14),
            DFATransition(34, 26, 14),
            DFATransition(34, 29, 14),
            DFATransition(34, 36, 14),
            DFATransition(34, 79, 14),
            DFATransition(35, 5, 14),
            DFATransition(35, 15, 14),
            DFATransition(35, 16, 14),
            DFATransition(35, 17, 14),
            DFATransition(35, 18, 14),
            DFATransition(35, 19, 14),
            DFATransition(35, 20, 14),
            DFATransition(35, 21, 14),
            DFATransition(35, 22, 14),
            DFATransition(35, 23, 14),
            DFATransition(35, 24, 14),
            DFATransition(35, 25, 14),
            DFATransition(35, 27, 14),
            DFATransition(36, 5, 14),
            DFATransition(36, 15, 14),
            DFATransition(36, 16, 14),
            DFATransition(36, 17, 14),
            DFATransition(36, 18, 14),
            DFATransition(36, 19, 14),
            DFATransition(36, 20, 14),
            DFATransition(36, 21, 14),
            DFATransition(36, 22, 14),
            DFATransition(36, 23, 14),
            DFATransition(36, 24, 14),
            DFATransition(36, 25, 14),
            DFATransition(36, 27, 14),
            DFATransition(37, 5, 14),
            DFATransition(37, 15, 14),
            DFATransition(37, 16, 14),
            DFATransition(37, 17, 14),
            DFATransition(37, 18, 14),
            DFATransition(37, 19, 14),
            DFATransition(37, 20, 14),
            DFATransition(37, 21, 14),
            DFATransition(37, 22, 14),
            DFATransition(37, 23, 14),
            DFATransition(37, 24, 14),
            DFATransition(37, 25, 14),
            DFATransition(37, 27, 14),
            DFATransition(38, 5, 14),
            DFATransition(38, 15, 14),
            DFATransition(38, 16, 14),
            DFATransition(38, 17, 14),
            DFATransition(38, 18, 14),
            DFATransition(38, 19, 14),
            DFATransition(38, 20, 14),
            DFATransition(38, 21, 14),
            DFATransition(38, 22, 14),
            DFATransition(38, 23, 14),
            DFATransition(38, 24, 14),
            DFATransition(38, 25, 14),
            DFATransition(38, 27, 14),
            DFATransition(39, 5, 14),
            DFATransition(39, 15, 14),
            DFATransition(39, 16, 14),
            DFATransition(39, 17, 14),
            DFATransition(39, 18, 14),
            DFATransition(39, 19, 14),
            DFATransition(39, 20, 14),
            DFATransition(39, 21, 14),
            DFATransition(39, 22, 14),
            DFATransition(39, 23, 14),
            DFATransition(39, 24, 14),
            DFATransition(39, 25, 14),
            DFATransition(39, 27, 14),
            DFATransition(40, 5, 14),
            DFATransition(40, 6, 14),
            DFATransition(40, 7, 14),
            DFATransition(40, 8, 14),
            DFATransition(40, 9, 14),
            DFATransition(40, 10, 14),
            DFATransition(40, 29, 14),
            DFATransition(40, 36, 14),
            DFATransition(40, 79, 14),
            DFATransition(41, 5, 14),
            DFATransition(41, 6, 14),
            DFATransition(41, 7, 14),
            DFATransition(41, 8, 14),
            DFATransition(41, 9, 14),
            DFATransition(41, 10, 14),
            DFATransition(41, 29, 14),
            DFATransition(41, 36, 14),
            DFATransition(41, 79, 14),
            DFATransition(42, 5, 14),
            DFATransition(42, 6, 14),
            DFATransition(42, 7, 14),
            DFATransition(42, 8, 14),
            DFATransition(42, 9, 14),
            DFATransition(42, 10, 14),
            DFATransition(42, 29, 14),
            DFATransition(42, 36, 14),
            DFATransition(42, 79, 14),
            DFATransition(43, 5, 14),
            DFATransition(43, 6, 14),
            DFATransition(43, 7, 14),
            DFATransition(43, 8, 14),
            DFATransition(43, 9, 14),
            DFATransition(43, 10, 14),
            DFATransition(43, 29, 14),
            DFATransition(43, 36, 14),
            DFATransition(43, 79, 14),
            DFATransition(44, 5, 14),
            DFATransition(44, 6, 14),
            DFATransition(44, 7, 14),
            DFATransition(44, 8, 14),
            DFATransition(44, 9, 14),
            DFATransition(44, 10, 14),
            DFATransition(44, 29, 14),
            DFATransition(44, 36, 14),
            DFATransition(44, 79, 14),
            DFATransition(45, 5, 14),
            DFATransition(45, 79, 14),
            DFATransition(46, 5, 14),
            DFATransition(46, 6, 14),
            DFATransition(46, 7, 14),
            DFATransition(46, 8, 14),
            DFATransition(46, 9, 14),
            DFATransition(46, 10, 14),
            DFATransition(46, 17, 14),
            DFATransition(46, 23, 14),
            DFATransition(46, 24, 14),
            DFATransition(46, 25, 14),
            DFATransition(46, 26, 14),
            DFATransition(46, 29, 14),
            DFATransition(46, 36, 14),
            DFATransition(46, 79, 14),
            DFATransition(47, 5, 14),
            DFATransition(47, 15, 14),
            DFATransition(47, 16, 14),
            DFATransition(47, 17, 14),
            DFATransition(47, 18, 14),
            DFATransition(47, 19, 14),
            DFATransition(47, 20, 14),
            DFATransition(47, 21, 14),
            DFATransition(47, 22, 14),
            DFATransition(47, 23, 14),
            DFATransition(47, 24, 14),
            DFATransition(47, 25, 14),
            DFATransition(47, 27, 14),
            DFATransition(47, 31, 14),
            DFATransition(47, 35, 14),
            DFATransition(47, 36, 14),
            DFATransition(48, 79, 14),
            DFATransition(49, 5, 14),
            DFATransition(49, 27, 14),
            DFATransition(50, 79, 14),
            DFATransition(51, 5, 14),
            DFATransition(51, 27, 14),
            DFATransition(52, 79, 14),
            DFATransition(53, 5, 14),
            DFATransition(53, 34, 14),
            DFATransition(54, 79, 14),
            DFATransition(55, 5, 14),
            DFATransition(55, 27, 14),
            DFATransition(56, 79, 14),
            DFATransition(57, 5, 14),
            DFATransition(57, 34, 14),
        ],
        k: 3,
    },
    /* 212 - "InterfaceIfDeclarationList0List" */
    LookaheadDFA {
        states: &[None, Some(510), Some(511)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 48, 1),
            DFATransition(0, 51, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 1),
            DFATransition(0, 65, 1),
            DFATransition(0, 69, 1),
            DFATransition(0, 74, 1),
        ],
        k: 1,
    },
    /* 213 - "InterfaceIfDeclarationOpt" */
    LookaheadDFA {
        states: &[None, Some(521), Some(522)],
        transitions: &[DFATransition(0, 27, 1), DFATransition(0, 34, 2)],
        k: 1,
    },
    /* 214 - "InterfaceIfDeclarationOpt0" */
    LookaheadDFA {
        states: &[None, Some(515), Some(520)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 47, 1),
            DFATransition(0, 48, 2),
            DFATransition(0, 51, 2),
            DFATransition(0, 56, 2),
            DFATransition(0, 62, 2),
            DFATransition(0, 63, 2),
            DFATransition(0, 65, 2),
            DFATransition(0, 69, 2),
            DFATransition(0, 74, 2),
        ],
        k: 1,
    },
    /* 215 - "InterfaceIfDeclarationOpt0List" */
    LookaheadDFA {
        states: &[None, Some(516), Some(517)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 48, 1),
            DFATransition(0, 51, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 1),
            DFATransition(0, 65, 1),
            DFATransition(0, 69, 1),
            DFATransition(0, 74, 1),
        ],
        k: 1,
    },
    /* 216 - "InterfaceIfDeclarationOpt1" */
    LookaheadDFA {
        states: &[None, Some(518), Some(519)],
        transitions: &[DFATransition(0, 27, 1), DFATransition(0, 34, 2)],
        k: 1,
    },
    /* 217 - "InterfaceItem" */
    LookaheadDFA {
        states: &[
            None,
            Some(528),
            Some(529),
            Some(530),
            Some(531),
            Some(532),
            Some(533),
            Some(534),
            Some(535),
        ],
        transitions: &[
            DFATransition(0, 48, 7),
            DFATransition(0, 51, 6),
            DFATransition(0, 56, 5),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 3),
            DFATransition(0, 65, 4),
            DFATransition(0, 69, 2),
            DFATransition(0, 74, 8),
        ],
        k: 1,
    },
    /* 218 - "InterfaceTerm" */
    LookaheadDFA {
        states: &[Some(55)],
        transitions: &[],
        k: 0,
    },
    /* 219 - "InterfaceToken" */
    LookaheadDFA {
        states: &[Some(133)],
        transitions: &[],
        k: 0,
    },
    /* 220 - "LBrace" */
    LookaheadDFA {
        states: &[Some(179)],
        transitions: &[],
        k: 0,
    },
    /* 221 - "LBraceTerm" */
    LookaheadDFA {
        states: &[Some(29)],
        transitions: &[],
        k: 0,
    },
    /* 222 - "LBraceToken" */
    LookaheadDFA {
        states: &[Some(104)],
        transitions: &[],
        k: 0,
    },
    /* 223 - "LBracket" */
    LookaheadDFA {
        states: &[Some(180)],
        transitions: &[],
        k: 0,
    },
    /* 224 - "LBracketTerm" */
    LookaheadDFA {
        states: &[Some(30)],
        transitions: &[],
        k: 0,
    },
    /* 225 - "LBracketToken" */
    LookaheadDFA {
        states: &[Some(105)],
        transitions: &[],
        k: 0,
    },
    /* 226 - "LParen" */
    LookaheadDFA {
        states: &[Some(181)],
        transitions: &[],
        k: 0,
    },
    /* 227 - "LParenTerm" */
    LookaheadDFA {
        states: &[Some(31)],
        transitions: &[],
        k: 0,
    },
    /* 228 - "LParenToken" */
    LookaheadDFA {
        states: &[Some(106)],
        transitions: &[],
        k: 0,
    },
    /* 229 - "Let" */
    LookaheadDFA {
        states: &[Some(210)],
        transitions: &[],
        k: 0,
    },
    /* 230 - "LetDeclaration" */
    LookaheadDFA {
        states: &[Some(354)],
        transitions: &[],
        k: 0,
    },
    /* 231 - "LetDeclarationOpt" */
    LookaheadDFA {
        states: &[None, Some(355), Some(356)],
        transitions: &[DFATransition(0, 32, 1), DFATransition(0, 40, 2)],
        k: 1,
    },
    /* 232 - "LetTerm" */
    LookaheadDFA {
        states: &[Some(57)],
        transitions: &[],
        k: 0,
    },
    /* 233 - "LetToken" */
    LookaheadDFA {
        states: &[Some(135)],
        transitions: &[],
        k: 0,
    },
    /* 234 - "Localparam" */
    LookaheadDFA {
        states: &[Some(211)],
        transitions: &[],
        k: 0,
    },
    /* 235 - "LocalparamDeclaration" */
    LookaheadDFA {
        states: &[Some(358)],
        transitions: &[],
        k: 0,
    },
    /* 236 - "LocalparamTerm" */
    LookaheadDFA {
        states: &[Some(58)],
        transitions: &[],
        k: 0,
    },
    /* 237 - "LocalparamToken" */
    LookaheadDFA {
        states: &[Some(136)],
        transitions: &[],
        k: 0,
    },
    /* 238 - "Logic" */
    LookaheadDFA {
        states: &[Some(212)],
        transitions: &[],
        k: 0,
    },
    /* 239 - "LogicTerm" */
    LookaheadDFA {
        states: &[Some(59)],
        transitions: &[],
        k: 0,
    },
    /* 240 - "LogicToken" */
    LookaheadDFA {
        states: &[Some(137)],
        transitions: &[],
        k: 0,
    },
    /* 241 - "MinusColon" */
    LookaheadDFA {
        states: &[Some(182)],
        transitions: &[],
        k: 0,
    },
    /* 242 - "MinusColonTerm" */
    LookaheadDFA {
        states: &[Some(6)],
        transitions: &[],
        k: 0,
    },
    /* 243 - "MinusColonToken" */
    LookaheadDFA {
        states: &[Some(107)],
        transitions: &[],
        k: 0,
    },
    /* 244 - "MinusGT" */
    LookaheadDFA {
        states: &[Some(183)],
        transitions: &[],
        k: 0,
    },
    /* 245 - "MinusGTTerm" */
    LookaheadDFA {
        states: &[Some(7)],
        transitions: &[],
        k: 0,
    },
    /* 246 - "MinusGTToken" */
    LookaheadDFA {
        states: &[Some(108)],
        transitions: &[],
        k: 0,
    },
    /* 247 - "Modport" */
    LookaheadDFA {
        states: &[Some(213)],
        transitions: &[],
        k: 0,
    },
    /* 248 - "ModportDeclaration" */
    LookaheadDFA {
        states: &[Some(380)],
        transitions: &[],
        k: 0,
    },
    /* 249 - "ModportItem" */
    LookaheadDFA {
        states: &[Some(386)],
        transitions: &[],
        k: 0,
    },
    /* 250 - "ModportList" */
    LookaheadDFA {
        states: &[Some(381)],
        transitions: &[],
        k: 0,
    },
    /* 251 - "ModportListList" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(382),
            None,
            None,
            None,
            Some(383),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 28, 1),
            DFATransition(0, 37, 5),
            DFATransition(1, 5, 2),
            DFATransition(1, 37, 6),
            DFATransition(1, 79, 4),
            DFATransition(2, 37, 7),
            DFATransition(2, 79, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 27, 3),
            DFATransition(5, 5, 8),
            DFATransition(5, 37, 9),
            DFATransition(5, 48, 10),
            DFATransition(5, 51, 11),
            DFATransition(5, 56, 12),
            DFATransition(5, 62, 13),
            DFATransition(5, 63, 14),
            DFATransition(5, 65, 15),
            DFATransition(5, 69, 16),
            DFATransition(5, 74, 17),
            DFATransition(6, 5, 7),
            DFATransition(6, 37, 7),
            DFATransition(6, 48, 7),
            DFATransition(6, 51, 7),
            DFATransition(6, 56, 7),
            DFATransition(6, 62, 7),
            DFATransition(6, 63, 7),
            DFATransition(6, 65, 7),
            DFATransition(6, 69, 7),
            DFATransition(6, 74, 7),
            DFATransition(8, 37, 7),
            DFATransition(8, 48, 7),
            DFATransition(8, 51, 7),
            DFATransition(8, 56, 7),
            DFATransition(8, 62, 7),
            DFATransition(8, 63, 7),
            DFATransition(8, 65, 7),
            DFATransition(8, 69, 7),
            DFATransition(8, 74, 7),
            DFATransition(9, 0, 7),
            DFATransition(9, 5, 7),
            DFATransition(9, 37, 7),
            DFATransition(9, 47, 7),
            DFATransition(9, 48, 7),
            DFATransition(9, 51, 7),
            DFATransition(9, 56, 7),
            DFATransition(9, 60, 7),
            DFATransition(9, 62, 7),
            DFATransition(9, 63, 7),
            DFATransition(9, 65, 7),
            DFATransition(9, 66, 7),
            DFATransition(9, 69, 7),
            DFATransition(9, 74, 7),
            DFATransition(10, 5, 7),
            DFATransition(10, 79, 7),
            DFATransition(11, 5, 7),
            DFATransition(11, 79, 7),
            DFATransition(12, 5, 7),
            DFATransition(12, 6, 7),
            DFATransition(12, 7, 7),
            DFATransition(12, 8, 7),
            DFATransition(12, 9, 7),
            DFATransition(12, 10, 7),
            DFATransition(12, 17, 7),
            DFATransition(12, 23, 7),
            DFATransition(12, 24, 7),
            DFATransition(12, 25, 7),
            DFATransition(12, 26, 7),
            DFATransition(12, 29, 7),
            DFATransition(12, 36, 7),
            DFATransition(12, 79, 7),
            DFATransition(13, 5, 7),
            DFATransition(13, 79, 7),
            DFATransition(14, 5, 7),
            DFATransition(14, 79, 7),
            DFATransition(15, 5, 7),
            DFATransition(15, 79, 7),
            DFATransition(16, 5, 7),
            DFATransition(16, 79, 7),
            DFATransition(17, 5, 7),
            DFATransition(17, 79, 7),
        ],
        k: 3,
    },
    /* 252 - "ModportListOpt" */
    LookaheadDFA {
        states: &[None, Some(384), Some(385)],
        transitions: &[DFATransition(0, 28, 1), DFATransition(0, 37, 2)],
        k: 1,
    },
    /* 253 - "ModportTerm" */
    LookaheadDFA {
        states: &[Some(60)],
        transitions: &[],
        k: 0,
    },
    /* 254 - "ModportToken" */
    LookaheadDFA {
        states: &[Some(138)],
        transitions: &[],
        k: 0,
    },
    /* 255 - "Module" */
    LookaheadDFA {
        states: &[Some(214)],
        transitions: &[],
        k: 0,
    },
    /* 256 - "ModuleDeclaration" */
    LookaheadDFA {
        states: &[Some(464)],
        transitions: &[],
        k: 0,
    },
    /* 257 - "ModuleDeclarationList" */
    LookaheadDFA {
        states: &[None, Some(465), Some(466)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 41, 1),
            DFATransition(0, 42, 1),
            DFATransition(0, 43, 1),
            DFATransition(0, 48, 1),
            DFATransition(0, 51, 1),
            DFATransition(0, 52, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 59, 1),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 1),
            DFATransition(0, 69, 1),
            DFATransition(0, 74, 1),
        ],
        k: 1,
    },
    /* 258 - "ModuleDeclarationOpt" */
    LookaheadDFA {
        states: &[None, Some(469), Some(470)],
        transitions: &[
            DFATransition(0, 33, 1),
            DFATransition(0, 34, 2),
            DFATransition(0, 36, 2),
        ],
        k: 1,
    },
    /* 259 - "ModuleDeclarationOpt0" */
    LookaheadDFA {
        states: &[None, Some(467), Some(468)],
        transitions: &[DFATransition(0, 34, 2), DFATransition(0, 36, 1)],
        k: 1,
    },
    /* 260 - "ModuleForDeclaration" */
    LookaheadDFA {
        states: &[Some(486)],
        transitions: &[],
        k: 0,
    },
    /* 261 - "ModuleForDeclarationList" */
    LookaheadDFA {
        states: &[None, Some(487), Some(488)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 41, 1),
            DFATransition(0, 42, 1),
            DFATransition(0, 43, 1),
            DFATransition(0, 48, 1),
            DFATransition(0, 51, 1),
            DFATransition(0, 52, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 59, 1),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 1),
            DFATransition(0, 69, 1),
            DFATransition(0, 74, 1),
        ],
        k: 1,
    },
    /* 262 - "ModuleForDeclarationOpt" */
    LookaheadDFA {
        states: &[None, Some(489), Some(490)],
        transitions: &[DFATransition(0, 27, 2), DFATransition(0, 73, 1)],
        k: 1,
    },
    /* 263 - "ModuleIfDeclaration" */
    LookaheadDFA {
        states: &[Some(471)],
        transitions: &[],
        k: 0,
    },
    /* 264 - "ModuleIfDeclarationList" */
    LookaheadDFA {
        states: &[None, Some(476), Some(477)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 41, 1),
            DFATransition(0, 42, 1),
            DFATransition(0, 43, 1),
            DFATransition(0, 48, 1),
            DFATransition(0, 51, 1),
            DFATransition(0, 52, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 59, 1),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 1),
            DFATransition(0, 69, 1),
            DFATransition(0, 74, 1),
        ],
        k: 1,
    },
    /* 265 - "ModuleIfDeclarationList0" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(472),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            Some(475),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 37, 5),
            DFATransition(0, 41, 6),
            DFATransition(0, 42, 7),
            DFATransition(0, 43, 8),
            DFATransition(0, 47, 1),
            DFATransition(0, 48, 9),
            DFATransition(0, 51, 10),
            DFATransition(0, 52, 11),
            DFATransition(0, 56, 12),
            DFATransition(0, 59, 13),
            DFATransition(0, 62, 14),
            DFATransition(0, 63, 15),
            DFATransition(0, 69, 16),
            DFATransition(0, 74, 17),
            DFATransition(1, 5, 2),
            DFATransition(1, 27, 42),
            DFATransition(1, 34, 43),
            DFATransition(1, 56, 4),
            DFATransition(2, 27, 18),
            DFATransition(2, 34, 18),
            DFATransition(2, 56, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 6, 3),
            DFATransition(4, 7, 3),
            DFATransition(4, 8, 3),
            DFATransition(4, 9, 3),
            DFATransition(4, 10, 3),
            DFATransition(4, 17, 3),
            DFATransition(4, 23, 3),
            DFATransition(4, 24, 3),
            DFATransition(4, 25, 3),
            DFATransition(4, 26, 3),
            DFATransition(4, 29, 3),
            DFATransition(4, 36, 3),
            DFATransition(4, 79, 3),
            DFATransition(5, 0, 18),
            DFATransition(5, 5, 19),
            DFATransition(5, 37, 20),
            DFATransition(5, 41, 21),
            DFATransition(5, 42, 22),
            DFATransition(5, 43, 23),
            DFATransition(5, 47, 24),
            DFATransition(5, 48, 25),
            DFATransition(5, 51, 26),
            DFATransition(5, 52, 27),
            DFATransition(5, 56, 28),
            DFATransition(5, 59, 29),
            DFATransition(5, 60, 30),
            DFATransition(5, 62, 31),
            DFATransition(5, 63, 32),
            DFATransition(5, 66, 33),
            DFATransition(5, 69, 34),
            DFATransition(5, 74, 35),
            DFATransition(6, 5, 36),
            DFATransition(6, 34, 37),
            DFATransition(7, 5, 38),
            DFATransition(7, 36, 39),
            DFATransition(8, 5, 40),
            DFATransition(8, 79, 41),
            DFATransition(9, 5, 44),
            DFATransition(9, 79, 45),
            DFATransition(10, 5, 46),
            DFATransition(10, 79, 47),
            DFATransition(11, 5, 48),
            DFATransition(11, 79, 49),
            DFATransition(12, 5, 50),
            DFATransition(12, 6, 51),
            DFATransition(12, 7, 52),
            DFATransition(12, 8, 53),
            DFATransition(12, 9, 54),
            DFATransition(12, 10, 55),
            DFATransition(12, 17, 56),
            DFATransition(12, 23, 57),
            DFATransition(12, 24, 58),
            DFATransition(12, 25, 59),
            DFATransition(12, 26, 60),
            DFATransition(12, 29, 61),
            DFATransition(12, 36, 62),
            DFATransition(12, 79, 63),
            DFATransition(13, 5, 64),
            DFATransition(13, 79, 65),
            DFATransition(14, 5, 66),
            DFATransition(14, 79, 67),
            DFATransition(15, 5, 68),
            DFATransition(15, 79, 69),
            DFATransition(16, 5, 70),
            DFATransition(16, 79, 71),
            DFATransition(17, 5, 72),
            DFATransition(17, 79, 73),
            DFATransition(19, 0, 18),
            DFATransition(19, 37, 18),
            DFATransition(19, 41, 18),
            DFATransition(19, 42, 18),
            DFATransition(19, 43, 18),
            DFATransition(19, 47, 18),
            DFATransition(19, 48, 18),
            DFATransition(19, 51, 18),
            DFATransition(19, 52, 18),
            DFATransition(19, 56, 18),
            DFATransition(19, 59, 18),
            DFATransition(19, 60, 18),
            DFATransition(19, 62, 18),
            DFATransition(19, 63, 18),
            DFATransition(19, 66, 18),
            DFATransition(19, 69, 18),
            DFATransition(19, 74, 18),
            DFATransition(20, 0, 18),
            DFATransition(20, 5, 18),
            DFATransition(20, 37, 18),
            DFATransition(20, 41, 18),
            DFATransition(20, 42, 18),
            DFATransition(20, 43, 18),
            DFATransition(20, 47, 18),
            DFATransition(20, 48, 18),
            DFATransition(20, 51, 18),
            DFATransition(20, 52, 18),
            DFATransition(20, 56, 18),
            DFATransition(20, 59, 18),
            DFATransition(20, 60, 18),
            DFATransition(20, 62, 18),
            DFATransition(20, 63, 18),
            DFATransition(20, 66, 18),
            DFATransition(20, 69, 18),
            DFATransition(20, 74, 18),
            DFATransition(21, 5, 18),
            DFATransition(21, 34, 18),
            DFATransition(22, 5, 18),
            DFATransition(22, 36, 18),
            DFATransition(23, 5, 18),
            DFATransition(23, 79, 18),
            DFATransition(24, 5, 18),
            DFATransition(24, 27, 18),
            DFATransition(24, 34, 18),
            DFATransition(24, 56, 18),
            DFATransition(25, 5, 18),
            DFATransition(25, 79, 18),
            DFATransition(26, 5, 18),
            DFATransition(26, 79, 18),
            DFATransition(27, 5, 18),
            DFATransition(27, 79, 18),
            DFATransition(28, 5, 18),
            DFATransition(28, 6, 18),
            DFATransition(28, 7, 18),
            DFATransition(28, 8, 18),
            DFATransition(28, 9, 18),
            DFATransition(28, 10, 18),
            DFATransition(28, 17, 18),
            DFATransition(28, 23, 18),
            DFATransition(28, 24, 18),
            DFATransition(28, 25, 18),
            DFATransition(28, 26, 18),
            DFATransition(28, 29, 18),
            DFATransition(28, 36, 18),
            DFATransition(28, 79, 18),
            DFATransition(29, 5, 18),
            DFATransition(29, 79, 18),
            DFATransition(30, 5, 18),
            DFATransition(30, 79, 18),
            DFATransition(31, 5, 18),
            DFATransition(31, 79, 18),
            DFATransition(32, 5, 18),
            DFATransition(32, 79, 18),
            DFATransition(33, 5, 18),
            DFATransition(33, 79, 18),
            DFATransition(34, 5, 18),
            DFATransition(34, 79, 18),
            DFATransition(35, 5, 18),
            DFATransition(35, 79, 18),
            DFATransition(36, 34, 18),
            DFATransition(37, 5, 18),
            DFATransition(37, 37, 18),
            DFATransition(37, 51, 18),
            DFATransition(37, 55, 18),
            DFATransition(37, 56, 18),
            DFATransition(37, 72, 18),
            DFATransition(37, 79, 18),
            DFATransition(38, 36, 18),
            DFATransition(39, 5, 18),
            DFATransition(39, 67, 18),
            DFATransition(39, 70, 18),
            DFATransition(39, 79, 18),
            DFATransition(40, 79, 18),
            DFATransition(41, 5, 18),
            DFATransition(41, 31, 18),
            DFATransition(41, 32, 18),
            DFATransition(41, 35, 18),
            DFATransition(42, 5, 18),
            DFATransition(42, 79, 18),
            DFATransition(43, 5, 18),
            DFATransition(43, 37, 18),
            DFATransition(43, 41, 18),
            DFATransition(43, 42, 18),
            DFATransition(43, 43, 18),
            DFATransition(43, 48, 18),
            DFATransition(43, 51, 18),
            DFATransition(43, 52, 18),
            DFATransition(43, 56, 18),
            DFATransition(43, 59, 18),
            DFATransition(43, 62, 18),
            DFATransition(43, 63, 18),
            DFATransition(43, 69, 18),
            DFATransition(43, 74, 18),
            DFATransition(44, 79, 18),
            DFATransition(45, 5, 18),
            DFATransition(45, 27, 18),
            DFATransition(46, 79, 18),
            DFATransition(47, 5, 18),
            DFATransition(47, 61, 18),
            DFATransition(48, 79, 18),
            DFATransition(49, 5, 18),
            DFATransition(49, 12, 18),
            DFATransition(49, 33, 18),
            DFATransition(49, 36, 18),
            DFATransition(50, 6, 18),
            DFATransition(50, 7, 18),
            DFATransition(50, 8, 18),
            DFATransition(50, 9, 18),
            DFATransition(50, 10, 18),
            DFATransition(50, 17, 18),
            DFATransition(50, 23, 18),
            DFATransition(50, 24, 18),
            DFATransition(50, 25, 18),
            DFATransition(50, 26, 18),
            DFATransition(50, 29, 18),
            DFATransition(50, 36, 18),
            DFATransition(50, 79, 18),
            DFATransition(51, 5, 18),
            DFATransition(51, 15, 18),
            DFATransition(51, 16, 18),
            DFATransition(51, 17, 18),
            DFATransition(51, 18, 18),
            DFATransition(51, 19, 18),
            DFATransition(51, 20, 18),
            DFATransition(51, 21, 18),
            DFATransition(51, 22, 18),
            DFATransition(51, 23, 18),
            DFATransition(51, 24, 18),
            DFATransition(51, 25, 18),
            DFATransition(51, 27, 18),
            DFATransition(52, 5, 18),
            DFATransition(52, 15, 18),
            DFATransition(52, 16, 18),
            DFATransition(52, 17, 18),
            DFATransition(52, 18, 18),
            DFATransition(52, 19, 18),
            DFATransition(52, 20, 18),
            DFATransition(52, 21, 18),
            DFATransition(52, 22, 18),
            DFATransition(52, 23, 18),
            DFATransition(52, 24, 18),
            DFATransition(52, 25, 18),
            DFATransition(52, 27, 18),
            DFATransition(53, 5, 18),
            DFATransition(53, 15, 18),
            DFATransition(53, 16, 18),
            DFATransition(53, 17, 18),
            DFATransition(53, 18, 18),
            DFATransition(53, 19, 18),
            DFATransition(53, 20, 18),
            DFATransition(53, 21, 18),
            DFATransition(53, 22, 18),
            DFATransition(53, 23, 18),
            DFATransition(53, 24, 18),
            DFATransition(53, 25, 18),
            DFATransition(53, 27, 18),
            DFATransition(54, 5, 18),
            DFATransition(54, 15, 18),
            DFATransition(54, 16, 18),
            DFATransition(54, 17, 18),
            DFATransition(54, 18, 18),
            DFATransition(54, 19, 18),
            DFATransition(54, 20, 18),
            DFATransition(54, 21, 18),
            DFATransition(54, 22, 18),
            DFATransition(54, 23, 18),
            DFATransition(54, 24, 18),
            DFATransition(54, 25, 18),
            DFATransition(54, 27, 18),
            DFATransition(55, 5, 18),
            DFATransition(55, 15, 18),
            DFATransition(55, 16, 18),
            DFATransition(55, 17, 18),
            DFATransition(55, 18, 18),
            DFATransition(55, 19, 18),
            DFATransition(55, 20, 18),
            DFATransition(55, 21, 18),
            DFATransition(55, 22, 18),
            DFATransition(55, 23, 18),
            DFATransition(55, 24, 18),
            DFATransition(55, 25, 18),
            DFATransition(55, 27, 18),
            DFATransition(56, 5, 18),
            DFATransition(56, 6, 18),
            DFATransition(56, 7, 18),
            DFATransition(56, 8, 18),
            DFATransition(56, 9, 18),
            DFATransition(56, 10, 18),
            DFATransition(56, 29, 18),
            DFATransition(56, 36, 18),
            DFATransition(56, 79, 18),
            DFATransition(57, 5, 18),
            DFATransition(57, 6, 18),
            DFATransition(57, 7, 18),
            DFATransition(57, 8, 18),
            DFATransition(57, 9, 18),
            DFATransition(57, 10, 18),
            DFATransition(57, 29, 18),
            DFATransition(57, 36, 18),
            DFATransition(57, 79, 18),
            DFATransition(58, 5, 18),
            DFATransition(58, 6, 18),
            DFATransition(58, 7, 18),
            DFATransition(58, 8, 18),
            DFATransition(58, 9, 18),
            DFATransition(58, 10, 18),
            DFATransition(58, 29, 18),
            DFATransition(58, 36, 18),
            DFATransition(58, 79, 18),
            DFATransition(59, 5, 18),
            DFATransition(59, 6, 18),
            DFATransition(59, 7, 18),
            DFATransition(59, 8, 18),
            DFATransition(59, 9, 18),
            DFATransition(59, 10, 18),
            DFATransition(59, 29, 18),
            DFATransition(59, 36, 18),
            DFATransition(59, 79, 18),
            DFATransition(60, 5, 18),
            DFATransition(60, 6, 18),
            DFATransition(60, 7, 18),
            DFATransition(60, 8, 18),
            DFATransition(60, 9, 18),
            DFATransition(60, 10, 18),
            DFATransition(60, 29, 18),
            DFATransition(60, 36, 18),
            DFATransition(60, 79, 18),
            DFATransition(61, 5, 18),
            DFATransition(61, 79, 18),
            DFATransition(62, 5, 18),
            DFATransition(62, 6, 18),
            DFATransition(62, 7, 18),
            DFATransition(62, 8, 18),
            DFATransition(62, 9, 18),
            DFATransition(62, 10, 18),
            DFATransition(62, 17, 18),
            DFATransition(62, 23, 18),
            DFATransition(62, 24, 18),
            DFATransition(62, 25, 18),
            DFATransition(62, 26, 18),
            DFATransition(62, 29, 18),
            DFATransition(62, 36, 18),
            DFATransition(62, 79, 18),
            DFATransition(63, 5, 18),
            DFATransition(63, 15, 18),
            DFATransition(63, 16, 18),
            DFATransition(63, 17, 18),
            DFATransition(63, 18, 18),
            DFATransition(63, 19, 18),
            DFATransition(63, 20, 18),
            DFATransition(63, 21, 18),
            DFATransition(63, 22, 18),
            DFATransition(63, 23, 18),
            DFATransition(63, 24, 18),
            DFATransition(63, 25, 18),
            DFATransition(63, 27, 18),
            DFATransition(63, 31, 18),
            DFATransition(63, 35, 18),
            DFATransition(63, 36, 18),
            DFATransition(64, 79, 18),
            DFATransition(65, 5, 18),
            DFATransition(65, 27, 18),
            DFATransition(66, 79, 18),
            DFATransition(67, 5, 18),
            DFATransition(67, 27, 18),
            DFATransition(68, 79, 18),
            DFATransition(69, 5, 18),
            DFATransition(69, 27, 18),
            DFATransition(70, 79, 18),
            DFATransition(71, 5, 18),
            DFATransition(71, 27, 18),
            DFATransition(72, 79, 18),
            DFATransition(73, 5, 18),
            DFATransition(73, 34, 18),
        ],
        k: 3,
    },
    /* 266 - "ModuleIfDeclarationList0List" */
    LookaheadDFA {
        states: &[None, Some(473), Some(474)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 41, 1),
            DFATransition(0, 42, 1),
            DFATransition(0, 43, 1),
            DFATransition(0, 48, 1),
            DFATransition(0, 51, 1),
            DFATransition(0, 52, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 59, 1),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 1),
            DFATransition(0, 69, 1),
            DFATransition(0, 74, 1),
        ],
        k: 1,
    },
    /* 267 - "ModuleIfDeclarationOpt" */
    LookaheadDFA {
        states: &[None, Some(484), Some(485)],
        transitions: &[DFATransition(0, 27, 1), DFATransition(0, 34, 2)],
        k: 1,
    },
    /* 268 - "ModuleIfDeclarationOpt0" */
    LookaheadDFA {
        states: &[None, Some(478), Some(483)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 41, 2),
            DFATransition(0, 42, 2),
            DFATransition(0, 43, 2),
            DFATransition(0, 47, 1),
            DFATransition(0, 48, 2),
            DFATransition(0, 51, 2),
            DFATransition(0, 52, 2),
            DFATransition(0, 56, 2),
            DFATransition(0, 59, 2),
            DFATransition(0, 62, 2),
            DFATransition(0, 63, 2),
            DFATransition(0, 69, 2),
            DFATransition(0, 74, 2),
        ],
        k: 1,
    },
    /* 269 - "ModuleIfDeclarationOpt0List" */
    LookaheadDFA {
        states: &[None, Some(479), Some(480)],
        transitions: &[
            DFATransition(0, 37, 2),
            DFATransition(0, 41, 1),
            DFATransition(0, 42, 1),
            DFATransition(0, 43, 1),
            DFATransition(0, 48, 1),
            DFATransition(0, 51, 1),
            DFATransition(0, 52, 1),
            DFATransition(0, 56, 1),
            DFATransition(0, 59, 1),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 1),
            DFATransition(0, 69, 1),
            DFATransition(0, 74, 1),
        ],
        k: 1,
    },
    /* 270 - "ModuleIfDeclarationOpt1" */
    LookaheadDFA {
        states: &[None, Some(481), Some(482)],
        transitions: &[DFATransition(0, 27, 1), DFATransition(0, 34, 2)],
        k: 1,
    },
    /* 271 - "ModuleItem" */
    LookaheadDFA {
        states: &[
            None,
            Some(491),
            Some(492),
            Some(493),
            Some(494),
            Some(495),
            Some(496),
            Some(497),
            Some(498),
            Some(499),
            Some(500),
            Some(501),
            Some(502),
        ],
        transitions: &[
            DFATransition(0, 41, 6),
            DFATransition(0, 42, 5),
            DFATransition(0, 43, 7),
            DFATransition(0, 48, 11),
            DFATransition(0, 51, 10),
            DFATransition(0, 52, 8),
            DFATransition(0, 56, 9),
            DFATransition(0, 59, 2),
            DFATransition(0, 62, 1),
            DFATransition(0, 63, 4),
            DFATransition(0, 69, 3),
            DFATransition(0, 74, 12),
        ],
        k: 1,
    },
    /* 272 - "ModuleTerm" */
    LookaheadDFA {
        states: &[Some(61)],
        transitions: &[],
        k: 0,
    },
    /* 273 - "ModuleToken" */
    LookaheadDFA {
        states: &[Some(139)],
        transitions: &[],
        k: 0,
    },
    /* 274 - "Negedge" */
    LookaheadDFA {
        states: &[Some(215)],
        transitions: &[],
        k: 0,
    },
    /* 275 - "NegedgeTerm" */
    LookaheadDFA {
        states: &[Some(62)],
        transitions: &[],
        k: 0,
    },
    /* 276 - "NegedgeToken" */
    LookaheadDFA {
        states: &[Some(140)],
        transitions: &[],
        k: 0,
    },
    /* 277 - "Number" */
    LookaheadDFA {
        states: &[None, Some(228), Some(229)],
        transitions: &[
            DFATransition(0, 6, 2),
            DFATransition(0, 7, 2),
            DFATransition(0, 8, 1),
            DFATransition(0, 9, 1),
            DFATransition(0, 10, 1),
        ],
        k: 1,
    },
    /* 278 - "Operator01" */
    LookaheadDFA {
        states: &[Some(160)],
        transitions: &[],
        k: 0,
    },
    /* 279 - "Operator01Term" */
    LookaheadDFA {
        states: &[Some(17)],
        transitions: &[],
        k: 0,
    },
    /* 280 - "Operator01Token" */
    LookaheadDFA {
        states: &[Some(85)],
        transitions: &[],
        k: 0,
    },
    /* 281 - "Operator02" */
    LookaheadDFA {
        states: &[Some(161)],
        transitions: &[],
        k: 0,
    },
    /* 282 - "Operator02Term" */
    LookaheadDFA {
        states: &[Some(16)],
        transitions: &[],
        k: 0,
    },
    /* 283 - "Operator02Token" */
    LookaheadDFA {
        states: &[Some(86)],
        transitions: &[],
        k: 0,
    },
    /* 284 - "Operator03" */
    LookaheadDFA {
        states: &[Some(162)],
        transitions: &[],
        k: 0,
    },
    /* 285 - "Operator03Term" */
    LookaheadDFA {
        states: &[Some(20)],
        transitions: &[],
        k: 0,
    },
    /* 286 - "Operator03Token" */
    LookaheadDFA {
        states: &[Some(87)],
        transitions: &[],
        k: 0,
    },
    /* 287 - "Operator04" */
    LookaheadDFA {
        states: &[Some(163)],
        transitions: &[],
        k: 0,
    },
    /* 288 - "Operator04Term" */
    LookaheadDFA {
        states: &[Some(19)],
        transitions: &[],
        k: 0,
    },
    /* 289 - "Operator04Token" */
    LookaheadDFA {
        states: &[Some(88)],
        transitions: &[],
        k: 0,
    },
    /* 290 - "Operator05" */
    LookaheadDFA {
        states: &[Some(164)],
        transitions: &[],
        k: 0,
    },
    /* 291 - "Operator05Term" */
    LookaheadDFA {
        states: &[Some(18)],
        transitions: &[],
        k: 0,
    },
    /* 292 - "Operator05Token" */
    LookaheadDFA {
        states: &[Some(89)],
        transitions: &[],
        k: 0,
    },
    /* 293 - "Operator06" */
    LookaheadDFA {
        states: &[Some(165)],
        transitions: &[],
        k: 0,
    },
    /* 294 - "Operator06Term" */
    LookaheadDFA {
        states: &[Some(15)],
        transitions: &[],
        k: 0,
    },
    /* 295 - "Operator06Token" */
    LookaheadDFA {
        states: &[Some(90)],
        transitions: &[],
        k: 0,
    },
    /* 296 - "Operator07" */
    LookaheadDFA {
        states: &[Some(166)],
        transitions: &[],
        k: 0,
    },
    /* 297 - "Operator07Term" */
    LookaheadDFA {
        states: &[Some(14)],
        transitions: &[],
        k: 0,
    },
    /* 298 - "Operator07Token" */
    LookaheadDFA {
        states: &[Some(91)],
        transitions: &[],
        k: 0,
    },
    /* 299 - "Operator08" */
    LookaheadDFA {
        states: &[Some(167)],
        transitions: &[],
        k: 0,
    },
    /* 300 - "Operator08Term" */
    LookaheadDFA {
        states: &[Some(13)],
        transitions: &[],
        k: 0,
    },
    /* 301 - "Operator08Token" */
    LookaheadDFA {
        states: &[Some(92)],
        transitions: &[],
        k: 0,
    },
    /* 302 - "Operator09" */
    LookaheadDFA {
        states: &[Some(168)],
        transitions: &[],
        k: 0,
    },
    /* 303 - "Operator09Term" */
    LookaheadDFA {
        states: &[Some(12)],
        transitions: &[],
        k: 0,
    },
    /* 304 - "Operator09Token" */
    LookaheadDFA {
        states: &[Some(93)],
        transitions: &[],
        k: 0,
    },
    /* 305 - "Operator10" */
    LookaheadDFA {
        states: &[Some(169)],
        transitions: &[],
        k: 0,
    },
    /* 306 - "Operator10Term" */
    LookaheadDFA {
        states: &[Some(11)],
        transitions: &[],
        k: 0,
    },
    /* 307 - "Operator10Token" */
    LookaheadDFA {
        states: &[Some(94)],
        transitions: &[],
        k: 0,
    },
    /* 308 - "Operator11" */
    LookaheadDFA {
        states: &[Some(170)],
        transitions: &[],
        k: 0,
    },
    /* 309 - "Operator11Term" */
    LookaheadDFA {
        states: &[Some(10)],
        transitions: &[],
        k: 0,
    },
    /* 310 - "Operator11Token" */
    LookaheadDFA {
        states: &[Some(95)],
        transitions: &[],
        k: 0,
    },
    /* 311 - "Output" */
    LookaheadDFA {
        states: &[Some(216)],
        transitions: &[],
        k: 0,
    },
    /* 312 - "OutputTerm" */
    LookaheadDFA {
        states: &[Some(63)],
        transitions: &[],
        k: 0,
    },
    /* 313 - "OutputToken" */
    LookaheadDFA {
        states: &[Some(141)],
        transitions: &[],
        k: 0,
    },
    /* 314 - "Parameter" */
    LookaheadDFA {
        states: &[Some(217)],
        transitions: &[],
        k: 0,
    },
    /* 315 - "ParameterDeclaration" */
    LookaheadDFA {
        states: &[Some(357)],
        transitions: &[],
        k: 0,
    },
    /* 316 - "ParameterTerm" */
    LookaheadDFA {
        states: &[Some(64)],
        transitions: &[],
        k: 0,
    },
    /* 317 - "ParameterToken" */
    LookaheadDFA {
        states: &[Some(142)],
        transitions: &[],
        k: 0,
    },
    /* 318 - "PlusColon" */
    LookaheadDFA {
        states: &[Some(184)],
        transitions: &[],
        k: 0,
    },
    /* 319 - "PlusColonTerm" */
    LookaheadDFA {
        states: &[Some(8)],
        transitions: &[],
        k: 0,
    },
    /* 320 - "PlusColonToken" */
    LookaheadDFA {
        states: &[Some(109)],
        transitions: &[],
        k: 0,
    },
    /* 321 - "PortDeclaration" */
    LookaheadDFA {
        states: &[Some(442)],
        transitions: &[],
        k: 0,
    },
    /* 322 - "PortDeclarationItem" */
    LookaheadDFA {
        states: &[Some(450)],
        transitions: &[],
        k: 0,
    },
    /* 323 - "PortDeclarationList" */
    LookaheadDFA {
        states: &[Some(445)],
        transitions: &[],
        k: 0,
    },
    /* 324 - "PortDeclarationListList" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(446),
            None,
            None,
            None,
            Some(447),
            None,
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 28, 1),
            DFATransition(0, 39, 5),
            DFATransition(1, 5, 2),
            DFATransition(1, 39, 6),
            DFATransition(1, 79, 4),
            DFATransition(2, 39, 7),
            DFATransition(2, 79, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 27, 3),
            DFATransition(5, 5, 8),
            DFATransition(5, 12, 9),
            DFATransition(5, 34, 10),
            DFATransition(6, 5, 7),
            DFATransition(6, 12, 7),
            DFATransition(6, 34, 7),
            DFATransition(8, 12, 7),
            DFATransition(8, 34, 7),
            DFATransition(9, 5, 7),
            DFATransition(9, 46, 7),
            DFATransition(9, 49, 7),
            DFATransition(9, 50, 7),
            DFATransition(9, 53, 7),
            DFATransition(9, 54, 7),
            DFATransition(9, 64, 7),
            DFATransition(9, 77, 7),
            DFATransition(9, 78, 7),
            DFATransition(9, 79, 7),
            DFATransition(10, 5, 7),
            DFATransition(10, 37, 7),
            DFATransition(10, 41, 7),
            DFATransition(10, 42, 7),
            DFATransition(10, 43, 7),
            DFATransition(10, 48, 7),
            DFATransition(10, 51, 7),
            DFATransition(10, 52, 7),
            DFATransition(10, 56, 7),
            DFATransition(10, 59, 7),
            DFATransition(10, 62, 7),
            DFATransition(10, 63, 7),
            DFATransition(10, 69, 7),
            DFATransition(10, 74, 7),
        ],
        k: 3,
    },
    /* 325 - "PortDeclarationListOpt" */
    LookaheadDFA {
        states: &[None, Some(448), Some(449)],
        transitions: &[DFATransition(0, 28, 1), DFATransition(0, 39, 2)],
        k: 1,
    },
    /* 326 - "PortDeclarationOpt" */
    LookaheadDFA {
        states: &[None, Some(443), Some(444)],
        transitions: &[DFATransition(0, 39, 2), DFATransition(0, 79, 1)],
        k: 1,
    },
    /* 327 - "Posedge" */
    LookaheadDFA {
        states: &[Some(218)],
        transitions: &[],
        k: 0,
    },
    /* 328 - "PosedgeTerm" */
    LookaheadDFA {
        states: &[Some(65)],
        transitions: &[],
        k: 0,
    },
    /* 329 - "PosedgeToken" */
    LookaheadDFA {
        states: &[Some(143)],
        transitions: &[],
        k: 0,
    },
    /* 330 - "RBrace" */
    LookaheadDFA {
        states: &[Some(185)],
        transitions: &[],
        k: 0,
    },
    /* 331 - "RBraceTerm" */
    LookaheadDFA {
        states: &[Some(32)],
        transitions: &[],
        k: 0,
    },
    /* 332 - "RBraceToken" */
    LookaheadDFA {
        states: &[Some(110)],
        transitions: &[],
        k: 0,
    },
    /* 333 - "RBracket" */
    LookaheadDFA {
        states: &[Some(186)],
        transitions: &[],
        k: 0,
    },
    /* 334 - "RBracketTerm" */
    LookaheadDFA {
        states: &[Some(33)],
        transitions: &[],
        k: 0,
    },
    /* 335 - "RBracketToken" */
    LookaheadDFA {
        states: &[Some(111)],
        transitions: &[],
        k: 0,
    },
    /* 336 - "RParen" */
    LookaheadDFA {
        states: &[Some(187)],
        transitions: &[],
        k: 0,
    },
    /* 337 - "RParenTerm" */
    LookaheadDFA {
        states: &[Some(34)],
        transitions: &[],
        k: 0,
    },
    /* 338 - "RParenToken" */
    LookaheadDFA {
        states: &[Some(112)],
        transitions: &[],
        k: 0,
    },
    /* 339 - "Range" */
    LookaheadDFA {
        states: &[Some(297)],
        transitions: &[],
        k: 0,
    },
    /* 340 - "RangeOperator" */
    LookaheadDFA {
        states: &[None, Some(300), Some(301), Some(302), Some(303)],
        transitions: &[
            DFATransition(0, 11, 3),
            DFATransition(0, 13, 2),
            DFATransition(0, 27, 1),
            DFATransition(0, 73, 4),
        ],
        k: 1,
    },
    /* 341 - "RangeOpt" */
    LookaheadDFA {
        states: &[None, Some(298), Some(299)],
        transitions: &[
            DFATransition(0, 11, 1),
            DFATransition(0, 13, 1),
            DFATransition(0, 27, 1),
            DFATransition(0, 38, 2),
            DFATransition(0, 73, 1),
        ],
        k: 1,
    },
    /* 342 - "RealNumber" */
    LookaheadDFA {
        states: &[None, Some(233), Some(234)],
        transitions: &[DFATransition(0, 6, 2), DFATransition(0, 7, 1)],
        k: 1,
    },
    /* 343 - "Ref" */
    LookaheadDFA {
        states: &[Some(219)],
        transitions: &[],
        k: 0,
    },
    /* 344 - "RefTerm" */
    LookaheadDFA {
        states: &[Some(66)],
        transitions: &[],
        k: 0,
    },
    /* 345 - "RefToken" */
    LookaheadDFA {
        states: &[Some(144)],
        transitions: &[],
        k: 0,
    },
    /* 346 - "Return" */
    LookaheadDFA {
        states: &[Some(220)],
        transitions: &[],
        k: 0,
    },
    /* 347 - "ReturnStatement" */
    LookaheadDFA {
        states: &[Some(348)],
        transitions: &[],
        k: 0,
    },
    /* 348 - "ReturnTerm" */
    LookaheadDFA {
        states: &[Some(67)],
        transitions: &[],
        k: 0,
    },
    /* 349 - "ReturnToken" */
    LookaheadDFA {
        states: &[Some(145)],
        transitions: &[],
        k: 0,
    },
    /* 350 - "Semicolon" */
    LookaheadDFA {
        states: &[Some(188)],
        transitions: &[],
        k: 0,
    },
    /* 351 - "SemicolonTerm" */
    LookaheadDFA {
        states: &[Some(35)],
        transitions: &[],
        k: 0,
    },
    /* 352 - "SemicolonToken" */
    LookaheadDFA {
        states: &[Some(113)],
        transitions: &[],
        k: 0,
    },
    /* 353 - "Start" */
    LookaheadDFA {
        states: &[Some(153)],
        transitions: &[],
        k: 0,
    },
    /* 354 - "StartToken" */
    LookaheadDFA {
        states: &[Some(78)],
        transitions: &[],
        k: 0,
    },
    /* 355 - "Statement" */
    LookaheadDFA {
        states: &[None, Some(318), Some(319), Some(320), Some(321), Some(322)],
        transitions: &[
            DFATransition(0, 51, 5),
            DFATransition(0, 55, 3),
            DFATransition(0, 56, 2),
            DFATransition(0, 72, 4),
            DFATransition(0, 79, 1),
        ],
        k: 1,
    },
    /* 356 - "Step" */
    LookaheadDFA {
        states: &[Some(221)],
        transitions: &[],
        k: 0,
    },
    /* 357 - "StepTerm" */
    LookaheadDFA {
        states: &[Some(68)],
        transitions: &[],
        k: 0,
    },
    /* 358 - "StepToken" */
    LookaheadDFA {
        states: &[Some(146)],
        transitions: &[],
        k: 0,
    },
    /* 359 - "Struct" */
    LookaheadDFA {
        states: &[Some(222)],
        transitions: &[],
        k: 0,
    },
    /* 360 - "StructDeclaration" */
    LookaheadDFA {
        states: &[Some(396)],
        transitions: &[],
        k: 0,
    },
    /* 361 - "StructItem" */
    LookaheadDFA {
        states: &[Some(402)],
        transitions: &[],
        k: 0,
    },
    /* 362 - "StructList" */
    LookaheadDFA {
        states: &[Some(397)],
        transitions: &[],
        k: 0,
    },
    /* 363 - "StructListList" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(398),
            None,
            None,
            None,
            Some(399),
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 28, 1),
            DFATransition(0, 37, 5),
            DFATransition(1, 5, 2),
            DFATransition(1, 37, 6),
            DFATransition(1, 79, 4),
            DFATransition(2, 37, 7),
            DFATransition(2, 79, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 27, 3),
            DFATransition(5, 5, 8),
            DFATransition(5, 37, 9),
            DFATransition(5, 41, 10),
            DFATransition(5, 42, 11),
            DFATransition(5, 43, 12),
            DFATransition(5, 48, 13),
            DFATransition(5, 51, 14),
            DFATransition(5, 52, 15),
            DFATransition(5, 56, 16),
            DFATransition(5, 59, 17),
            DFATransition(5, 62, 18),
            DFATransition(5, 63, 19),
            DFATransition(5, 65, 20),
            DFATransition(5, 69, 21),
            DFATransition(5, 74, 22),
            DFATransition(6, 5, 7),
            DFATransition(6, 37, 7),
            DFATransition(6, 41, 7),
            DFATransition(6, 42, 7),
            DFATransition(6, 43, 7),
            DFATransition(6, 48, 7),
            DFATransition(6, 51, 7),
            DFATransition(6, 52, 7),
            DFATransition(6, 56, 7),
            DFATransition(6, 59, 7),
            DFATransition(6, 62, 7),
            DFATransition(6, 63, 7),
            DFATransition(6, 65, 7),
            DFATransition(6, 69, 7),
            DFATransition(6, 74, 7),
            DFATransition(8, 37, 7),
            DFATransition(8, 41, 7),
            DFATransition(8, 42, 7),
            DFATransition(8, 43, 7),
            DFATransition(8, 48, 7),
            DFATransition(8, 51, 7),
            DFATransition(8, 52, 7),
            DFATransition(8, 56, 7),
            DFATransition(8, 59, 7),
            DFATransition(8, 62, 7),
            DFATransition(8, 63, 7),
            DFATransition(8, 65, 7),
            DFATransition(8, 69, 7),
            DFATransition(8, 74, 7),
            DFATransition(9, 0, 7),
            DFATransition(9, 5, 7),
            DFATransition(9, 37, 7),
            DFATransition(9, 41, 7),
            DFATransition(9, 42, 7),
            DFATransition(9, 43, 7),
            DFATransition(9, 47, 7),
            DFATransition(9, 48, 7),
            DFATransition(9, 51, 7),
            DFATransition(9, 52, 7),
            DFATransition(9, 56, 7),
            DFATransition(9, 59, 7),
            DFATransition(9, 60, 7),
            DFATransition(9, 62, 7),
            DFATransition(9, 63, 7),
            DFATransition(9, 65, 7),
            DFATransition(9, 66, 7),
            DFATransition(9, 69, 7),
            DFATransition(9, 74, 7),
            DFATransition(10, 5, 7),
            DFATransition(10, 34, 7),
            DFATransition(11, 5, 7),
            DFATransition(11, 36, 7),
            DFATransition(12, 5, 7),
            DFATransition(12, 79, 7),
            DFATransition(13, 5, 7),
            DFATransition(13, 79, 7),
            DFATransition(14, 5, 7),
            DFATransition(14, 79, 7),
            DFATransition(15, 5, 7),
            DFATransition(15, 79, 7),
            DFATransition(16, 5, 7),
            DFATransition(16, 6, 7),
            DFATransition(16, 7, 7),
            DFATransition(16, 8, 7),
            DFATransition(16, 9, 7),
            DFATransition(16, 10, 7),
            DFATransition(16, 17, 7),
            DFATransition(16, 23, 7),
            DFATransition(16, 24, 7),
            DFATransition(16, 25, 7),
            DFATransition(16, 26, 7),
            DFATransition(16, 29, 7),
            DFATransition(16, 36, 7),
            DFATransition(16, 79, 7),
            DFATransition(17, 5, 7),
            DFATransition(17, 79, 7),
            DFATransition(18, 5, 7),
            DFATransition(18, 79, 7),
            DFATransition(19, 5, 7),
            DFATransition(19, 79, 7),
            DFATransition(20, 5, 7),
            DFATransition(20, 79, 7),
            DFATransition(21, 5, 7),
            DFATransition(21, 79, 7),
            DFATransition(22, 5, 7),
            DFATransition(22, 79, 7),
        ],
        k: 3,
    },
    /* 364 - "StructListOpt" */
    LookaheadDFA {
        states: &[None, Some(400), Some(401)],
        transitions: &[DFATransition(0, 28, 1), DFATransition(0, 37, 2)],
        k: 1,
    },
    /* 365 - "StructTerm" */
    LookaheadDFA {
        states: &[Some(69)],
        transitions: &[],
        k: 0,
    },
    /* 366 - "StructToken" */
    LookaheadDFA {
        states: &[Some(147)],
        transitions: &[],
        k: 0,
    },
    /* 367 - "SyncHigh" */
    LookaheadDFA {
        states: &[Some(223)],
        transitions: &[],
        k: 0,
    },
    /* 368 - "SyncHighTerm" */
    LookaheadDFA {
        states: &[Some(70)],
        transitions: &[],
        k: 0,
    },
    /* 369 - "SyncHighToken" */
    LookaheadDFA {
        states: &[Some(148)],
        transitions: &[],
        k: 0,
    },
    /* 370 - "SyncLow" */
    LookaheadDFA {
        states: &[Some(224)],
        transitions: &[],
        k: 0,
    },
    /* 371 - "SyncLowTerm" */
    LookaheadDFA {
        states: &[Some(71)],
        transitions: &[],
        k: 0,
    },
    /* 372 - "SyncLowToken" */
    LookaheadDFA {
        states: &[Some(149)],
        transitions: &[],
        k: 0,
    },
    /* 373 - "Type" */
    LookaheadDFA {
        states: &[Some(313)],
        transitions: &[],
        k: 0,
    },
    /* 374 - "TypeGroup" */
    LookaheadDFA {
        states: &[None, Some(314), Some(315)],
        transitions: &[
            DFATransition(0, 46, 1),
            DFATransition(0, 49, 1),
            DFATransition(0, 50, 1),
            DFATransition(0, 53, 1),
            DFATransition(0, 54, 1),
            DFATransition(0, 64, 1),
            DFATransition(0, 77, 1),
            DFATransition(0, 78, 1),
            DFATransition(0, 79, 2),
        ],
        k: 1,
    },
    /* 375 - "TypeList" */
    LookaheadDFA {
        states: &[None, Some(316), Some(317)],
        transitions: &[
            DFATransition(0, 28, 2),
            DFATransition(0, 32, 2),
            DFATransition(0, 34, 2),
            DFATransition(0, 35, 1),
            DFATransition(0, 37, 2),
            DFATransition(0, 39, 2),
            DFATransition(0, 40, 2),
            DFATransition(0, 61, 2),
        ],
        k: 1,
    },
    /* 376 - "U32" */
    LookaheadDFA {
        states: &[Some(225)],
        transitions: &[],
        k: 0,
    },
    /* 377 - "U32Term" */
    LookaheadDFA {
        states: &[Some(72)],
        transitions: &[],
        k: 0,
    },
    /* 378 - "U32Token" */
    LookaheadDFA {
        states: &[Some(150)],
        transitions: &[],
        k: 0,
    },
    /* 379 - "U64" */
    LookaheadDFA {
        states: &[Some(226)],
        transitions: &[],
        k: 0,
    },
    /* 380 - "U64Term" */
    LookaheadDFA {
        states: &[Some(73)],
        transitions: &[],
        k: 0,
    },
    /* 381 - "U64Token" */
    LookaheadDFA {
        states: &[Some(151)],
        transitions: &[],
        k: 0,
    },
    /* 382 - "UnaryOperator" */
    LookaheadDFA {
        states: &[Some(171)],
        transitions: &[],
        k: 0,
    },
    /* 383 - "UnaryOperatorTerm" */
    LookaheadDFA {
        states: &[Some(21)],
        transitions: &[],
        k: 0,
    },
    /* 384 - "UnaryOperatorToken" */
    LookaheadDFA {
        states: &[Some(96)],
        transitions: &[],
        k: 0,
    },
    /* 385 - "Veryl" */
    LookaheadDFA {
        states: &[Some(538)],
        transitions: &[],
        k: 0,
    },
    /* 386 - "VerylList" */
    LookaheadDFA {
        states: &[None, Some(539), Some(540)],
        transitions: &[
            DFATransition(0, 0, 2),
            DFATransition(0, 60, 1),
            DFATransition(0, 66, 1),
        ],
        k: 1,
    },
    /* 387 - "Width" */
    LookaheadDFA {
        states: &[Some(304)],
        transitions: &[],
        k: 0,
    },
    /* 388 - "WithParameter" */
    LookaheadDFA {
        states: &[Some(431)],
        transitions: &[],
        k: 0,
    },
    /* 389 - "WithParameterItem" */
    LookaheadDFA {
        states: &[Some(439)],
        transitions: &[],
        k: 0,
    },
    /* 390 - "WithParameterItemGroup" */
    LookaheadDFA {
        states: &[None, Some(440), Some(441)],
        transitions: &[DFATransition(0, 63, 2), DFATransition(0, 69, 1)],
        k: 1,
    },
    /* 391 - "WithParameterList" */
    LookaheadDFA {
        states: &[Some(434)],
        transitions: &[],
        k: 0,
    },
    /* 392 - "WithParameterListList" */
    LookaheadDFA {
        states: &[
            None,
            None,
            None,
            Some(435),
            None,
            None,
            None,
            None,
            Some(436),
            None,
            None,
            None,
            None,
        ],
        transitions: &[
            DFATransition(0, 28, 1),
            DFATransition(0, 39, 6),
            DFATransition(1, 5, 2),
            DFATransition(1, 39, 7),
            DFATransition(1, 63, 4),
            DFATransition(1, 69, 5),
            DFATransition(2, 39, 8),
            DFATransition(2, 63, 3),
            DFATransition(2, 69, 3),
            DFATransition(4, 5, 3),
            DFATransition(4, 79, 3),
            DFATransition(5, 5, 3),
            DFATransition(5, 79, 3),
            DFATransition(6, 5, 9),
            DFATransition(6, 12, 10),
            DFATransition(6, 34, 11),
            DFATransition(6, 36, 12),
            DFATransition(7, 5, 8),
            DFATransition(7, 12, 8),
            DFATransition(7, 34, 8),
            DFATransition(7, 36, 8),
            DFATransition(9, 12, 8),
            DFATransition(9, 34, 8),
            DFATransition(9, 36, 8),
            DFATransition(10, 5, 8),
            DFATransition(10, 46, 8),
            DFATransition(10, 49, 8),
            DFATransition(10, 50, 8),
            DFATransition(10, 53, 8),
            DFATransition(10, 54, 8),
            DFATransition(10, 64, 8),
            DFATransition(10, 77, 8),
            DFATransition(10, 78, 8),
            DFATransition(10, 79, 8),
            DFATransition(11, 5, 8),
            DFATransition(11, 37, 8),
            DFATransition(11, 41, 8),
            DFATransition(11, 42, 8),
            DFATransition(11, 43, 8),
            DFATransition(11, 48, 8),
            DFATransition(11, 51, 8),
            DFATransition(11, 52, 8),
            DFATransition(11, 56, 8),
            DFATransition(11, 59, 8),
            DFATransition(11, 62, 8),
            DFATransition(11, 63, 8),
            DFATransition(11, 65, 8),
            DFATransition(11, 69, 8),
            DFATransition(11, 74, 8),
            DFATransition(12, 5, 8),
            DFATransition(12, 39, 8),
            DFATransition(12, 79, 8),
        ],
        k: 3,
    },
    /* 393 - "WithParameterListOpt" */
    LookaheadDFA {
        states: &[None, Some(437), Some(438)],
        transitions: &[DFATransition(0, 28, 1), DFATransition(0, 39, 2)],
        k: 1,
    },
    /* 394 - "WithParameterOpt" */
    LookaheadDFA {
        states: &[None, Some(432), Some(433)],
        transitions: &[
            DFATransition(0, 39, 2),
            DFATransition(0, 63, 1),
            DFATransition(0, 69, 1),
        ],
        k: 1,
    },
];

pub const PRODUCTIONS: &[Production; 541] = &[
    // 0 - CommentsTerm: "(?:(?:(?://.*(?:\r\n|\r|\n|$))|(?:(?ms)/\u{2a}.*?\u{2a}/))\s*)+";
    Production {
        lhs: 53,
        production: &[ParseType::T(5)],
    },
    // 1 - ExponentTerm: /[0-9]+(?:_[0-9]+)*\.[0-9]+(?:_[0-9]+)*[eE][+-]?[0-9]+(?:_[0-9]+)*/;
    Production {
        lhs: 81,
        production: &[ParseType::T(6)],
    },
    // 2 - FixedPointTerm: /[0-9]+(?:_[0-9]+)*\.[0-9]+(?:_[0-9]+)*/;
    Production {
        lhs: 119,
        production: &[ParseType::T(7)],
    },
    // 3 - BasedTerm: /[0-9]+(?:_[0-9]+)*'[bodh][0-9a-fA-FxzXZ]+(?:_[0-9a-fA-FxzXZ]+)*/;
    Production {
        lhs: 39,
        production: &[ParseType::T(8)],
    },
    // 4 - BaseLessTerm: /[0-9]+(?:_[0-9]+)*/;
    Production {
        lhs: 36,
        production: &[ParseType::T(9)],
    },
    // 5 - AllBitTerm: /'[01]/;
    Production {
        lhs: 1,
        production: &[ParseType::T(10)],
    },
    // 6 - MinusColonTerm: '-:';
    Production {
        lhs: 242,
        production: &[ParseType::T(11)],
    },
    // 7 - MinusGTTerm: '->';
    Production {
        lhs: 245,
        production: &[ParseType::T(12)],
    },
    // 8 - PlusColonTerm: '+:';
    Production {
        lhs: 319,
        production: &[ParseType::T(13)],
    },
    // 9 - AssignmentOperatorTerm: "\+=|-=|\*=|/=|%=|&=|\|=|\^=|<<=|>>=|<<<=|>>>=";
    Production {
        lhs: 25,
        production: &[ParseType::T(14)],
    },
    // 10 - Operator11Term: "\*\*";
    Production {
        lhs: 309,
        production: &[ParseType::T(15)],
    },
    // 11 - Operator10Term: "\*|/|%";
    Production {
        lhs: 306,
        production: &[ParseType::T(16)],
    },
    // 12 - Operator09Term: "\+|-";
    Production {
        lhs: 303,
        production: &[ParseType::T(17)],
    },
    // 13 - Operator08Term: "<<<|>>>|<<|>>";
    Production {
        lhs: 300,
        production: &[ParseType::T(18)],
    },
    // 14 - Operator07Term: "<=|>=|<|>";
    Production {
        lhs: 297,
        production: &[ParseType::T(19)],
    },
    // 15 - Operator06Term: "===|==\?|!==|!=\?|==|!=";
    Production {
        lhs: 294,
        production: &[ParseType::T(20)],
    },
    // 16 - Operator02Term: "&&";
    Production {
        lhs: 282,
        production: &[ParseType::T(21)],
    },
    // 17 - Operator01Term: "\|\|";
    Production {
        lhs: 279,
        production: &[ParseType::T(22)],
    },
    // 18 - Operator05Term: "&";
    Production {
        lhs: 291,
        production: &[ParseType::T(23)],
    },
    // 19 - Operator04Term: "\^~|\^|~\^";
    Production {
        lhs: 288,
        production: &[ParseType::T(24)],
    },
    // 20 - Operator03Term: "\|";
    Production {
        lhs: 285,
        production: &[ParseType::T(25)],
    },
    // 21 - UnaryOperatorTerm: "~&|~\||!|~";
    Production {
        lhs: 383,
        production: &[ParseType::T(26)],
    },
    // 22 - ColonTerm: ':';
    Production {
        lhs: 46,
        production: &[ParseType::T(27)],
    },
    // 23 - CommaTerm: ',';
    Production {
        lhs: 49,
        production: &[ParseType::T(28)],
    },
    // 24 - DollarTerm: '$';
    Production {
        lhs: 57,
        production: &[ParseType::T(29)],
    },
    // 25 - DotDotTerm: '..';
    Production {
        lhs: 61,
        production: &[ParseType::T(30)],
    },
    // 26 - DotTerm: '.';
    Production {
        lhs: 63,
        production: &[ParseType::T(31)],
    },
    // 27 - EquTerm: '=';
    Production {
        lhs: 78,
        production: &[ParseType::T(32)],
    },
    // 28 - HashTerm: '#';
    Production {
        lhs: 139,
        production: &[ParseType::T(33)],
    },
    // 29 - LBraceTerm: '{';
    Production {
        lhs: 221,
        production: &[ParseType::T(34)],
    },
    // 30 - LBracketTerm: '[';
    Production {
        lhs: 224,
        production: &[ParseType::T(35)],
    },
    // 31 - LParenTerm: '(';
    Production {
        lhs: 227,
        production: &[ParseType::T(36)],
    },
    // 32 - RBraceTerm: '}';
    Production {
        lhs: 331,
        production: &[ParseType::T(37)],
    },
    // 33 - RBracketTerm: ']';
    Production {
        lhs: 334,
        production: &[ParseType::T(38)],
    },
    // 34 - RParenTerm: ')';
    Production {
        lhs: 337,
        production: &[ParseType::T(39)],
    },
    // 35 - SemicolonTerm: ';';
    Production {
        lhs: 351,
        production: &[ParseType::T(40)],
    },
    // 36 - AlwaysCombTerm: /\balways_comb\b/;
    Production {
        lhs: 6,
        production: &[ParseType::T(41)],
    },
    // 37 - AlwaysFfTerm: /\balways_ff\b/;
    Production {
        lhs: 18,
        production: &[ParseType::T(42)],
    },
    // 38 - AssignTerm: /\bassign\b/;
    Production {
        lhs: 22,
        production: &[ParseType::T(43)],
    },
    // 39 - AsyncHighTerm: /\basync_high\b/;
    Production {
        lhs: 30,
        production: &[ParseType::T(44)],
    },
    // 40 - AsyncLowTerm: /\basync_low\b/;
    Production {
        lhs: 33,
        production: &[ParseType::T(45)],
    },
    // 41 - BitTerm: /\bbit\b/;
    Production {
        lhs: 42,
        production: &[ParseType::T(46)],
    },
    // 42 - ElseTerm: /\belse\b/;
    Production {
        lhs: 66,
        production: &[ParseType::T(47)],
    },
    // 43 - EnumTerm: /\benum\b/;
    Production {
        lhs: 75,
        production: &[ParseType::T(48)],
    },
    // 44 - F32Term: /\bf32\b/;
    Production {
        lhs: 109,
        production: &[ParseType::T(49)],
    },
    // 45 - F64Term: /\bf64\b/;
    Production {
        lhs: 112,
        production: &[ParseType::T(50)],
    },
    // 46 - ForTerm: /\bfor\b/;
    Production {
        lhs: 125,
        production: &[ParseType::T(51)],
    },
    // 47 - FunctionTerm: /\bfunction\b/;
    Production {
        lhs: 136,
        production: &[ParseType::T(52)],
    },
    // 48 - I32Term: /\bi32\b/;
    Production {
        lhs: 146,
        production: &[ParseType::T(53)],
    },
    // 49 - I64Term: /\bi64\b/;
    Production {
        lhs: 149,
        production: &[ParseType::T(54)],
    },
    // 50 - IfResetTerm: /\bif_reset\b/;
    Production {
        lhs: 162,
        production: &[ParseType::T(55)],
    },
    // 51 - IfTerm: /\bif\b/;
    Production {
        lhs: 170,
        production: &[ParseType::T(56)],
    },
    // 52 - InoutTerm: /\binout\b/;
    Production {
        lhs: 176,
        production: &[ParseType::T(57)],
    },
    // 53 - InputTerm: /\binput\b/;
    Production {
        lhs: 179,
        production: &[ParseType::T(58)],
    },
    // 54 - InstTerm: /\binst\b/;
    Production {
        lhs: 199,
        production: &[ParseType::T(59)],
    },
    // 55 - InterfaceTerm: /\binterface\b/;
    Production {
        lhs: 218,
        production: &[ParseType::T(60)],
    },
    // 56 - InTerm: /\bin\b/;
    Production {
        lhs: 173,
        production: &[ParseType::T(61)],
    },
    // 57 - LetTerm: /\blet\b/;
    Production {
        lhs: 232,
        production: &[ParseType::T(62)],
    },
    // 58 - LocalparamTerm: /\blocalparam\b/;
    Production {
        lhs: 236,
        production: &[ParseType::T(63)],
    },
    // 59 - LogicTerm: /\blogic\b/;
    Production {
        lhs: 239,
        production: &[ParseType::T(64)],
    },
    // 60 - ModportTerm: /\bmodport\b/;
    Production {
        lhs: 253,
        production: &[ParseType::T(65)],
    },
    // 61 - ModuleTerm: /\bmodule\b/;
    Production {
        lhs: 272,
        production: &[ParseType::T(66)],
    },
    // 62 - NegedgeTerm: /\bnegedge\b/;
    Production {
        lhs: 275,
        production: &[ParseType::T(67)],
    },
    // 63 - OutputTerm: /\boutput\b/;
    Production {
        lhs: 312,
        production: &[ParseType::T(68)],
    },
    // 64 - ParameterTerm: /\bparameter\b/;
    Production {
        lhs: 316,
        production: &[ParseType::T(69)],
    },
    // 65 - PosedgeTerm: /\bposedge\b/;
    Production {
        lhs: 328,
        production: &[ParseType::T(70)],
    },
    // 66 - RefTerm: /\bref\b/;
    Production {
        lhs: 344,
        production: &[ParseType::T(71)],
    },
    // 67 - ReturnTerm: /\breturn\b/;
    Production {
        lhs: 348,
        production: &[ParseType::T(72)],
    },
    // 68 - StepTerm: /\bstep\b/;
    Production {
        lhs: 357,
        production: &[ParseType::T(73)],
    },
    // 69 - StructTerm: /\bstruct\b/;
    Production {
        lhs: 365,
        production: &[ParseType::T(74)],
    },
    // 70 - SyncHighTerm: /\bsync_high\b/;
    Production {
        lhs: 368,
        production: &[ParseType::T(75)],
    },
    // 71 - SyncLowTerm: /\bsync_low\b/;
    Production {
        lhs: 371,
        production: &[ParseType::T(76)],
    },
    // 72 - U32Term: /\bu32\b/;
    Production {
        lhs: 377,
        production: &[ParseType::T(77)],
    },
    // 73 - U64Term: /\bu64\b/;
    Production {
        lhs: 380,
        production: &[ParseType::T(78)],
    },
    // 74 - IdentifierTerm: /[a-zA-Z_][0-9a-zA-Z_]*/;
    Production {
        lhs: 152,
        production: &[ParseType::T(79)],
    },
    // 75 - Comments: CommentsOpt /* Option */;
    Production {
        lhs: 51,
        production: &[ParseType::N(52)],
    },
    // 76 - CommentsOpt: CommentsTerm;
    Production {
        lhs: 52,
        production: &[ParseType::N(53)],
    },
    // 77 - CommentsOpt: ;
    Production {
        lhs: 52,
        production: &[],
    },
    // 78 - StartToken: Comments;
    Production {
        lhs: 354,
        production: &[ParseType::N(51)],
    },
    // 79 - ExponentToken: ExponentTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 82,
        production: &[ParseType::N(51), ParseType::N(81)],
    },
    // 80 - FixedPointToken: FixedPointTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 120,
        production: &[ParseType::N(51), ParseType::N(119)],
    },
    // 81 - BasedToken: BasedTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 40,
        production: &[ParseType::N(51), ParseType::N(39)],
    },
    // 82 - BaseLessToken: BaseLessTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 37,
        production: &[ParseType::N(51), ParseType::N(36)],
    },
    // 83 - AllBitToken: AllBitTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 2,
        production: &[ParseType::N(51), ParseType::N(1)],
    },
    // 84 - AssignmentOperatorToken: AssignmentOperatorTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 26,
        production: &[ParseType::N(51), ParseType::N(25)],
    },
    // 85 - Operator01Token: Operator01Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 280,
        production: &[ParseType::N(51), ParseType::N(279)],
    },
    // 86 - Operator02Token: Operator02Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 283,
        production: &[ParseType::N(51), ParseType::N(282)],
    },
    // 87 - Operator03Token: Operator03Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 286,
        production: &[ParseType::N(51), ParseType::N(285)],
    },
    // 88 - Operator04Token: Operator04Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 289,
        production: &[ParseType::N(51), ParseType::N(288)],
    },
    // 89 - Operator05Token: Operator05Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 292,
        production: &[ParseType::N(51), ParseType::N(291)],
    },
    // 90 - Operator06Token: Operator06Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 295,
        production: &[ParseType::N(51), ParseType::N(294)],
    },
    // 91 - Operator07Token: Operator07Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 298,
        production: &[ParseType::N(51), ParseType::N(297)],
    },
    // 92 - Operator08Token: Operator08Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 301,
        production: &[ParseType::N(51), ParseType::N(300)],
    },
    // 93 - Operator09Token: Operator09Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 304,
        production: &[ParseType::N(51), ParseType::N(303)],
    },
    // 94 - Operator10Token: Operator10Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 307,
        production: &[ParseType::N(51), ParseType::N(306)],
    },
    // 95 - Operator11Token: Operator11Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 310,
        production: &[ParseType::N(51), ParseType::N(309)],
    },
    // 96 - UnaryOperatorToken: UnaryOperatorTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 384,
        production: &[ParseType::N(51), ParseType::N(383)],
    },
    // 97 - ColonToken: ColonTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 47,
        production: &[ParseType::N(51), ParseType::N(46)],
    },
    // 98 - CommaToken: CommaTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 50,
        production: &[ParseType::N(51), ParseType::N(49)],
    },
    // 99 - DollarToken: DollarTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 58,
        production: &[ParseType::N(51), ParseType::N(57)],
    },
    // 100 - DotDotToken: DotDotTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 62,
        production: &[ParseType::N(51), ParseType::N(61)],
    },
    // 101 - DotToken: DotTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 64,
        production: &[ParseType::N(51), ParseType::N(63)],
    },
    // 102 - EquToken: EquTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 79,
        production: &[ParseType::N(51), ParseType::N(78)],
    },
    // 103 - HashToken: HashTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 140,
        production: &[ParseType::N(51), ParseType::N(139)],
    },
    // 104 - LBraceToken: LBraceTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 222,
        production: &[ParseType::N(51), ParseType::N(221)],
    },
    // 105 - LBracketToken: LBracketTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 225,
        production: &[ParseType::N(51), ParseType::N(224)],
    },
    // 106 - LParenToken: LParenTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 228,
        production: &[ParseType::N(51), ParseType::N(227)],
    },
    // 107 - MinusColonToken: MinusColonTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 243,
        production: &[ParseType::N(51), ParseType::N(242)],
    },
    // 108 - MinusGTToken: MinusGTTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 246,
        production: &[ParseType::N(51), ParseType::N(245)],
    },
    // 109 - PlusColonToken: PlusColonTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 320,
        production: &[ParseType::N(51), ParseType::N(319)],
    },
    // 110 - RBraceToken: RBraceTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 332,
        production: &[ParseType::N(51), ParseType::N(331)],
    },
    // 111 - RBracketToken: RBracketTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 335,
        production: &[ParseType::N(51), ParseType::N(334)],
    },
    // 112 - RParenToken: RParenTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 338,
        production: &[ParseType::N(51), ParseType::N(337)],
    },
    // 113 - SemicolonToken: SemicolonTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 352,
        production: &[ParseType::N(51), ParseType::N(351)],
    },
    // 114 - AlwaysCombToken: AlwaysCombTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 7,
        production: &[ParseType::N(51), ParseType::N(6)],
    },
    // 115 - AlwaysFfToken: AlwaysFfTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 19,
        production: &[ParseType::N(51), ParseType::N(18)],
    },
    // 116 - AssignToken: AssignTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 23,
        production: &[ParseType::N(51), ParseType::N(22)],
    },
    // 117 - AsyncHighToken: AsyncHighTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 31,
        production: &[ParseType::N(51), ParseType::N(30)],
    },
    // 118 - AsyncLowToken: AsyncLowTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 34,
        production: &[ParseType::N(51), ParseType::N(33)],
    },
    // 119 - BitToken: BitTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 43,
        production: &[ParseType::N(51), ParseType::N(42)],
    },
    // 120 - ElseToken: ElseTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 67,
        production: &[ParseType::N(51), ParseType::N(66)],
    },
    // 121 - EnumToken: EnumTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 76,
        production: &[ParseType::N(51), ParseType::N(75)],
    },
    // 122 - F32Token: F32Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 110,
        production: &[ParseType::N(51), ParseType::N(109)],
    },
    // 123 - F64Token: F64Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 113,
        production: &[ParseType::N(51), ParseType::N(112)],
    },
    // 124 - ForToken: ForTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 126,
        production: &[ParseType::N(51), ParseType::N(125)],
    },
    // 125 - FunctionToken: FunctionTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 137,
        production: &[ParseType::N(51), ParseType::N(136)],
    },
    // 126 - I32Token: I32Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 147,
        production: &[ParseType::N(51), ParseType::N(146)],
    },
    // 127 - I64Token: I64Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 150,
        production: &[ParseType::N(51), ParseType::N(149)],
    },
    // 128 - IfResetToken: IfResetTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 163,
        production: &[ParseType::N(51), ParseType::N(162)],
    },
    // 129 - IfToken: IfTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 171,
        production: &[ParseType::N(51), ParseType::N(170)],
    },
    // 130 - InoutToken: InoutTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 177,
        production: &[ParseType::N(51), ParseType::N(176)],
    },
    // 131 - InputToken: InputTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 180,
        production: &[ParseType::N(51), ParseType::N(179)],
    },
    // 132 - InstToken: InstTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 200,
        production: &[ParseType::N(51), ParseType::N(199)],
    },
    // 133 - InterfaceToken: InterfaceTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 219,
        production: &[ParseType::N(51), ParseType::N(218)],
    },
    // 134 - InToken: InTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 174,
        production: &[ParseType::N(51), ParseType::N(173)],
    },
    // 135 - LetToken: LetTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 233,
        production: &[ParseType::N(51), ParseType::N(232)],
    },
    // 136 - LocalparamToken: LocalparamTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 237,
        production: &[ParseType::N(51), ParseType::N(236)],
    },
    // 137 - LogicToken: LogicTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 240,
        production: &[ParseType::N(51), ParseType::N(239)],
    },
    // 138 - ModportToken: ModportTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 254,
        production: &[ParseType::N(51), ParseType::N(253)],
    },
    // 139 - ModuleToken: ModuleTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 273,
        production: &[ParseType::N(51), ParseType::N(272)],
    },
    // 140 - NegedgeToken: NegedgeTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 276,
        production: &[ParseType::N(51), ParseType::N(275)],
    },
    // 141 - OutputToken: OutputTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 313,
        production: &[ParseType::N(51), ParseType::N(312)],
    },
    // 142 - ParameterToken: ParameterTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 317,
        production: &[ParseType::N(51), ParseType::N(316)],
    },
    // 143 - PosedgeToken: PosedgeTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 329,
        production: &[ParseType::N(51), ParseType::N(328)],
    },
    // 144 - RefToken: RefTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 345,
        production: &[ParseType::N(51), ParseType::N(344)],
    },
    // 145 - ReturnToken: ReturnTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 349,
        production: &[ParseType::N(51), ParseType::N(348)],
    },
    // 146 - StepToken: StepTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 358,
        production: &[ParseType::N(51), ParseType::N(357)],
    },
    // 147 - StructToken: StructTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 366,
        production: &[ParseType::N(51), ParseType::N(365)],
    },
    // 148 - SyncHighToken: SyncHighTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 369,
        production: &[ParseType::N(51), ParseType::N(368)],
    },
    // 149 - SyncLowToken: SyncLowTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 372,
        production: &[ParseType::N(51), ParseType::N(371)],
    },
    // 150 - U32Token: U32Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 378,
        production: &[ParseType::N(51), ParseType::N(377)],
    },
    // 151 - U64Token: U64Term : crate::veryl_token::Token  Comments;
    Production {
        lhs: 381,
        production: &[ParseType::N(51), ParseType::N(380)],
    },
    // 152 - IdentifierToken: IdentifierTerm : crate::veryl_token::Token  Comments;
    Production {
        lhs: 153,
        production: &[ParseType::N(51), ParseType::N(152)],
    },
    // 153 - Start: StartToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 353,
        production: &[ParseType::N(354)],
    },
    // 154 - Exponent: ExponentToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 80,
        production: &[ParseType::N(82)],
    },
    // 155 - FixedPoint: FixedPointToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 118,
        production: &[ParseType::N(120)],
    },
    // 156 - Based: BasedToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 38,
        production: &[ParseType::N(40)],
    },
    // 157 - BaseLess: BaseLessToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 35,
        production: &[ParseType::N(37)],
    },
    // 158 - AllBit: AllBitToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 0,
        production: &[ParseType::N(2)],
    },
    // 159 - AssignmentOperator: AssignmentOperatorToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 24,
        production: &[ParseType::N(26)],
    },
    // 160 - Operator01: Operator01Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 278,
        production: &[ParseType::N(280)],
    },
    // 161 - Operator02: Operator02Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 281,
        production: &[ParseType::N(283)],
    },
    // 162 - Operator03: Operator03Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 284,
        production: &[ParseType::N(286)],
    },
    // 163 - Operator04: Operator04Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 287,
        production: &[ParseType::N(289)],
    },
    // 164 - Operator05: Operator05Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 290,
        production: &[ParseType::N(292)],
    },
    // 165 - Operator06: Operator06Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 293,
        production: &[ParseType::N(295)],
    },
    // 166 - Operator07: Operator07Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 296,
        production: &[ParseType::N(298)],
    },
    // 167 - Operator08: Operator08Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 299,
        production: &[ParseType::N(301)],
    },
    // 168 - Operator09: Operator09Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 302,
        production: &[ParseType::N(304)],
    },
    // 169 - Operator10: Operator10Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 305,
        production: &[ParseType::N(307)],
    },
    // 170 - Operator11: Operator11Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 308,
        production: &[ParseType::N(310)],
    },
    // 171 - UnaryOperator: UnaryOperatorToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 382,
        production: &[ParseType::N(384)],
    },
    // 172 - Colon: ColonToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 45,
        production: &[ParseType::N(47)],
    },
    // 173 - Comma: CommaToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 48,
        production: &[ParseType::N(50)],
    },
    // 174 - Dollar: DollarToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 56,
        production: &[ParseType::N(58)],
    },
    // 175 - DotDot: DotDotToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 60,
        production: &[ParseType::N(62)],
    },
    // 176 - Dot: DotToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 59,
        production: &[ParseType::N(64)],
    },
    // 177 - Equ: EquToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 77,
        production: &[ParseType::N(79)],
    },
    // 178 - Hash: HashToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 138,
        production: &[ParseType::N(140)],
    },
    // 179 - LBrace: LBraceToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 220,
        production: &[ParseType::N(222)],
    },
    // 180 - LBracket: LBracketToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 223,
        production: &[ParseType::N(225)],
    },
    // 181 - LParen: LParenToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 226,
        production: &[ParseType::N(228)],
    },
    // 182 - MinusColon: MinusColonToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 241,
        production: &[ParseType::N(243)],
    },
    // 183 - MinusGT: MinusGTToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 244,
        production: &[ParseType::N(246)],
    },
    // 184 - PlusColon: PlusColonToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 318,
        production: &[ParseType::N(320)],
    },
    // 185 - RBrace: RBraceToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 330,
        production: &[ParseType::N(332)],
    },
    // 186 - RBracket: RBracketToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 333,
        production: &[ParseType::N(335)],
    },
    // 187 - RParen: RParenToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 336,
        production: &[ParseType::N(338)],
    },
    // 188 - Semicolon: SemicolonToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 350,
        production: &[ParseType::N(352)],
    },
    // 189 - AlwaysComb: AlwaysCombToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 3,
        production: &[ParseType::N(7)],
    },
    // 190 - AlwaysFf: AlwaysFfToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 8,
        production: &[ParseType::N(19)],
    },
    // 191 - Assign: AssignToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 20,
        production: &[ParseType::N(23)],
    },
    // 192 - AsyncHigh: AsyncHighToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 29,
        production: &[ParseType::N(31)],
    },
    // 193 - AsyncLow: AsyncLowToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 32,
        production: &[ParseType::N(34)],
    },
    // 194 - Bit: BitToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 41,
        production: &[ParseType::N(43)],
    },
    // 195 - Else: ElseToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 65,
        production: &[ParseType::N(67)],
    },
    // 196 - Enum: EnumToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 68,
        production: &[ParseType::N(76)],
    },
    // 197 - F32: F32Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 108,
        production: &[ParseType::N(110)],
    },
    // 198 - F64: F64Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 111,
        production: &[ParseType::N(113)],
    },
    // 199 - For: ForToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 121,
        production: &[ParseType::N(126)],
    },
    // 200 - Function: FunctionToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 127,
        production: &[ParseType::N(137)],
    },
    // 201 - I32: I32Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 145,
        production: &[ParseType::N(147)],
    },
    // 202 - I64: I64Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 148,
        production: &[ParseType::N(150)],
    },
    // 203 - If: IfToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 154,
        production: &[ParseType::N(171)],
    },
    // 204 - IfReset: IfResetToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 155,
        production: &[ParseType::N(163)],
    },
    // 205 - In: InToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 172,
        production: &[ParseType::N(174)],
    },
    // 206 - Inout: InoutToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 175,
        production: &[ParseType::N(177)],
    },
    // 207 - Input: InputToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 178,
        production: &[ParseType::N(180)],
    },
    // 208 - Inst: InstToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 181,
        production: &[ParseType::N(200)],
    },
    // 209 - Interface: InterfaceToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 202,
        production: &[ParseType::N(219)],
    },
    // 210 - Let: LetToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 229,
        production: &[ParseType::N(233)],
    },
    // 211 - Localparam: LocalparamToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 234,
        production: &[ParseType::N(237)],
    },
    // 212 - Logic: LogicToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 238,
        production: &[ParseType::N(240)],
    },
    // 213 - Modport: ModportToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 247,
        production: &[ParseType::N(254)],
    },
    // 214 - Module: ModuleToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 255,
        production: &[ParseType::N(273)],
    },
    // 215 - Negedge: NegedgeToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 274,
        production: &[ParseType::N(276)],
    },
    // 216 - Output: OutputToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 311,
        production: &[ParseType::N(313)],
    },
    // 217 - Parameter: ParameterToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 314,
        production: &[ParseType::N(317)],
    },
    // 218 - Posedge: PosedgeToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 327,
        production: &[ParseType::N(329)],
    },
    // 219 - Ref: RefToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 343,
        production: &[ParseType::N(345)],
    },
    // 220 - Return: ReturnToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 346,
        production: &[ParseType::N(349)],
    },
    // 221 - Step: StepToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 356,
        production: &[ParseType::N(358)],
    },
    // 222 - Struct: StructToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 359,
        production: &[ParseType::N(366)],
    },
    // 223 - SyncHigh: SyncHighToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 367,
        production: &[ParseType::N(369)],
    },
    // 224 - SyncLow: SyncLowToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 370,
        production: &[ParseType::N(372)],
    },
    // 225 - U32: U32Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 376,
        production: &[ParseType::N(378)],
    },
    // 226 - U64: U64Token : crate::veryl_token::VerylToken ;
    Production {
        lhs: 379,
        production: &[ParseType::N(381)],
    },
    // 227 - Identifier: IdentifierToken : crate::veryl_token::VerylToken ;
    Production {
        lhs: 151,
        production: &[ParseType::N(153)],
    },
    // 228 - Number: IntegralNumber;
    Production {
        lhs: 277,
        production: &[ParseType::N(201)],
    },
    // 229 - Number: RealNumber;
    Production {
        lhs: 277,
        production: &[ParseType::N(342)],
    },
    // 230 - IntegralNumber: Based;
    Production {
        lhs: 201,
        production: &[ParseType::N(38)],
    },
    // 231 - IntegralNumber: BaseLess;
    Production {
        lhs: 201,
        production: &[ParseType::N(35)],
    },
    // 232 - IntegralNumber: AllBit;
    Production {
        lhs: 201,
        production: &[ParseType::N(0)],
    },
    // 233 - RealNumber: FixedPoint;
    Production {
        lhs: 342,
        production: &[ParseType::N(118)],
    },
    // 234 - RealNumber: Exponent;
    Production {
        lhs: 342,
        production: &[ParseType::N(80)],
    },
    // 235 - HierarchicalIdentifier: Identifier HierarchicalIdentifierList /* Vec */ HierarchicalIdentifierList0 /* Vec */;
    Production {
        lhs: 141,
        production: &[ParseType::N(143), ParseType::N(142), ParseType::N(151)],
    },
    // 236 - HierarchicalIdentifierList0: Dot Identifier HierarchicalIdentifierList0List /* Vec */ HierarchicalIdentifierList0;
    Production {
        lhs: 143,
        production: &[
            ParseType::N(143),
            ParseType::N(144),
            ParseType::N(151),
            ParseType::N(59),
        ],
    },
    // 237 - HierarchicalIdentifierList0List: Range HierarchicalIdentifierList0List;
    Production {
        lhs: 144,
        production: &[ParseType::N(144), ParseType::N(339)],
    },
    // 238 - HierarchicalIdentifierList0List: ;
    Production {
        lhs: 144,
        production: &[],
    },
    // 239 - HierarchicalIdentifierList0: ;
    Production {
        lhs: 143,
        production: &[],
    },
    // 240 - HierarchicalIdentifierList: Range HierarchicalIdentifierList;
    Production {
        lhs: 142,
        production: &[ParseType::N(142), ParseType::N(339)],
    },
    // 241 - HierarchicalIdentifierList: ;
    Production {
        lhs: 142,
        production: &[],
    },
    // 242 - Expression: Expression01 ExpressionList /* Vec */;
    Production {
        lhs: 83,
        production: &[ParseType::N(107), ParseType::N(84)],
    },
    // 243 - ExpressionList: Operator01 Expression01 ExpressionList;
    Production {
        lhs: 107,
        production: &[ParseType::N(107), ParseType::N(84), ParseType::N(278)],
    },
    // 244 - ExpressionList: ;
    Production {
        lhs: 107,
        production: &[],
    },
    // 245 - Expression01: Expression02 Expression01List /* Vec */;
    Production {
        lhs: 84,
        production: &[ParseType::N(85), ParseType::N(86)],
    },
    // 246 - Expression01List: Operator02 Expression02 Expression01List;
    Production {
        lhs: 85,
        production: &[ParseType::N(85), ParseType::N(86), ParseType::N(281)],
    },
    // 247 - Expression01List: ;
    Production {
        lhs: 85,
        production: &[],
    },
    // 248 - Expression02: Expression03 Expression02List /* Vec */;
    Production {
        lhs: 86,
        production: &[ParseType::N(87), ParseType::N(88)],
    },
    // 249 - Expression02List: Operator03 Expression03 Expression02List;
    Production {
        lhs: 87,
        production: &[ParseType::N(87), ParseType::N(88), ParseType::N(284)],
    },
    // 250 - Expression02List: ;
    Production {
        lhs: 87,
        production: &[],
    },
    // 251 - Expression03: Expression04 Expression03List /* Vec */;
    Production {
        lhs: 88,
        production: &[ParseType::N(89), ParseType::N(90)],
    },
    // 252 - Expression03List: Operator04 Expression04 Expression03List;
    Production {
        lhs: 89,
        production: &[ParseType::N(89), ParseType::N(90), ParseType::N(287)],
    },
    // 253 - Expression03List: ;
    Production {
        lhs: 89,
        production: &[],
    },
    // 254 - Expression04: Expression05 Expression04List /* Vec */;
    Production {
        lhs: 90,
        production: &[ParseType::N(91), ParseType::N(92)],
    },
    // 255 - Expression04List: Operator05 Expression05 Expression04List;
    Production {
        lhs: 91,
        production: &[ParseType::N(91), ParseType::N(92), ParseType::N(290)],
    },
    // 256 - Expression04List: ;
    Production {
        lhs: 91,
        production: &[],
    },
    // 257 - Expression05: Expression06 Expression05List /* Vec */;
    Production {
        lhs: 92,
        production: &[ParseType::N(93), ParseType::N(94)],
    },
    // 258 - Expression05List: Operator06 Expression06 Expression05List;
    Production {
        lhs: 93,
        production: &[ParseType::N(93), ParseType::N(94), ParseType::N(293)],
    },
    // 259 - Expression05List: ;
    Production {
        lhs: 93,
        production: &[],
    },
    // 260 - Expression06: Expression07 Expression06List /* Vec */;
    Production {
        lhs: 94,
        production: &[ParseType::N(95), ParseType::N(96)],
    },
    // 261 - Expression06List: Operator07 Expression07 Expression06List;
    Production {
        lhs: 95,
        production: &[ParseType::N(95), ParseType::N(96), ParseType::N(296)],
    },
    // 262 - Expression06List: ;
    Production {
        lhs: 95,
        production: &[],
    },
    // 263 - Expression07: Expression08 Expression07List /* Vec */;
    Production {
        lhs: 96,
        production: &[ParseType::N(97), ParseType::N(98)],
    },
    // 264 - Expression07List: Operator08 Expression08 Expression07List;
    Production {
        lhs: 97,
        production: &[ParseType::N(97), ParseType::N(98), ParseType::N(299)],
    },
    // 265 - Expression07List: ;
    Production {
        lhs: 97,
        production: &[],
    },
    // 266 - Expression08: Expression09 Expression08List /* Vec */;
    Production {
        lhs: 98,
        production: &[ParseType::N(99), ParseType::N(100)],
    },
    // 267 - Expression08List: Operator09 Expression09 Expression08List;
    Production {
        lhs: 99,
        production: &[ParseType::N(99), ParseType::N(100), ParseType::N(302)],
    },
    // 268 - Expression08List: ;
    Production {
        lhs: 99,
        production: &[],
    },
    // 269 - Expression09: Expression10 Expression09List /* Vec */;
    Production {
        lhs: 100,
        production: &[ParseType::N(101), ParseType::N(102)],
    },
    // 270 - Expression09List: Operator10 Expression10 Expression09List;
    Production {
        lhs: 101,
        production: &[ParseType::N(101), ParseType::N(102), ParseType::N(305)],
    },
    // 271 - Expression09List: ;
    Production {
        lhs: 101,
        production: &[],
    },
    // 272 - Expression10: Expression11 Expression10List /* Vec */;
    Production {
        lhs: 102,
        production: &[ParseType::N(103), ParseType::N(104)],
    },
    // 273 - Expression10List: Operator11 Expression11 Expression10List;
    Production {
        lhs: 103,
        production: &[ParseType::N(103), ParseType::N(104), ParseType::N(308)],
    },
    // 274 - Expression10List: ;
    Production {
        lhs: 103,
        production: &[],
    },
    // 275 - Expression11: Expression11Opt /* Option */ Factor;
    Production {
        lhs: 104,
        production: &[ParseType::N(114), ParseType::N(105)],
    },
    // 276 - Expression11Opt: Expression11OptGroup;
    Production {
        lhs: 105,
        production: &[ParseType::N(106)],
    },
    // 277 - Expression11OptGroup: UnaryOperator;
    Production {
        lhs: 106,
        production: &[ParseType::N(382)],
    },
    // 278 - Expression11OptGroup: Operator09;
    Production {
        lhs: 106,
        production: &[ParseType::N(302)],
    },
    // 279 - Expression11OptGroup: Operator05;
    Production {
        lhs: 106,
        production: &[ParseType::N(290)],
    },
    // 280 - Expression11OptGroup: Operator03;
    Production {
        lhs: 106,
        production: &[ParseType::N(284)],
    },
    // 281 - Expression11OptGroup: Operator04;
    Production {
        lhs: 106,
        production: &[ParseType::N(287)],
    },
    // 282 - Expression11Opt: ;
    Production {
        lhs: 105,
        production: &[],
    },
    // 283 - Factor: Number;
    Production {
        lhs: 114,
        production: &[ParseType::N(277)],
    },
    // 284 - Factor: FactorOpt /* Option */ HierarchicalIdentifier FactorOpt0 /* Option */;
    Production {
        lhs: 114,
        production: &[ParseType::N(116), ParseType::N(141), ParseType::N(115)],
    },
    // 285 - Factor: LParen Expression RParen;
    Production {
        lhs: 114,
        production: &[ParseType::N(336), ParseType::N(83), ParseType::N(226)],
    },
    // 286 - FactorOpt0: LParen FactorOpt1 /* Option */ RParen;
    Production {
        lhs: 116,
        production: &[ParseType::N(336), ParseType::N(117), ParseType::N(226)],
    },
    // 287 - FactorOpt1: FunctionCallArg;
    Production {
        lhs: 117,
        production: &[ParseType::N(128)],
    },
    // 288 - FactorOpt1: ;
    Production {
        lhs: 117,
        production: &[],
    },
    // 289 - FactorOpt0: ;
    Production {
        lhs: 116,
        production: &[],
    },
    // 290 - FactorOpt: Dollar;
    Production {
        lhs: 115,
        production: &[ParseType::N(56)],
    },
    // 291 - FactorOpt: ;
    Production {
        lhs: 115,
        production: &[],
    },
    // 292 - FunctionCallArg: Expression FunctionCallArgList /* Vec */ FunctionCallArgOpt /* Option */;
    Production {
        lhs: 128,
        production: &[ParseType::N(130), ParseType::N(129), ParseType::N(83)],
    },
    // 293 - FunctionCallArgList: Comma Expression FunctionCallArgList;
    Production {
        lhs: 129,
        production: &[ParseType::N(129), ParseType::N(83), ParseType::N(48)],
    },
    // 294 - FunctionCallArgList: ;
    Production {
        lhs: 129,
        production: &[],
    },
    // 295 - FunctionCallArgOpt: Comma;
    Production {
        lhs: 130,
        production: &[ParseType::N(48)],
    },
    // 296 - FunctionCallArgOpt: ;
    Production {
        lhs: 130,
        production: &[],
    },
    // 297 - Range: LBracket Expression RangeOpt /* Option */ RBracket;
    Production {
        lhs: 339,
        production: &[
            ParseType::N(333),
            ParseType::N(341),
            ParseType::N(83),
            ParseType::N(223),
        ],
    },
    // 298 - RangeOpt: RangeOperator Expression;
    Production {
        lhs: 341,
        production: &[ParseType::N(83), ParseType::N(340)],
    },
    // 299 - RangeOpt: ;
    Production {
        lhs: 341,
        production: &[],
    },
    // 300 - RangeOperator: Colon;
    Production {
        lhs: 340,
        production: &[ParseType::N(45)],
    },
    // 301 - RangeOperator: PlusColon;
    Production {
        lhs: 340,
        production: &[ParseType::N(318)],
    },
    // 302 - RangeOperator: MinusColon;
    Production {
        lhs: 340,
        production: &[ParseType::N(241)],
    },
    // 303 - RangeOperator: Step;
    Production {
        lhs: 340,
        production: &[ParseType::N(356)],
    },
    // 304 - Width: LBracket Expression RBracket;
    Production {
        lhs: 387,
        production: &[ParseType::N(333), ParseType::N(83), ParseType::N(223)],
    },
    // 305 - BuiltinType: Logic;
    Production {
        lhs: 44,
        production: &[ParseType::N(238)],
    },
    // 306 - BuiltinType: Bit;
    Production {
        lhs: 44,
        production: &[ParseType::N(41)],
    },
    // 307 - BuiltinType: U32;
    Production {
        lhs: 44,
        production: &[ParseType::N(376)],
    },
    // 308 - BuiltinType: U64;
    Production {
        lhs: 44,
        production: &[ParseType::N(379)],
    },
    // 309 - BuiltinType: I32;
    Production {
        lhs: 44,
        production: &[ParseType::N(145)],
    },
    // 310 - BuiltinType: I64;
    Production {
        lhs: 44,
        production: &[ParseType::N(148)],
    },
    // 311 - BuiltinType: F32;
    Production {
        lhs: 44,
        production: &[ParseType::N(108)],
    },
    // 312 - BuiltinType: F64;
    Production {
        lhs: 44,
        production: &[ParseType::N(111)],
    },
    // 313 - Type: TypeGroup TypeList /* Vec */;
    Production {
        lhs: 373,
        production: &[ParseType::N(375), ParseType::N(374)],
    },
    // 314 - TypeGroup: BuiltinType;
    Production {
        lhs: 374,
        production: &[ParseType::N(44)],
    },
    // 315 - TypeGroup: Identifier;
    Production {
        lhs: 374,
        production: &[ParseType::N(151)],
    },
    // 316 - TypeList: Width TypeList;
    Production {
        lhs: 375,
        production: &[ParseType::N(375), ParseType::N(387)],
    },
    // 317 - TypeList: ;
    Production {
        lhs: 375,
        production: &[],
    },
    // 318 - Statement: AssignmentStatement;
    Production {
        lhs: 355,
        production: &[ParseType::N(27)],
    },
    // 319 - Statement: IfStatement;
    Production {
        lhs: 355,
        production: &[ParseType::N(164)],
    },
    // 320 - Statement: IfResetStatement;
    Production {
        lhs: 355,
        production: &[ParseType::N(156)],
    },
    // 321 - Statement: ReturnStatement;
    Production {
        lhs: 355,
        production: &[ParseType::N(347)],
    },
    // 322 - Statement: ForStatement;
    Production {
        lhs: 355,
        production: &[ParseType::N(122)],
    },
    // 323 - AssignmentStatement: HierarchicalIdentifier AssignmentStatementGroup Expression Semicolon;
    Production {
        lhs: 27,
        production: &[
            ParseType::N(350),
            ParseType::N(83),
            ParseType::N(28),
            ParseType::N(141),
        ],
    },
    // 324 - AssignmentStatementGroup: Equ;
    Production {
        lhs: 28,
        production: &[ParseType::N(77)],
    },
    // 325 - AssignmentStatementGroup: AssignmentOperator;
    Production {
        lhs: 28,
        production: &[ParseType::N(24)],
    },
    // 326 - IfStatement: If Expression LBrace IfStatementList /* Vec */ RBrace IfStatementList0 /* Vec */ IfStatementOpt /* Option */;
    Production {
        lhs: 164,
        production: &[
            ParseType::N(168),
            ParseType::N(166),
            ParseType::N(330),
            ParseType::N(165),
            ParseType::N(220),
            ParseType::N(83),
            ParseType::N(154),
        ],
    },
    // 327 - IfStatementList0: Else If Expression LBrace IfStatementList0List /* Vec */ RBrace IfStatementList0;
    Production {
        lhs: 166,
        production: &[
            ParseType::N(166),
            ParseType::N(330),
            ParseType::N(167),
            ParseType::N(220),
            ParseType::N(83),
            ParseType::N(154),
            ParseType::N(65),
        ],
    },
    // 328 - IfStatementList0List: Statement IfStatementList0List;
    Production {
        lhs: 167,
        production: &[ParseType::N(167), ParseType::N(355)],
    },
    // 329 - IfStatementList0List: ;
    Production {
        lhs: 167,
        production: &[],
    },
    // 330 - IfStatementList0: ;
    Production {
        lhs: 166,
        production: &[],
    },
    // 331 - IfStatementList: Statement IfStatementList;
    Production {
        lhs: 165,
        production: &[ParseType::N(165), ParseType::N(355)],
    },
    // 332 - IfStatementList: ;
    Production {
        lhs: 165,
        production: &[],
    },
    // 333 - IfStatementOpt: Else LBrace IfStatementOptList /* Vec */ RBrace;
    Production {
        lhs: 168,
        production: &[
            ParseType::N(330),
            ParseType::N(169),
            ParseType::N(220),
            ParseType::N(65),
        ],
    },
    // 334 - IfStatementOptList: Statement IfStatementOptList;
    Production {
        lhs: 169,
        production: &[ParseType::N(169), ParseType::N(355)],
    },
    // 335 - IfStatementOptList: ;
    Production {
        lhs: 169,
        production: &[],
    },
    // 336 - IfStatementOpt: ;
    Production {
        lhs: 168,
        production: &[],
    },
    // 337 - IfResetStatement: IfReset LBrace IfResetStatementList /* Vec */ RBrace IfResetStatementList0 /* Vec */ IfResetStatementOpt /* Option */;
    Production {
        lhs: 156,
        production: &[
            ParseType::N(160),
            ParseType::N(158),
            ParseType::N(330),
            ParseType::N(157),
            ParseType::N(220),
            ParseType::N(155),
        ],
    },
    // 338 - IfResetStatementList0: Else If Expression LBrace IfResetStatementList0List /* Vec */ RBrace IfResetStatementList0;
    Production {
        lhs: 158,
        production: &[
            ParseType::N(158),
            ParseType::N(330),
            ParseType::N(159),
            ParseType::N(220),
            ParseType::N(83),
            ParseType::N(154),
            ParseType::N(65),
        ],
    },
    // 339 - IfResetStatementList0List: Statement IfResetStatementList0List;
    Production {
        lhs: 159,
        production: &[ParseType::N(159), ParseType::N(355)],
    },
    // 340 - IfResetStatementList0List: ;
    Production {
        lhs: 159,
        production: &[],
    },
    // 341 - IfResetStatementList0: ;
    Production {
        lhs: 158,
        production: &[],
    },
    // 342 - IfResetStatementList: Statement IfResetStatementList;
    Production {
        lhs: 157,
        production: &[ParseType::N(157), ParseType::N(355)],
    },
    // 343 - IfResetStatementList: ;
    Production {
        lhs: 157,
        production: &[],
    },
    // 344 - IfResetStatementOpt: Else LBrace IfResetStatementOptList /* Vec */ RBrace;
    Production {
        lhs: 160,
        production: &[
            ParseType::N(330),
            ParseType::N(161),
            ParseType::N(220),
            ParseType::N(65),
        ],
    },
    // 345 - IfResetStatementOptList: Statement IfResetStatementOptList;
    Production {
        lhs: 161,
        production: &[ParseType::N(161), ParseType::N(355)],
    },
    // 346 - IfResetStatementOptList: ;
    Production {
        lhs: 161,
        production: &[],
    },
    // 347 - IfResetStatementOpt: ;
    Production {
        lhs: 160,
        production: &[],
    },
    // 348 - ReturnStatement: Return Expression Semicolon;
    Production {
        lhs: 347,
        production: &[ParseType::N(350), ParseType::N(83), ParseType::N(346)],
    },
    // 349 - ForStatement: For Identifier Colon Type In Expression DotDot Expression ForStatementOpt /* Option */ LBrace ForStatementList /* Vec */ RBrace;
    Production {
        lhs: 122,
        production: &[
            ParseType::N(330),
            ParseType::N(123),
            ParseType::N(220),
            ParseType::N(124),
            ParseType::N(83),
            ParseType::N(60),
            ParseType::N(83),
            ParseType::N(172),
            ParseType::N(373),
            ParseType::N(45),
            ParseType::N(151),
            ParseType::N(121),
        ],
    },
    // 350 - ForStatementList: Statement ForStatementList;
    Production {
        lhs: 123,
        production: &[ParseType::N(123), ParseType::N(355)],
    },
    // 351 - ForStatementList: ;
    Production {
        lhs: 123,
        production: &[],
    },
    // 352 - ForStatementOpt: Step AssignmentOperator Expression;
    Production {
        lhs: 124,
        production: &[ParseType::N(83), ParseType::N(24), ParseType::N(356)],
    },
    // 353 - ForStatementOpt: ;
    Production {
        lhs: 124,
        production: &[],
    },
    // 354 - LetDeclaration: Let Identifier Colon Type LetDeclarationOpt /* Option */ Semicolon;
    Production {
        lhs: 230,
        production: &[
            ParseType::N(350),
            ParseType::N(231),
            ParseType::N(373),
            ParseType::N(45),
            ParseType::N(151),
            ParseType::N(229),
        ],
    },
    // 355 - LetDeclarationOpt: Equ Expression;
    Production {
        lhs: 231,
        production: &[ParseType::N(83), ParseType::N(77)],
    },
    // 356 - LetDeclarationOpt: ;
    Production {
        lhs: 231,
        production: &[],
    },
    // 357 - ParameterDeclaration: Parameter Identifier Colon Type Equ Expression Semicolon;
    Production {
        lhs: 315,
        production: &[
            ParseType::N(350),
            ParseType::N(83),
            ParseType::N(77),
            ParseType::N(373),
            ParseType::N(45),
            ParseType::N(151),
            ParseType::N(314),
        ],
    },
    // 358 - LocalparamDeclaration: Localparam Identifier Colon Type Equ Expression Semicolon;
    Production {
        lhs: 235,
        production: &[
            ParseType::N(350),
            ParseType::N(83),
            ParseType::N(77),
            ParseType::N(373),
            ParseType::N(45),
            ParseType::N(151),
            ParseType::N(234),
        ],
    },
    // 359 - AlwaysFfDeclaration: AlwaysFf LParen AlwaysFfClock AlwaysFfDeclarationOpt /* Option */ RParen LBrace AlwaysFfDeclarationList /* Vec */ RBrace;
    Production {
        lhs: 12,
        production: &[
            ParseType::N(330),
            ParseType::N(13),
            ParseType::N(220),
            ParseType::N(336),
            ParseType::N(14),
            ParseType::N(9),
            ParseType::N(226),
            ParseType::N(8),
        ],
    },
    // 360 - AlwaysFfDeclarationList: Statement AlwaysFfDeclarationList;
    Production {
        lhs: 13,
        production: &[ParseType::N(13), ParseType::N(355)],
    },
    // 361 - AlwaysFfDeclarationList: ;
    Production {
        lhs: 13,
        production: &[],
    },
    // 362 - AlwaysFfDeclarationOpt: Comma AlwaysFfReset;
    Production {
        lhs: 14,
        production: &[ParseType::N(15), ParseType::N(48)],
    },
    // 363 - AlwaysFfDeclarationOpt: ;
    Production {
        lhs: 14,
        production: &[],
    },
    // 364 - AlwaysFfClock: AlwaysFfClockOpt /* Option */ HierarchicalIdentifier;
    Production {
        lhs: 9,
        production: &[ParseType::N(141), ParseType::N(10)],
    },
    // 365 - AlwaysFfClockOpt: AlwaysFfClockOptGroup;
    Production {
        lhs: 10,
        production: &[ParseType::N(11)],
    },
    // 366 - AlwaysFfClockOptGroup: Posedge;
    Production {
        lhs: 11,
        production: &[ParseType::N(327)],
    },
    // 367 - AlwaysFfClockOptGroup: Negedge;
    Production {
        lhs: 11,
        production: &[ParseType::N(274)],
    },
    // 368 - AlwaysFfClockOpt: ;
    Production {
        lhs: 10,
        production: &[],
    },
    // 369 - AlwaysFfReset: AlwaysFfResetOpt /* Option */ HierarchicalIdentifier;
    Production {
        lhs: 15,
        production: &[ParseType::N(141), ParseType::N(16)],
    },
    // 370 - AlwaysFfResetOpt: AlwaysFfResetOptGroup;
    Production {
        lhs: 16,
        production: &[ParseType::N(17)],
    },
    // 371 - AlwaysFfResetOptGroup: AsyncLow;
    Production {
        lhs: 17,
        production: &[ParseType::N(32)],
    },
    // 372 - AlwaysFfResetOptGroup: AsyncHigh;
    Production {
        lhs: 17,
        production: &[ParseType::N(29)],
    },
    // 373 - AlwaysFfResetOptGroup: SyncLow;
    Production {
        lhs: 17,
        production: &[ParseType::N(370)],
    },
    // 374 - AlwaysFfResetOptGroup: SyncHigh;
    Production {
        lhs: 17,
        production: &[ParseType::N(367)],
    },
    // 375 - AlwaysFfResetOpt: ;
    Production {
        lhs: 16,
        production: &[],
    },
    // 376 - AlwaysCombDeclaration: AlwaysComb LBrace AlwaysCombDeclarationList /* Vec */ RBrace;
    Production {
        lhs: 4,
        production: &[
            ParseType::N(330),
            ParseType::N(5),
            ParseType::N(220),
            ParseType::N(3),
        ],
    },
    // 377 - AlwaysCombDeclarationList: Statement AlwaysCombDeclarationList;
    Production {
        lhs: 5,
        production: &[ParseType::N(5), ParseType::N(355)],
    },
    // 378 - AlwaysCombDeclarationList: ;
    Production {
        lhs: 5,
        production: &[],
    },
    // 379 - AssignDeclaration: Assign HierarchicalIdentifier Equ Expression Semicolon;
    Production {
        lhs: 21,
        production: &[
            ParseType::N(350),
            ParseType::N(83),
            ParseType::N(77),
            ParseType::N(141),
            ParseType::N(20),
        ],
    },
    // 380 - ModportDeclaration: Modport Identifier LBrace ModportList RBrace;
    Production {
        lhs: 248,
        production: &[
            ParseType::N(330),
            ParseType::N(250),
            ParseType::N(220),
            ParseType::N(151),
            ParseType::N(247),
        ],
    },
    // 381 - ModportList: ModportItem ModportListList /* Vec */ ModportListOpt /* Option */;
    Production {
        lhs: 250,
        production: &[ParseType::N(252), ParseType::N(251), ParseType::N(249)],
    },
    // 382 - ModportListList: Comma ModportItem ModportListList;
    Production {
        lhs: 251,
        production: &[ParseType::N(251), ParseType::N(249), ParseType::N(48)],
    },
    // 383 - ModportListList: ;
    Production {
        lhs: 251,
        production: &[],
    },
    // 384 - ModportListOpt: Comma;
    Production {
        lhs: 252,
        production: &[ParseType::N(48)],
    },
    // 385 - ModportListOpt: ;
    Production {
        lhs: 252,
        production: &[],
    },
    // 386 - ModportItem: Identifier Colon Direction;
    Production {
        lhs: 249,
        production: &[ParseType::N(55), ParseType::N(45), ParseType::N(151)],
    },
    // 387 - EnumDeclaration: Enum Identifier Colon Type LBrace EnumList RBrace;
    Production {
        lhs: 69,
        production: &[
            ParseType::N(330),
            ParseType::N(72),
            ParseType::N(220),
            ParseType::N(373),
            ParseType::N(45),
            ParseType::N(151),
            ParseType::N(68),
        ],
    },
    // 388 - EnumList: EnumItem EnumListList /* Vec */ EnumListOpt /* Option */;
    Production {
        lhs: 72,
        production: &[ParseType::N(74), ParseType::N(73), ParseType::N(70)],
    },
    // 389 - EnumListList: Comma EnumItem EnumListList;
    Production {
        lhs: 73,
        production: &[ParseType::N(73), ParseType::N(70), ParseType::N(48)],
    },
    // 390 - EnumListList: ;
    Production {
        lhs: 73,
        production: &[],
    },
    // 391 - EnumListOpt: Comma;
    Production {
        lhs: 74,
        production: &[ParseType::N(48)],
    },
    // 392 - EnumListOpt: ;
    Production {
        lhs: 74,
        production: &[],
    },
    // 393 - EnumItem: Identifier EnumItemOpt /* Option */;
    Production {
        lhs: 70,
        production: &[ParseType::N(71), ParseType::N(151)],
    },
    // 394 - EnumItemOpt: Equ Expression;
    Production {
        lhs: 71,
        production: &[ParseType::N(83), ParseType::N(77)],
    },
    // 395 - EnumItemOpt: ;
    Production {
        lhs: 71,
        production: &[],
    },
    // 396 - StructDeclaration: Struct Identifier LBrace StructList RBrace;
    Production {
        lhs: 360,
        production: &[
            ParseType::N(330),
            ParseType::N(362),
            ParseType::N(220),
            ParseType::N(151),
            ParseType::N(359),
        ],
    },
    // 397 - StructList: StructItem StructListList /* Vec */ StructListOpt /* Option */;
    Production {
        lhs: 362,
        production: &[ParseType::N(364), ParseType::N(363), ParseType::N(361)],
    },
    // 398 - StructListList: Comma StructItem StructListList;
    Production {
        lhs: 363,
        production: &[ParseType::N(363), ParseType::N(361), ParseType::N(48)],
    },
    // 399 - StructListList: ;
    Production {
        lhs: 363,
        production: &[],
    },
    // 400 - StructListOpt: Comma;
    Production {
        lhs: 364,
        production: &[ParseType::N(48)],
    },
    // 401 - StructListOpt: ;
    Production {
        lhs: 364,
        production: &[],
    },
    // 402 - StructItem: Identifier Colon Type;
    Production {
        lhs: 361,
        production: &[ParseType::N(373), ParseType::N(45), ParseType::N(151)],
    },
    // 403 - InstDeclaration: Inst Identifier Colon Identifier InstDeclarationOpt /* Option */ InstDeclarationOpt0 /* Option */ InstDeclarationOpt1 /* Option */ Semicolon;
    Production {
        lhs: 182,
        production: &[
            ParseType::N(350),
            ParseType::N(185),
            ParseType::N(184),
            ParseType::N(183),
            ParseType::N(151),
            ParseType::N(45),
            ParseType::N(151),
            ParseType::N(181),
        ],
    },
    // 404 - InstDeclarationOpt1: LBrace InstDeclarationOpt2 /* Option */ RBrace;
    Production {
        lhs: 185,
        production: &[ParseType::N(330), ParseType::N(186), ParseType::N(220)],
    },
    // 405 - InstDeclarationOpt2: InstPortList;
    Production {
        lhs: 186,
        production: &[ParseType::N(196)],
    },
    // 406 - InstDeclarationOpt2: ;
    Production {
        lhs: 186,
        production: &[],
    },
    // 407 - InstDeclarationOpt1: ;
    Production {
        lhs: 185,
        production: &[],
    },
    // 408 - InstDeclarationOpt0: InstParameter;
    Production {
        lhs: 184,
        production: &[ParseType::N(187)],
    },
    // 409 - InstDeclarationOpt0: ;
    Production {
        lhs: 184,
        production: &[],
    },
    // 410 - InstDeclarationOpt: Width;
    Production {
        lhs: 183,
        production: &[ParseType::N(387)],
    },
    // 411 - InstDeclarationOpt: ;
    Production {
        lhs: 183,
        production: &[],
    },
    // 412 - InstParameter: Hash LParen InstParameterOpt /* Option */ RParen;
    Production {
        lhs: 187,
        production: &[
            ParseType::N(336),
            ParseType::N(193),
            ParseType::N(226),
            ParseType::N(138),
        ],
    },
    // 413 - InstParameterOpt: InstParameterList;
    Production {
        lhs: 193,
        production: &[ParseType::N(190)],
    },
    // 414 - InstParameterOpt: ;
    Production {
        lhs: 193,
        production: &[],
    },
    // 415 - InstParameterList: InstParameterItem InstParameterListList /* Vec */ InstParameterListOpt /* Option */;
    Production {
        lhs: 190,
        production: &[ParseType::N(192), ParseType::N(191), ParseType::N(188)],
    },
    // 416 - InstParameterListList: Comma InstParameterItem InstParameterListList;
    Production {
        lhs: 191,
        production: &[ParseType::N(191), ParseType::N(188), ParseType::N(48)],
    },
    // 417 - InstParameterListList: ;
    Production {
        lhs: 191,
        production: &[],
    },
    // 418 - InstParameterListOpt: Comma;
    Production {
        lhs: 192,
        production: &[ParseType::N(48)],
    },
    // 419 - InstParameterListOpt: ;
    Production {
        lhs: 192,
        production: &[],
    },
    // 420 - InstParameterItem: Identifier InstParameterItemOpt /* Option */;
    Production {
        lhs: 188,
        production: &[ParseType::N(189), ParseType::N(151)],
    },
    // 421 - InstParameterItemOpt: Colon Expression;
    Production {
        lhs: 189,
        production: &[ParseType::N(83), ParseType::N(45)],
    },
    // 422 - InstParameterItemOpt: ;
    Production {
        lhs: 189,
        production: &[],
    },
    // 423 - InstPortList: InstPortItem InstPortListList /* Vec */ InstPortListOpt /* Option */;
    Production {
        lhs: 196,
        production: &[ParseType::N(198), ParseType::N(197), ParseType::N(194)],
    },
    // 424 - InstPortListList: Comma InstPortItem InstPortListList;
    Production {
        lhs: 197,
        production: &[ParseType::N(197), ParseType::N(194), ParseType::N(48)],
    },
    // 425 - InstPortListList: ;
    Production {
        lhs: 197,
        production: &[],
    },
    // 426 - InstPortListOpt: Comma;
    Production {
        lhs: 198,
        production: &[ParseType::N(48)],
    },
    // 427 - InstPortListOpt: ;
    Production {
        lhs: 198,
        production: &[],
    },
    // 428 - InstPortItem: Identifier InstPortItemOpt /* Option */;
    Production {
        lhs: 194,
        production: &[ParseType::N(195), ParseType::N(151)],
    },
    // 429 - InstPortItemOpt: Colon Expression;
    Production {
        lhs: 195,
        production: &[ParseType::N(83), ParseType::N(45)],
    },
    // 430 - InstPortItemOpt: ;
    Production {
        lhs: 195,
        production: &[],
    },
    // 431 - WithParameter: Hash LParen WithParameterOpt /* Option */ RParen;
    Production {
        lhs: 388,
        production: &[
            ParseType::N(336),
            ParseType::N(394),
            ParseType::N(226),
            ParseType::N(138),
        ],
    },
    // 432 - WithParameterOpt: WithParameterList;
    Production {
        lhs: 394,
        production: &[ParseType::N(391)],
    },
    // 433 - WithParameterOpt: ;
    Production {
        lhs: 394,
        production: &[],
    },
    // 434 - WithParameterList: WithParameterItem WithParameterListList /* Vec */ WithParameterListOpt /* Option */;
    Production {
        lhs: 391,
        production: &[ParseType::N(393), ParseType::N(392), ParseType::N(389)],
    },
    // 435 - WithParameterListList: Comma WithParameterItem WithParameterListList;
    Production {
        lhs: 392,
        production: &[ParseType::N(392), ParseType::N(389), ParseType::N(48)],
    },
    // 436 - WithParameterListList: ;
    Production {
        lhs: 392,
        production: &[],
    },
    // 437 - WithParameterListOpt: Comma;
    Production {
        lhs: 393,
        production: &[ParseType::N(48)],
    },
    // 438 - WithParameterListOpt: ;
    Production {
        lhs: 393,
        production: &[],
    },
    // 439 - WithParameterItem: WithParameterItemGroup Identifier Colon Type Equ Expression;
    Production {
        lhs: 389,
        production: &[
            ParseType::N(83),
            ParseType::N(77),
            ParseType::N(373),
            ParseType::N(45),
            ParseType::N(151),
            ParseType::N(390),
        ],
    },
    // 440 - WithParameterItemGroup: Parameter;
    Production {
        lhs: 390,
        production: &[ParseType::N(314)],
    },
    // 441 - WithParameterItemGroup: Localparam;
    Production {
        lhs: 390,
        production: &[ParseType::N(234)],
    },
    // 442 - PortDeclaration: LParen PortDeclarationOpt /* Option */ RParen;
    Production {
        lhs: 321,
        production: &[ParseType::N(336), ParseType::N(326), ParseType::N(226)],
    },
    // 443 - PortDeclarationOpt: PortDeclarationList;
    Production {
        lhs: 326,
        production: &[ParseType::N(323)],
    },
    // 444 - PortDeclarationOpt: ;
    Production {
        lhs: 326,
        production: &[],
    },
    // 445 - PortDeclarationList: PortDeclarationItem PortDeclarationListList /* Vec */ PortDeclarationListOpt /* Option */;
    Production {
        lhs: 323,
        production: &[ParseType::N(325), ParseType::N(324), ParseType::N(322)],
    },
    // 446 - PortDeclarationListList: Comma PortDeclarationItem PortDeclarationListList;
    Production {
        lhs: 324,
        production: &[ParseType::N(324), ParseType::N(322), ParseType::N(48)],
    },
    // 447 - PortDeclarationListList: ;
    Production {
        lhs: 324,
        production: &[],
    },
    // 448 - PortDeclarationListOpt: Comma;
    Production {
        lhs: 325,
        production: &[ParseType::N(48)],
    },
    // 449 - PortDeclarationListOpt: ;
    Production {
        lhs: 325,
        production: &[],
    },
    // 450 - PortDeclarationItem: Identifier Colon Direction Type;
    Production {
        lhs: 322,
        production: &[
            ParseType::N(373),
            ParseType::N(55),
            ParseType::N(45),
            ParseType::N(151),
        ],
    },
    // 451 - Direction: Input;
    Production {
        lhs: 55,
        production: &[ParseType::N(178)],
    },
    // 452 - Direction: Output;
    Production {
        lhs: 55,
        production: &[ParseType::N(311)],
    },
    // 453 - Direction: Inout;
    Production {
        lhs: 55,
        production: &[ParseType::N(175)],
    },
    // 454 - Direction: Ref;
    Production {
        lhs: 55,
        production: &[ParseType::N(343)],
    },
    // 455 - FunctionDeclaration: Function Identifier FunctionDeclarationOpt /* Option */ FunctionDeclarationOpt0 /* Option */ MinusGT Type LBrace FunctionDeclarationList /* Vec */ RBrace;
    Production {
        lhs: 131,
        production: &[
            ParseType::N(330),
            ParseType::N(132),
            ParseType::N(220),
            ParseType::N(373),
            ParseType::N(244),
            ParseType::N(134),
            ParseType::N(133),
            ParseType::N(151),
            ParseType::N(127),
        ],
    },
    // 456 - FunctionDeclarationList: FunctionItem FunctionDeclarationList;
    Production {
        lhs: 132,
        production: &[ParseType::N(132), ParseType::N(135)],
    },
    // 457 - FunctionDeclarationList: ;
    Production {
        lhs: 132,
        production: &[],
    },
    // 458 - FunctionDeclarationOpt0: PortDeclaration;
    Production {
        lhs: 134,
        production: &[ParseType::N(321)],
    },
    // 459 - FunctionDeclarationOpt0: ;
    Production {
        lhs: 134,
        production: &[],
    },
    // 460 - FunctionDeclarationOpt: WithParameter;
    Production {
        lhs: 133,
        production: &[ParseType::N(388)],
    },
    // 461 - FunctionDeclarationOpt: ;
    Production {
        lhs: 133,
        production: &[],
    },
    // 462 - FunctionItem: LetDeclaration;
    Production {
        lhs: 135,
        production: &[ParseType::N(230)],
    },
    // 463 - FunctionItem: Statement;
    Production {
        lhs: 135,
        production: &[ParseType::N(355)],
    },
    // 464 - ModuleDeclaration: Module Identifier ModuleDeclarationOpt /* Option */ ModuleDeclarationOpt0 /* Option */ LBrace ModuleDeclarationList /* Vec */ RBrace;
    Production {
        lhs: 256,
        production: &[
            ParseType::N(330),
            ParseType::N(257),
            ParseType::N(220),
            ParseType::N(259),
            ParseType::N(258),
            ParseType::N(151),
            ParseType::N(255),
        ],
    },
    // 465 - ModuleDeclarationList: ModuleItem ModuleDeclarationList;
    Production {
        lhs: 257,
        production: &[ParseType::N(257), ParseType::N(271)],
    },
    // 466 - ModuleDeclarationList: ;
    Production {
        lhs: 257,
        production: &[],
    },
    // 467 - ModuleDeclarationOpt0: PortDeclaration;
    Production {
        lhs: 259,
        production: &[ParseType::N(321)],
    },
    // 468 - ModuleDeclarationOpt0: ;
    Production {
        lhs: 259,
        production: &[],
    },
    // 469 - ModuleDeclarationOpt: WithParameter;
    Production {
        lhs: 258,
        production: &[ParseType::N(388)],
    },
    // 470 - ModuleDeclarationOpt: ;
    Production {
        lhs: 258,
        production: &[],
    },
    // 471 - ModuleIfDeclaration: If Expression Colon Identifier LBrace ModuleIfDeclarationList /* Vec */ RBrace ModuleIfDeclarationList0 /* Vec */ ModuleIfDeclarationOpt0 /* Option */;
    Production {
        lhs: 263,
        production: &[
            ParseType::N(268),
            ParseType::N(265),
            ParseType::N(330),
            ParseType::N(264),
            ParseType::N(220),
            ParseType::N(151),
            ParseType::N(45),
            ParseType::N(83),
            ParseType::N(154),
        ],
    },
    // 472 - ModuleIfDeclarationList0: Else If Expression ModuleIfDeclarationOpt /* Option */ LBrace ModuleIfDeclarationList0List /* Vec */ RBrace ModuleIfDeclarationList0;
    Production {
        lhs: 265,
        production: &[
            ParseType::N(265),
            ParseType::N(330),
            ParseType::N(266),
            ParseType::N(220),
            ParseType::N(267),
            ParseType::N(83),
            ParseType::N(154),
            ParseType::N(65),
        ],
    },
    // 473 - ModuleIfDeclarationList0List: ModuleItem ModuleIfDeclarationList0List;
    Production {
        lhs: 266,
        production: &[ParseType::N(266), ParseType::N(271)],
    },
    // 474 - ModuleIfDeclarationList0List: ;
    Production {
        lhs: 266,
        production: &[],
    },
    // 475 - ModuleIfDeclarationList0: ;
    Production {
        lhs: 265,
        production: &[],
    },
    // 476 - ModuleIfDeclarationList: ModuleItem ModuleIfDeclarationList;
    Production {
        lhs: 264,
        production: &[ParseType::N(264), ParseType::N(271)],
    },
    // 477 - ModuleIfDeclarationList: ;
    Production {
        lhs: 264,
        production: &[],
    },
    // 478 - ModuleIfDeclarationOpt0: Else ModuleIfDeclarationOpt1 /* Option */ LBrace ModuleIfDeclarationOpt0List /* Vec */ RBrace;
    Production {
        lhs: 268,
        production: &[
            ParseType::N(330),
            ParseType::N(269),
            ParseType::N(220),
            ParseType::N(270),
            ParseType::N(65),
        ],
    },
    // 479 - ModuleIfDeclarationOpt0List: ModuleItem ModuleIfDeclarationOpt0List;
    Production {
        lhs: 269,
        production: &[ParseType::N(269), ParseType::N(271)],
    },
    // 480 - ModuleIfDeclarationOpt0List: ;
    Production {
        lhs: 269,
        production: &[],
    },
    // 481 - ModuleIfDeclarationOpt1: Colon Identifier;
    Production {
        lhs: 270,
        production: &[ParseType::N(151), ParseType::N(45)],
    },
    // 482 - ModuleIfDeclarationOpt1: ;
    Production {
        lhs: 270,
        production: &[],
    },
    // 483 - ModuleIfDeclarationOpt0: ;
    Production {
        lhs: 268,
        production: &[],
    },
    // 484 - ModuleIfDeclarationOpt: Colon Identifier;
    Production {
        lhs: 267,
        production: &[ParseType::N(151), ParseType::N(45)],
    },
    // 485 - ModuleIfDeclarationOpt: ;
    Production {
        lhs: 267,
        production: &[],
    },
    // 486 - ModuleForDeclaration: For Identifier In Expression DotDot Expression ModuleForDeclarationOpt /* Option */ Colon Identifier LBrace ModuleForDeclarationList /* Vec */ RBrace;
    Production {
        lhs: 260,
        production: &[
            ParseType::N(330),
            ParseType::N(261),
            ParseType::N(220),
            ParseType::N(151),
            ParseType::N(45),
            ParseType::N(262),
            ParseType::N(83),
            ParseType::N(60),
            ParseType::N(83),
            ParseType::N(172),
            ParseType::N(151),
            ParseType::N(121),
        ],
    },
    // 487 - ModuleForDeclarationList: ModuleItem ModuleForDeclarationList;
    Production {
        lhs: 261,
        production: &[ParseType::N(261), ParseType::N(271)],
    },
    // 488 - ModuleForDeclarationList: ;
    Production {
        lhs: 261,
        production: &[],
    },
    // 489 - ModuleForDeclarationOpt: Step AssignmentOperator Expression;
    Production {
        lhs: 262,
        production: &[ParseType::N(83), ParseType::N(24), ParseType::N(356)],
    },
    // 490 - ModuleForDeclarationOpt: ;
    Production {
        lhs: 262,
        production: &[],
    },
    // 491 - ModuleItem: LetDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(230)],
    },
    // 492 - ModuleItem: InstDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(182)],
    },
    // 493 - ModuleItem: ParameterDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(315)],
    },
    // 494 - ModuleItem: LocalparamDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(235)],
    },
    // 495 - ModuleItem: AlwaysFfDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(12)],
    },
    // 496 - ModuleItem: AlwaysCombDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(4)],
    },
    // 497 - ModuleItem: AssignDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(21)],
    },
    // 498 - ModuleItem: FunctionDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(131)],
    },
    // 499 - ModuleItem: ModuleIfDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(263)],
    },
    // 500 - ModuleItem: ModuleForDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(260)],
    },
    // 501 - ModuleItem: EnumDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(69)],
    },
    // 502 - ModuleItem: StructDeclaration;
    Production {
        lhs: 271,
        production: &[ParseType::N(360)],
    },
    // 503 - InterfaceDeclaration: Interface Identifier InterfaceDeclarationOpt /* Option */ LBrace InterfaceDeclarationList /* Vec */ RBrace;
    Production {
        lhs: 203,
        production: &[
            ParseType::N(330),
            ParseType::N(204),
            ParseType::N(220),
            ParseType::N(205),
            ParseType::N(151),
            ParseType::N(202),
        ],
    },
    // 504 - InterfaceDeclarationList: InterfaceItem InterfaceDeclarationList;
    Production {
        lhs: 204,
        production: &[ParseType::N(204), ParseType::N(217)],
    },
    // 505 - InterfaceDeclarationList: ;
    Production {
        lhs: 204,
        production: &[],
    },
    // 506 - InterfaceDeclarationOpt: WithParameter;
    Production {
        lhs: 205,
        production: &[ParseType::N(388)],
    },
    // 507 - InterfaceDeclarationOpt: ;
    Production {
        lhs: 205,
        production: &[],
    },
    // 508 - InterfaceIfDeclaration: If Expression Colon Identifier LBrace InterfaceIfDeclarationList /* Vec */ RBrace InterfaceIfDeclarationList0 /* Vec */ InterfaceIfDeclarationOpt0 /* Option */;
    Production {
        lhs: 209,
        production: &[
            ParseType::N(214),
            ParseType::N(211),
            ParseType::N(330),
            ParseType::N(210),
            ParseType::N(220),
            ParseType::N(151),
            ParseType::N(45),
            ParseType::N(83),
            ParseType::N(154),
        ],
    },
    // 509 - InterfaceIfDeclarationList0: Else If Expression InterfaceIfDeclarationOpt /* Option */ LBrace InterfaceIfDeclarationList0List /* Vec */ RBrace InterfaceIfDeclarationList0;
    Production {
        lhs: 211,
        production: &[
            ParseType::N(211),
            ParseType::N(330),
            ParseType::N(212),
            ParseType::N(220),
            ParseType::N(213),
            ParseType::N(83),
            ParseType::N(154),
            ParseType::N(65),
        ],
    },
    // 510 - InterfaceIfDeclarationList0List: InterfaceItem InterfaceIfDeclarationList0List;
    Production {
        lhs: 212,
        production: &[ParseType::N(212), ParseType::N(217)],
    },
    // 511 - InterfaceIfDeclarationList0List: ;
    Production {
        lhs: 212,
        production: &[],
    },
    // 512 - InterfaceIfDeclarationList0: ;
    Production {
        lhs: 211,
        production: &[],
    },
    // 513 - InterfaceIfDeclarationList: InterfaceItem InterfaceIfDeclarationList;
    Production {
        lhs: 210,
        production: &[ParseType::N(210), ParseType::N(217)],
    },
    // 514 - InterfaceIfDeclarationList: ;
    Production {
        lhs: 210,
        production: &[],
    },
    // 515 - InterfaceIfDeclarationOpt0: Else InterfaceIfDeclarationOpt1 /* Option */ LBrace InterfaceIfDeclarationOpt0List /* Vec */ RBrace;
    Production {
        lhs: 214,
        production: &[
            ParseType::N(330),
            ParseType::N(215),
            ParseType::N(220),
            ParseType::N(216),
            ParseType::N(65),
        ],
    },
    // 516 - InterfaceIfDeclarationOpt0List: InterfaceItem InterfaceIfDeclarationOpt0List;
    Production {
        lhs: 215,
        production: &[ParseType::N(215), ParseType::N(217)],
    },
    // 517 - InterfaceIfDeclarationOpt0List: ;
    Production {
        lhs: 215,
        production: &[],
    },
    // 518 - InterfaceIfDeclarationOpt1: Colon Identifier;
    Production {
        lhs: 216,
        production: &[ParseType::N(151), ParseType::N(45)],
    },
    // 519 - InterfaceIfDeclarationOpt1: ;
    Production {
        lhs: 216,
        production: &[],
    },
    // 520 - InterfaceIfDeclarationOpt0: ;
    Production {
        lhs: 214,
        production: &[],
    },
    // 521 - InterfaceIfDeclarationOpt: Colon Identifier;
    Production {
        lhs: 213,
        production: &[ParseType::N(151), ParseType::N(45)],
    },
    // 522 - InterfaceIfDeclarationOpt: ;
    Production {
        lhs: 213,
        production: &[],
    },
    // 523 - InterfaceForDeclaration: For Identifier In Expression DotDot Expression InterfaceForDeclarationOpt /* Option */ Colon Identifier LBrace InterfaceForDeclarationList /* Vec */ RBrace;
    Production {
        lhs: 206,
        production: &[
            ParseType::N(330),
            ParseType::N(207),
            ParseType::N(220),
            ParseType::N(151),
            ParseType::N(45),
            ParseType::N(208),
            ParseType::N(83),
            ParseType::N(60),
            ParseType::N(83),
            ParseType::N(172),
            ParseType::N(151),
            ParseType::N(121),
        ],
    },
    // 524 - InterfaceForDeclarationList: InterfaceItem InterfaceForDeclarationList;
    Production {
        lhs: 207,
        production: &[ParseType::N(207), ParseType::N(217)],
    },
    // 525 - InterfaceForDeclarationList: ;
    Production {
        lhs: 207,
        production: &[],
    },
    // 526 - InterfaceForDeclarationOpt: Step AssignmentOperator Expression;
    Production {
        lhs: 208,
        production: &[ParseType::N(83), ParseType::N(24), ParseType::N(356)],
    },
    // 527 - InterfaceForDeclarationOpt: ;
    Production {
        lhs: 208,
        production: &[],
    },
    // 528 - InterfaceItem: LetDeclaration;
    Production {
        lhs: 217,
        production: &[ParseType::N(230)],
    },
    // 529 - InterfaceItem: ParameterDeclaration;
    Production {
        lhs: 217,
        production: &[ParseType::N(315)],
    },
    // 530 - InterfaceItem: LocalparamDeclaration;
    Production {
        lhs: 217,
        production: &[ParseType::N(235)],
    },
    // 531 - InterfaceItem: ModportDeclaration;
    Production {
        lhs: 217,
        production: &[ParseType::N(248)],
    },
    // 532 - InterfaceItem: InterfaceIfDeclaration;
    Production {
        lhs: 217,
        production: &[ParseType::N(209)],
    },
    // 533 - InterfaceItem: InterfaceForDeclaration;
    Production {
        lhs: 217,
        production: &[ParseType::N(206)],
    },
    // 534 - InterfaceItem: EnumDeclaration;
    Production {
        lhs: 217,
        production: &[ParseType::N(69)],
    },
    // 535 - InterfaceItem: StructDeclaration;
    Production {
        lhs: 217,
        production: &[ParseType::N(360)],
    },
    // 536 - Description: ModuleDeclaration;
    Production {
        lhs: 54,
        production: &[ParseType::N(256)],
    },
    // 537 - Description: InterfaceDeclaration;
    Production {
        lhs: 54,
        production: &[ParseType::N(203)],
    },
    // 538 - Veryl: Start VerylList /* Vec */;
    Production {
        lhs: 385,
        production: &[ParseType::N(386), ParseType::N(353)],
    },
    // 539 - VerylList: Description VerylList;
    Production {
        lhs: 386,
        production: &[ParseType::N(386), ParseType::N(54)],
    },
    // 540 - VerylList: ;
    Production {
        lhs: 386,
        production: &[],
    },
];

static TOKENIZERS: Lazy<Vec<(&'static str, Tokenizer)>> = Lazy::new(|| {
    vec![(
        "INITIAL",
        Tokenizer::build(TERMINALS, SCANNER_0.0, SCANNER_0.1).unwrap(),
    )]
});

pub fn parse<'t, T>(
    input: &'t str,
    file_name: T,
    user_actions: &mut VerylGrammar,
) -> Result<Tree<ParseTreeType<'t>>>
where
    T: AsRef<Path>,
{
    let mut llk_parser = LLKParser::new(
        385,
        LOOKAHEAD_AUTOMATA,
        PRODUCTIONS,
        TERMINAL_NAMES,
        NON_TERMINALS,
    );
    let token_stream =
        RefCell::new(TokenStream::new(input, file_name, &TOKENIZERS, MAX_K).unwrap());
    // Initialize wrapper
    let mut user_actions = VerylGrammarAuto::new(user_actions);
    let result = llk_parser.parse(token_stream, &mut user_actions);
    match result {
        Ok(()) => Ok(llk_parser.parse_tree),
        Err(e) => Err(e),
    }
}
