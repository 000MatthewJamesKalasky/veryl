module ModuleA {
    // function without parameter
    function FuncA (
        a: input  logic [ParamX],
        b: output logic [ParamX],
        c: ref    logic [ParamX],
    ) -> logic [ParamX] {
        let d: u32  = 1;
        b = a + 1 + d;
        c = a / 1;
        return a + 2;
    }

    // function with parameter
    function FuncB #(
        parameter  ParamX: u32  = 1,
    ) (
        a: input  logic [ParamX],
        b: output logic [ParamX],
        c: ref    logic [ParamX],
    ) -> logic [ParamX] {
        b = a + 1;
        c = a / 1;
        return a + 2;
    }

    // function call
    assign a = FuncA (a, b, c);

    // function call with parameter
    //assign a = FuncB #(ParamX: 1) (a, b, c);

    // system function call
    assign a = $clog2 (a);
}
