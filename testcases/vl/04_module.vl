// module declaration
module ModuleA #(
    // module parameter
    parameter  a : u32  = 1,
    localparam aa: u32  = 1,
) (
    // module port
    a  : input  logic [10],
    aa : output logic [10],
    aaa: inout  logic [10],
) {
    // parameter declaration
    parameter  a : u32  = 1;
    localparam aa: u64  = 1;

    // variable declaration
    a  : logic         ;
    aa : logic [10]    ;
    aaa: bit   [10][10];

    // assign declaration
    assign a   = 1;
    assign aa  = 1;
    assign aaa = 1;

    // always_ff declaration with default polarity
    always_ff (i_clk, i_rst) {
        if_reset {
            a = b;
        } else if a {
            a = b[0];
        } else {
            a = c[5:0];
        }
    }

    // always_ff declaration without reset
    always_ff (i_clk) {
        if a {
            a = b;
        } else {
            a = c[5:0];
        }
    }

    // always_ff declaration with specified polarity
    always_ff (posedge i_clk, async_high i_rst) {
        if_reset {
            a = b;
        } else {
            a = c[5:0];
        }
    }
    always_ff (negedge i_clk, async_low i_rst) {
        if_reset {
            a = b;
        } else {
            a = c[5:0];
        }
    }
    always_ff (posedge i_clk, sync_high i_rst) {
        if_reset {
            a = b;
        } else {
            a = c[5:0];
        }
    }
    always_ff (negedge i_clk, sync_low i_rst) {
        if_reset {
            a = b;
        } else {
            a = c[5:0];
        }
    }

    // always_comb declaration
    always_comb {
        a   = 10;
        aa  = 10'b0;
        aaa = 10'b01z;

        a  = 10 + 10;
        aa = 10 + 16'hffff * (3 / 4);
    }

    // module instantiation
    b :: ModuleB #(
        a ,
        aa: 10,
    ) {
        a   ,
        bb  : aa,
        bbbb: bbb,
    }
}
