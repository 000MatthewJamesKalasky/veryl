module A {
    // priority 0: unary
    assign a = +1;
    assign a = -1;
    assign a = !1;
    assign a = ~1;
    assign a = &1;
    assign a = |1;
    assign a = ^1;
    assign a = ~&1;
    assign a = ~|1;
    assign a = ~^1;
    assign a = ^~1;

    // priority 1: power
    assign a = 1 ** 1;

    // priority 2: mul, div
    assign a = 1 * 1;
    assign a = 1 / 1;
    assign a = 1 % 1;

    // priority 3: add, sub
    assign a = 1 + 1;
    assign a = 1 - 1;

    // priority 4: shift

    // priority 5: compare

    // priority 6: equality

    // priority 7: bitwise and

    // priority 8: bitwise xor

    // priority 9: bitwise or

    // priority 10: and

    // priority 11: or

    // priority 12: conditional operator
}
